./ ADD NAME=ASMGASM
><       CHANGE    NAME=ASMGASM
         LA        R4,1(,R4)           INCREMENT LINE COUNT       V7A50
><       DELETE    SEQ1=03649426,SEQ2=03649826                    V7A50
         LH        R6,DCBLRECL(,R3)    GET LRECL OF FILE          V7A50
         BCTR      R6,0                DECREMENT BY ONE           V7A50
         CLC       DCBGET+1(3,R3),PUTOURTN+1  NEW ACCESS ADDR .Q  V7A50
         BCR       8,R10               RETURN IF NOT              V7A50
         MVC       L1DCBPAD+1(3,R3),DCBGET+1(R3)  SAVE THE NEW    V7A50
         MVC       DCBGET+1(3,R3),PUTOURTN+1  RESET THE DUMMY     V7A50
PUTOURTN DC        A(LIST1+L1OUTRTN)   DUMMY OUTPUT ADDRESS       V7A50
><       DELETE    SEQ1=04140022,SEQ2=04140022                    V7A47
WTONOP   MVI       AB3+1,X'00'         NOP SW TO TYPE AND PRINT   V7A47
><       DELETE    SEQ1=04280022,SEQ2=04280022                    V7A47
         B         SYSPRPU             ONE MORE CHECK             V7A47
SYSPRPU  DS        0H                                             V7A47
         TM        PARBYT3,X'40'       UNDER CMS .Q               V7A47
         BNO       BACK1               BRANCH TO RETURN IF NOT    V7A47
         MVI       WTONOP+1,X'F0'      NOP THE NOP TO WTO ONLY    V7A47
         B         SYNADQ              AND JOIN SYNAD             V7A47
><       DELETE    SEQ1=06276026,SEQ2=06276026                    V7A43
*                                 6    STMT         7    SEQ      V7A43
><       DELETE    SEQ1=06288026,SEQ2=06292026                    V7A44
*                                 0    UMAP         1    CMS      V7A44
*                                 2    XREF(SHORT)  3    PRINTER  V7A44
*                                 4    YFLAG        5    RESERVED V7A44
><       DELETE    SEQ1=07704027,SEQ2=07704027                    V7A01
RELSDATE DC        C'21MAR76'          ASSEMBLER RELEASE DATE     V7A01
><       DELETE    SEQ1=07714427,SEQ2=07714427                    V7A01
         DC        CL10'ASMG76MAR'     PROGRAM IDENTIFICATION     V7A01
*                                                                 V7A42
* LIST1+L1DBLK                                                    V7A42
ADEBLOCK DC        A(0,0)              DUMMY ADDR OF DEBLOCK RTN  V7A42
><       DELETE    SEQ1=07737027,SEQ2=07737027                    V7A47
         DC        19S(*)              PATCH FOR ASMGASM/ASMGBUFF V7A47
./ ADD NAME=ASMGFD
><       CHANGE    NAME=ASMGFD
><       DELETE    SEQ1=02420026,SEQ2=02420026                    V7A44
NOERSW   DS    0H                                                 V7A44
         TM    CTYFLGI(ACT),X'08'       YFLAG OPTION IN EFFECT    V7A44
         BNO   ML00                     BRANCH IF NOT             V7A44
         TM    F8YDC(ACT),X'FF'         REL Y-CONS ENCOUNTERED .Q V7A44
         MVI   BUFR+1,C' '              CLEAR FIRST CHARACTER     V7A33
><       DELETE    SEQ1=04288027,SEQ2=04288027                    V7A30
ML07     DS    0H                                                 V7A30
         SR        GRX,GRX             CLEAR WORK REGISTER        V7A18
><       DELETE    SEQ1=04555026,SEQ2=04555026                    V7A18
         MVC       BUFR+2(4),WORD      PUT IN SEVERITY CODE       V7A18
><       DELETE    SEQ1=09860027,SEQ2=09860027                    V7A35
         EPTR  117,ERROR=(36,53,54,113,117)  ERROR POINTERS       V7A35
><       DELETE    SEQ1=12020020,SEQ2=12020020                    V7A36
         EMSG  096,12,'MACRO INSTRUCTION OR PROTOTYPE OPERAND EXCEEDS 2-
><       DELETE    SEQ1=12040020,SEQ2=12040020                    V7A36
               55 CHARACTERS IN LENGTH'                           V7A36
><       DELETE    SEQ1=12368023,SEQ2=12368023                    V7A35
         EMSG  114,04,'INSUFFICIENT MEMORY FOR USING MAP'         V7A35
./ ADD NAME=ASMGFEX
><       CHANGE    NAME=ASMGFEX
><       DELETE    SEQ1=08500024,SEQ2=08500024                    V7A45
         MVC       EXERPSW,4(R1)       SAVE BUNGLER'S PSW         V7A45
         MVC       ESDTBL+56(8),12(R1) SAVE BUNGLER'S R14-R15     V7A45
         MVC       ESDTBL(12),20(R1)   SAVE BUNGLER'S R0-R2       V7A45
><       DELETE    SEQ1=08580020,SEQ2=08620020                    V7A45
*./      DELETE    SEQ1=08580020,SEQ2=08620020                    V7A45
><       DELETE    SEQ1=08700020,SEQ2=08700020                    V7A45
         LA        R3,EXERPSW          ADDRESS OF USER'S PSW      V7A45
         L     R9,ESDTBL+64            RESTORE ASM POINTER        V7A57
EXERPSW  DC        D'0'                SPIE SAVE FOR USER PSW     V7A45
./ ADD NAME=ASMGFPP
><       CHANGE    NAME=ASMGFPP
         BZ        LRFLOD              IF NOT THEN DO THE LREF    V7A29
         LA        R6,STUMAP(,ACT)     POINT TO FIRST POINTER     V7A29
         USING     USNGMAP,R6          LESSER BUBBLE SORT ENTRY   V7A29
USORT01  DS        0H                                             V7A29
         L         R6,USNGCHN          GET NEXT ENTRY             V7A29
         LA        R6,0(,R6)           CLEAR REGISTER             V7A29
         LTR       R6,R6               AT THE END .Q              V7A29
         BZ        USORT04             BRANCH IF YES              V7A29
         LR        R7,R6               START OF REST TO COMPARE   V7A29
USORT02  DS        0H                                             V7A29
         L         R7,USNGCHN-USNGMAP(,R7)  NEXT ENTRY            V7A29
         LA        R7,0(,R7)           CLEAR REGISTER             V7A29
         LTR       R7,R7               AT THE END .Q              V7A29
         BZ        USORT01             BRANCH IF YES              V7A29
         CLC       USNGREG,USNGREG-USNGMAP(R7)  REGISTER SMALLER  V7A29
         BL        USORT02             BRANCH IF YES              V7A29
         BH        USORT03             BRANCH IF NOT              V7A29
         CLC       USNGSTRT,USNGSTRT-USNGMAP(R7) USING STMT       V7A29
         BL        USORT02             BRANCH IF YES              V7A29
><       DELETE    SEQ1=04200027,SEQ2=04200027                    V7A29
USORT03  DS        0H                                             V7A29
         IC        R1,USNGREG          ENTRY ONE                  V7A29
         MVC       USNGREG,USNGREG-USNGMAP(R7)   TWO TO ONE       V7A29
         STC       R1,USNGREG-USNGMAP(,R7)       ONE TO TWO       V7A29
         XC    USNGSTRT(USNGLEN-L'USNGCHN),USNGSTRT-USNGMAP(R7)   V7A29
         XC    USNGSTRT-USNGMAP(USNGLEN-L'USNGCHN,R7),USNGSTRT    V7A29
         XC    USNGSTRT(USNGLEN-L'USNGCHN),USNGSTRT-USNGMAP(R7)   V7A29
         B         USORT02             AND CONTINUE               V7A29
         DROP      R6                  END OF BUBBLE SORT         V7A29
USORT04  DS        0H                                             V7A29
         LA        R1,USNGLBEL(R6)     POINT TO USING LABEL       V7A29
         MVC       42(L'USNGLBEL,R7),0(R1)  ENTER USING LABEL     V7A29
><       DELETE    SEQ1=11820027,SEQ2=11820027                    V7A29
         LA        R0,MSG995           POINT TO MESSAGE           V7A29
><       DELETE    SEQ1=11840027,SEQ2=11840027                    V7A29
         B         ABEND               END OF THE LINE            V7A29
><       DELETE    SEQ1=11860027,SEQ2=11860027                    V7A29
*./      DELETE    SEQ1=11860027,SEQ2=11860027                    V7A29
><       DELETE    SEQ1=19680027,SEQ2=19700027                    V7A29
*./      DELETE    SEQ1=19680027,SEQ2=19700027                    V7A29
MSG995   DC        C'995I',AL1(L'MES995-1)                        V7A29
MES995   DC        C'INSUFFICIENT MEMORY TO PROCESS XREF'         V7A29
MSG994   DC        C'994I',AL1(L'MES994-1)                        V7A29
MES994   DC        C'INSUFFICIENT MEMORY TO PROCESS RLD'          V7A29
><       DELETE    SEQ1=30460027,SEQ2=30460027                    V7A29
UMP2ID   DC    C' REGISTER  USING STMT  DROP STMT  VALUE   LABEL' V7A29
><       DELETE    SEQ1=31240027,SEQ2=31240027                    V7A29
USNGLBEL DS        CL12                LABEL OF USING LOCATION    V7A29
./ ADD NAME=ASMGF1
><       CHANGE    NAME=ASMGF1
WORDEND2 DS        0H                                             V7A27
><       DELETE    SEQ1=05060027,SEQ2=05060027                    V7A27
         BE        NOCHECK             POSSIBLE ERROR IF SO       V7A27
*                                                                 V7A27
*        CHECK FOR 'N' AS VALID ALTERNATIVE FOR 'NO'              V7A27
NOCHECK  DS        0H                                             V7A27
         CLI       0(R4),C'N'          START WITH 'N' .Q          V7A27
         BNE       PARMERR             ERROR IF NOT               V7A27
         CLI       1(R4),C'O'          START WITH 'NO' .Q         V7A27
         BE        PARMERR             ERROR IF YES               V7A27
         EX        R5,NOMVC            MOVE CURRENT ARGUMENT      V7A27
         MVI       NOWORK,C'N'         WITH 'N' AT THE START      V7A27
         MVI       NOWORK+1,C'O'       AND 'O' NEXT               V7A27
         LA        R5,NOWORK+2(5)      POINT TO END CHAR PLUS ONE V7A27
         LA        R4,NOWORK           POINT TO FIRST CHARACTER   V7A27
         B         WORDEND2            AND GO THROUGH IT AGAIN    V7A27
NOMVC    MVC       NOWORK+1(*-*),0(R4) MOVE FAILED ARGUMENT       V7A27
NOWORK   DC        CL13' '             WORK AREA FOR 'NO' PARM    V7A27
><       DELETE    SEQ1=13340027,SEQ2=13360027                    V7A42
         LA        R1,0(,R1)           CLEAR HIGH ORDER BYTE      V7A42
         C         R1,L1DCBADS+L1SUT1(,R9)       SYSUT1 .Q        V7A42
         BE        EXUTIL              IF YES, GO PROCESS IT      V7A42
         C         R1,L1DCBADS+L1SUT2(,R9)       SYSUT2 .Q        V7A42
         BE        EXUTIL              IF YES, GO PROCESS IT      V7A42
         L         R5,L1DCBADS+L1SUT3(,R9)       SYSUT3 DCBAD     V7A42
         LA        R5,0(,R5)           CLEAR HIGH ORDER BYTE      V7A42
         CR        R1,R5               SYSUT3 .Q                  V7A42
         BE        EXUTIL              IF YES, GO PROCESS IT      V7A42
         OC        L1DBLK(8,R9),L1DBLK(R9)  DEBLOCKING RTN HERE   V7A42
         BZ        EXBEGIN             BRANCH IF NOT              V7A42
         C         R1,L1DCBADS+L1SLIB(,R9)       SYSLIB .Q        V7A42
         BNE       EXNUTIL             IF NOT, PROCESS OTHERS     V7A42
*                                                                 V7A42
*        HERE TO PROCESS SYSLIB.  FORCE RECFM=U AND MAKE          V7A42
*        BLKSIZE THE NEXT STRICTLY LARGER MULTIPLE OF 8.          V7A42
*                                                                 V7A42
         OI        DCBRECFM(R1),X'C0'  MAKE RECFM = 'U'           V7A42
         LH        R5,DCBBLKSI(,R1)    GET THE BLOCK SIZE         V7A42
         N         R5,=F'-8'           ROUND TO MULT OF EIGHT     V7A42
         S         R5,=F'-8'           MAKE IT NEXT MULTIPLE      V7A42
         STH       R5,DCBBLKSI(,R1)    SAVE IT BACK IN DCB        V7A42
         B         EXLSTEND            GO RETURN TO OPEN          V7A42
*                                                                 V7A42
*        HERE TO PROCESS UTILITY DATA SETS                        V7A42
*                                                                 V7A42
EXUTIL   DS        0H                                             V7A42
         XC        DCBLRECL(2,R1),DCBLRECL(R1)    CLEAR LRECL     V7A26
         MVI       DCBKEYLE(R1),X'00'  AND KEY LENGTH             V7A26
*                                                                 V7A42
*        HERE IF NOT A UTILITY OR SYSLIB                          V7A42
*                                                                 V7A42
EXNUTIL  DS        0H                  JOIN HERE                  V7A42
         TM        DCBRECFM(R1),X'40'  RECFM= 'V' OR 'U' .Q       V7A42
         BZ        EXBEGIN             IF NOT, MUST BE F (NORMAL) V7A42
         C         R1,L1DCBADS+L1SIN(,R9)        SYSIN .Q         V7A42
         BE        EXLSTEND            IF SO, DON'T DO ANYTHING   V7A42
         C         R1,L1DCBADS+L1SUP(,R9)        SYSUP .Q         V7A42
         BE        EXLSTEND            AGAIN, IF SO RETURN        V7A42
EXBEGIN  DS        0H                                             V7A42
         TM        DCBRECFM(R1),X'C0'  IS THIS RECFM 'U' .Q       V7A42
         BO        EXLSTEND            OF SO, DON'T SHARE BUFFERS V7A42
><       DELETE    SEQ1=15800027,SEQ2=15820027                    V7A46
DCBTFI01 DS        0H                                             V7A46
         L         R0,L1DCBADS(R3,R9)  GET DCB ADDRESS            V7A46
         N         R0,=X'00FFFFFF'     MAKE SURE IT'S PURE        V7A46
         CR        R1,R0               INDEX POINTS AT DCB .Q     V7A46
         BE        DCBTFI02            BRANCH IF YES              V7A46
><       DELETE    SEQ1=15860027,SEQ2=15860027                    V7A46
         B         DCBTFI01            AND LOOP                   V7A46
DCBTFI02 DS        0H                                             V7A46
         OC        L1DBLK(8,R9),L1DBLK(R9)  DEBLK ROUTINE .Q      V7A43
         BZ        OPTNOWYL            BRANCH IF NOT              V7A43
         NI        WYLSEQ+OPTPFLGS,X'FF'-X'80'   NOT SHORT FORM   V7A43
         NI        WYLNOSEQ+OPTPFLGS,X'FF'-X'80' NOT SHORT FORM   V7A43
OPTNOWYL DS        0H                                             V7A43
><       DELETE    SEQ1=21260027,SEQ2=21320027                    V7A46
         LA        R1,DCBTAB           START OF DCBTAB            V7A46
         SR        R1,R3               OFFSET FOUND IN TABLE      V7A46
         LPR       R1,R1               POSITIVE OFFSET            V7A46
         LA        R1,L1DDNAM(R1,R9)   POINT TO ASSOCIATED DDNAME V7A46
         MVC       MES200+15(8),0(R1)  PLACE DDNAME IN ERROR      V7A46
         LA        R0,MSG200           POINT AT ERROR MESSAGE     VA746
><       DELETE    SEQ1=23920027,SEQ2=23960027                    V7A52
         STM       R1,R2,GOTADDR   CHANGE ADDR AND LENGTH KEPT    V7A52
         AR        R1,R2           ADDRESS TO FREE                V7A52
         SPACE     1                                              V7A52
><       DELETE    SEQ1=27920027,SEQ2=27920027                    V7A42
MACROIN  DS        0H                                             V7A42
         READ      INPUTBLK,SF,(R2),(R5),256                      V7A42
><       DELETE    SEQ1=38340027,SEQ2=38340027                    V7A52
         DC        C'CMS',AL1(K1*4/256)     CMS SAME AS PCP       V7A52
         DC        H'0000',AL1(0),X'FFFF',X'80',X'00',X'00'   UT1 V7A46
         DC        H'0000',AL1(0),X'FFFF',X'80',X'00',X'00'   UT2 V7A46
         DC        H'0000',AL1(0),X'FFFF',X'80',X'00',X'00'   UT3 V7A46
><       DELETE    SEQ1=39980027,SEQ2=39980027                    V7A43
SEQ#     DS        0CL32               *         SEQ              V7A43
><       DELETE    SEQ1=40120027,SEQ2=40120027                    V7A44
YFLAG#   DS        0CL37               *         YFLAG            V7A44
         APARM     EDICT,MIN=2,ON=ESD#,FORM=S                     V7A27
         APARM     NOEDICT,MIN=4,OFF=ESD#,FORM=S                  V7A27
><       DELETE    SEQ1=41300027,SEQ2=41300027                    V7A40
         APARM     'EXTIME=',MIN=4,ADDR=EXTMWD                    V7A40
         APARM     'ETIME=',MIN=2,ADDR=EXTMWD,FORM=S              V7A40
         APARM     'LCOUNT=',MIN=2,ADDR=LCTBYT,FORM=S             V7A27
         APARM     LD,MIN=2,ON=LOAD#,FORM=S                       V7A27
         APARM     NOLD,MIN=4,OFF=LOAD#,FORM=S                    V7A27
         APARM     RDICT,MIN=2,ON=RLD#,FORM=S                     V7A27
         APARM     NORDICT,MIN=4,OFF=RLD#,FORM=S                  V7A27
WYLSEQ   APARM     SEQUENCE,MIN=2,ON=SEQ#,FORM=S                  V7A43
WYLNOSEQ APARM     NOSEQUENCE,MIN=4,OFF=SEQ#,FORM=S               V7A43
         APARM     YFLAG,MIN=2,ON=YFLAG#                          V7A44
         APARM     NOYFLAG,MIN=4,OFF=YFLAG#                       V7A44
./ ADD NAME=ASMGF2
><       CHANGE    NAME=ASMGF2
         OI        POEND,X'04'         ILLEGAL WITHIN COPY        V7A28
         LA        LINK,2500           SETX DIMENSION LIMIT       V7A17
         ST        LINK,SETXLIM        SET VALUE FOR LATER CHECK  V7A17
         LA        LINK,200            MAX POS PARM VALUE         V7A58
         STH       LINK,POSNOMAX       SET VALUE FOR LATER CHECK  V7A58
         TM    SWTCH8,MASK2             SKIPPING FOR SYSIN LEVEL  V7A28
         BNO   DRVER0                   BRANCH IF NOT             V7A28
         TM    SWTCH7,X'01'             IN COPY CODE STILL .Q     V7A28
         BO    DRVER0                   YES, READ AGAIN           V7A28
         NI    SWTCH8,X'FF'-MASK2       RESET SKIP FLAG           V7A28
         B     END0                     CONTINUE END PROCESSING   V7A28
DRVER0   DS    0H                                                 V7A28
         TM    SWTCH8,MASK2             SKIPPING FOR SYSIN LEVEL  V7A28
         BO    DRIVER                   YES, READ AGAIN           V7A28
         OI    NPRIME+1,X'01'           SUBLISTS DISABLE KEYWORDS V7A38
         CLI   0(TEMPRG),24             A TITLE STATEMENT .Q      V7A04
         BNE   PSDOPRA                  NO, LET GETSRC PUT STMT   V7A04
         OI    SWTCH3,MASK6             SET NO PUT CONTIN SOURCE  V7A04
PSDOPRA  DS    0H                                                 V7A04
         TM    SWTCH5,X'01'             UNDER 'EXTEN' .Q          V7A55
         BO    DCL15                    YES, GBL OK ANYWHERE      V7A55
><       DELETE    SEQ1=10740020,SEQ2=10740020                    V7A55
         BNO   DCL12                    BRANCH IF LEGAL           V7A55
         TM    SWTCH5,X'01'             IS 'EXTEN' ON .Q          V7A55
         BNO   DCL05                    ILLEGAL LCL IF NOT        V7A55
DCL12    DS    0H                                                 V7A55
><       DELETE    SEQ1=11910023,SEQ2=11910023                    V7A17
SETXLIM  DC    F'9999'                  EXTEN SETX DIMEN LIMIT    V7A17
><       DELETE    SEQ1=17500027,SEQ2=17500027                    V7A54
         BNH   TCOPYA                   BRANCH IF NOT TOO BIG     V7A54
         BAL   LINK,ABSERR              SO TO ERROR ROUTINE       V7A54
         DC    AL1(ERRR30,ERRST)        ILLEGAL STMT IN COPY      V7A54
TCOPYA   DS    0H                                                 V7A54
         TM    SWTCH5,X'41'             EXTEN AND OPEN CODE .Q    V7A28
         BNO   END0                     BRANCH IF NOT             V7A28
         TM    SWTCH7,X'01'             IN 'COPY CODE' .Q         V7A28
         BNO   END0                     BRANCH IF NOT             V7A28
         OI    SWTCH8,MASK2             SKIP BACK TO SYSIN LEVEL  V7A28
         B     DRIVER                   AND CONTINUE              V7A28
END0     DS    0H                                                 V7A28
><       DELETE    SEQ1=21095023,SEQ2=21095023                    V7A54
         BNO   END22                    NO, CONTINUE              V7A54
         L     AUXREG,ASEQBEG           BEG SEQ BASE REG          V7A54
         B     SEQ35-SEQBEG(,AUXREG)    INIT OPEN CODE            V7A54
><       DELETE    SEQ1=21680020,SEQ2=21960020                    V7A54
*./      DELETE    SEQ1=21680020,SEQ2=21960020                    V7A54
><       DELETE    SEQ1=28760020,SEQ2=28820020                    V7A54
SMTSQ1   DS    0H                                                 V7A54
         LA    ZERORG,41                DUMMY IT UP               V7A54
SMTSEQ   DS    0H                                                 V7A54
         ST    AUXREG,FINDSAVE+4        SAVE RETURN ADDRESS       V7A54
         L     AUXREG,ASEQBEG           BASE ADDRESS              V7A54
         BR    AUXREG                   ENTER ROUTINE             V7A54
ASEQBEG  DC    A(SEQBEG)                STMT SEQUENCE ROUTINE     V7A54
><       DELETE    SEQ1=28840020,SEQ2=32110027                    V7A54
*./      DELETE    SEQ1=28840020,SEQ2=32110027                    V7A54
         BP    EDT04A                   BRANCH IF VALID OFFSET    V7A05
><       DELETE    SEQ1=32766027,SEQ2=32766027                    V7A05
         LA    R1,1(,R1)                RESTORE ORIGINAL          V7A05
         BZ    EDT04A                   BRANCH IF OFFSET ONE      V7A05
BDPROT1  DS    0H                                                 V7A34
         NI    SWTCH4,X'FF'-X'02'       SET OFF M-I BIT           V7A34
><       DELETE    SEQ1=54900020,SEQ2=54900020                    V7A53
RPUPFD   DS    0H                                                 V7A53
         BAL   LINK,TSTPOS              POSPARM PRECEDE KW .Q     V7A53
         TM    SWTCH1,MASK3             PROTOTYPE STMT .Q         V7A53
         BNO   RPUPFDA                  BRANCH IF NOT             V7A53
         CLC   NRKEY,H0                 ANY KEYWORDS FOUND        V7A53
         BE    RPUPFDA                  BRANCH IF NONE            V7A53
         L     LINK,VENTKWB             KEYWORD ADJUST ROUTINE    V7A53
         BALR  LINK,LINK                ADJUST KEYWORD NUMBERS    V7A53
RPUPFDA  DS    0H                                                 V7A53
><       DELETE    SEQ1=55040027,SEQ2=55040027                    V7A53
         LA    OPTR,OUTPUT+6            ALSO END OF M-I STATEMENT V7A53
         LH    WORK1,POSNO              KEYWORDS AND POSNLS       V7A53
         SH    WORK1,NRKEY              LESS KEYWORD COUNT        V7A53
         STH   WORK1,POSNO              GIVES ONLY POSNL COUNT    V7A53
         MVC   OUTPUT+5(2),POSNO        FINAL POSNL COUNT         V7A53
         TM    PARBYT1,EXTEN            IS EXTEN ON .Q            V7A06
         BNO   LEGP1B                   BRANCH IF NOT             V7A06
         TM    MVBYTE,X'20'             S.D.T.'S STILL OK .Q      V7A06
         BZ    LEGP1B                   BRANCH IF YES             V7A06
         LA    R3,1                     FIRST INPUT INDICATOR     V7A06
         MVC   PNCTAB+39(12),NN15       TRANSLATE TO DELIMITER    V7A06
         MVI   PNCTAB+EQUALS,X'00'      FORGET THE EQUAL SIGN     V7A06
         BAL   LINK,TRTESN+6            GO TO ENTRY POINT         V7A06
         B     LEGP1C                   AND CONTINUE              V7A06
LEGP1B   DS    0H                                                 V7A06
LEGP1C   DS    0H                                                 V7A06
><       DELETE    SEQ1=64630027,SEQ2=64630027                    V7A53
         BCR   1,LINK                   IGNORE ERROR IF YES       V7A53
><       DELETE    SEQ1=66860020,SEQ2=66860020                    V7A53
NTCM1    DS    0H                                                 V7A53
         CLC   NRKEY,H0                 ANY KEYWORDS FOUND .Q     V7A53
         BE    NTCM2                    BRANCH IF NONE            V7A53
         L     LINK,VENTKWB             KEYWORD ADJUST ROUTINE    V7A53
         BALR  LINK,LINK                REASSIGN KW POS NUMBERS   V7A53
         B     NTCM3                    GO TO RETURN              V7A53
NTCM2    DS    0H                                                 V7A53
         BAL   LINKR,RPPFD1             INSERT PROTO START STMT   V7A53
NTCM3    DS    0H                                                 V7A53
><       DELETE    SEQ1=67050027,SEQ2=67055027                    V7A53
*./      DELETE    SEQ1=67050027,SEQ2=67055027                    V7A53
><       DELETE    SEQ1=67380020,SEQ2=67380020                    V7A53
         BAL   LINK,UPKEY               INCREMENT KW COUNTER      V7A53
><       DELETE    SEQ1=67400020,SEQ2=67400020                    V7A53
         BAL   R1,ISVLD1                ENTER KW NAME, IF VALID   V7A53
         SH    WORK1,NRKEY              LESS NUMBER OF KEYWORDS   V7A53
         CLI   0(INPTR),EQUALS          KEYWORD .Q                V7A53
         BNE   ISVLD3                   BRANCH IF NOT             V7A53
         LH    WORK1,NRKEY              KEYWORD NUMBER            V7A53
         LNR   WORK1,WORK1              -(MINUS) KEYWORD NUMBER   V7A53
ISVLD3   DS    0H                                                 V7A53
><       DELETE    SEQ1=70130025,SEQ2=70130025                    V7A08
MASK5    EQU   X'04'                                              V7A08
MASK6    EQU   X'02'                                              V7A04
><       DELETE    SEQ1=77580027,SEQ2=77580027                    V7A34
         BNE   BDPROT1                  ERROR IF NOT              V7A34
><       DELETE    SEQ1=77860027,SEQ2=78020027                    V7A49
*./      DELETE    SEQ1=77860027,SEQ2=78020027                    V7A49
*        FROM HERE TO SEQEND IS UPDATE NUMBER                     V7A54
SEQBEG   DS    0H
         USING SEQBEG,AUXREG            ENTRY ADDRESS WILL BE BASE
         IC    RQ,POBYTE(ZERORG)        INITIALIZE SWITCH BYTE
         STC   RQ,PSOPSW
         TM    SWTCH5,X'02'             SKIPPING TO END .Q
         BZ    SEQ02                    BIF NO
         TM    PSOPSW,X'80'             YES - IS THIS AN END CARD .Q
         BZ    DRIVER                   BIF NO
         L     B2,DCLOS1AD              YES -LOAD BASE FOR BRANCH
         L     LINK,AKLOSIT             TO ABORT
         BR    LINK                     ASSEMBLY.
SEQ02    TM    SWTCH5,X'04'             SKIPPING TO MEND .Q
         BZ    SEQ05                    BIF NO
         TM    PSOPSW,X'80'             YES -IS THIS AN END CARD .Q
         BO    SEQ04                    BIF YES
         TM    PSOPSW,X'40'             IS THIS A MEND CARD .Q
         BZ    ABS001                   BIF NO
         TM        SWTCH6,2            WILL DICT BE SUBSET .Q
         BZ        MEND2     NO, RESET OUTPUT BUFFER & CLOSE OUT DEFN
         B         MEND1                YES- PROCESS MEND
SEQ04    BAL       LINK,WRNERR         GO LOG ERROR
         DC        AL1(ERRR33)         END CARD IN MACRO
         DC        AL1(ERRST)          CLOSE OUT DEFINITION
         B         END1                CLOSE OUT PHASE
SEQ05    TM    SWTCH7,X'01'             ARE WE WITHIN COPY CODE.....
         BZ    SEQ10                    NO
         TM    PSOPSW,4                 YES -IS OP LEGAL IN COPY.....
         BO    SEQ08                    ERROR IF NOT
         TM    SWTCH5,X'20'             WITHIN SYSTEM MACRO DEFN .Q
         BZ    SEQ10                    BRANCH IF NOT
         TM    PSOPSW,X'60'             IS THIS A MACRO/MEND OP .Q
         BZ    SEQ10                    OK IF NOT
******** GENERATE DIAGNOSTIC -ILLEGAL STATEMENT IN COPY
SEQ08    DS    0H
         BAL   LINK,ABSERR
         DC    AL1(ERRR30)
         DC    AL1(ERRST)
********
SEQ10    TM    SWTCH1,64                ARE WE WITHIN A MACRO.....
         BZ    SEQ20                    NO
         TM    PSOPSW,2                 YES -IS OP LEGAL IN MACROS.....
         BZ    SEQ50                    YES
         TM    SWTCH5,32                NO -IS THIS A SYSTEM MACRO.....
         BO    SEQ30               YES
         TM    PSOPSW,128               NO -IS THIS END.....
         BO    OMY                 WELL,WELL - AN END CARD
         L     LINK,GETAD               GET PAST ANY
         BALR  LINK,LINK                   CONTINUATION CARDS
         DC    AL2(6)
******** GENERATE DIAGNOSTIC -OP ILLEGAL IN MACRO DEFINITIONS
********
         BAL   LINK,ABSERR
         DC    AL1(ERRR31)
         DC    AL1(ERRST)
SEQ20    TM    SWTCH5,128               PROCESSING PROGRAMMER MACROS...
         BZ    SEQ25                    NO
         CLI   NAMBYT,1                 YES -IF NAME FIELD IS S.S.
         BE    SEQ34                      GENERATE DIAGNOSTIC
         TM    PSOPSW,1                 IF OP IS LEGAL BETWEEN MACROS
         BO    SEQEND                     EXIT
         B     SEQ35                    OTHERWISE, INITIALIZE MAIN-LINE
SEQ25    TM    SWTCH6,64                EXPECTING MACRO PSEUDO-OP.....
         BZ    SEQ40                    NO
         TM    PSOPSW,32                YES -IS THAT WHAT WE GOT.....
         BNZ       SEQ26               YES-
         OI        SWTCH5,X'04'        NO-MACRO ABORT ON
         NI        SWTCH6,X'FD'        SUBSET INDICATOR OFF
         B         END1                TO CLOSE OUT DICTIONARY
SEQ26    NI        SWTCH6,X'BF'        TURN OFF INDICATOR.
         B     SEQEND                     AND EXIT
******** GENERATE DIAGNOSTIC -ILLEGAL STATEMENT IN SYSTEM MACRO
SEQ30    L     LINK,GETAD
         BALR  LINK,LINK           SKIP ANY CONTINUATION CARDS.
         DC    AL2(6)
         BAL   LINK,ABSERR
         DC    AL1(ERRR32)
         DC    AL1(ERRST)
OMY      DS    0H
         BAL   LINK,WRNERR
         DC    AL1(ERRR33)
         DC    AL1(ERRST)
         B     SEQ35
******** GENERATE DIAGNOSTIC -MEANINGLESS SEQUENCE SYMBOL -ERASED
********
SEQ34    BAL   LINK,CKNAM3
         CLI   OUTPUT+5,X'0B'           IS OPERATION ANOP .Q
         BNE   *+8                      BIF NO
         MVI   NAMBYT,1                 YES -FOOL ANOP, S.S. PRESENT
********
******** INITIALIZATION FOR OPEN CODE PROCESSING
SEQ35    XI    SWTCH5,192               FLIP INDICATORS
         TIMEOUT   'OPEN CODE STARTED ',DCB=NO
         L     LINK,HISTRY+8            ENTER A DUMMY ENTRY INTO BLOCK
         MVC   4(5,LINK),F1+1           ZERO OF THE OPEN CODE DICT-
         LA    LINK,9                   IONARY AND UP THE INDICES
         ST    LINK,VCR                 ACCORDINGLY. THIS IS NEC. DUE
         ST    LINK,TNDX                TO BLOCK NO. SEARCH ALGORITHM.
         TM    SWTCH5,X'01'             WAS 'EXTEN' SPECIFIED .Q  V7A49
         BNO   SEQ37                    BRANCH IF NOT             V7A49
         ST    AUXREG,FINDSAVE          SAVE BASE REGISTER        V7A49
         L     AUXREG,DUSING            BRANCH ADDR FOR ENTDICT   V7A49
         MVC   DCAREA(10),SYSNDX        SYSNDX                    V7A49
         BALR  LINK,AUXREG              ENTER ZEROTH POS PARM     V7A49
         MVC   DCAREA+5(5),SYSECT       SYSECT                    V7A49
         BALR  LINK,AUXREG              ENTER FIRST POS PARM      V7A49
         MVC   DCAREA(11),SYSDATE       SYSDATE                   V7A49
         BALR  LINK,AUXREG              ENTER SECOND POS PARM     V7A49
         MVC   DCAREA+5(6),SYSTIME      SYSTIME                   V7A49
         BALR  LINK,AUXREG              ENTER THIRD POS PARM      V7A49
         MVC   DCAREA+5(6),SYSSTYP      SYSSTYP                   V7A49
         BALR  LINK,AUXREG              ENTER FOURTH POS PARM     V7A49
         MVC   DCAREA+5(6),SYSPARM      SYSPARM                   V7A49
         BALR  LINK,AUXREG              ENTER FIFTH POS PARM      V7A49
         L     AUXREG,FINDSAVE          RESTORE BASE REGISTER     V7A49
SEQ37    DS    0H                                                 V7A49
         TM    SWTCH7,X'02'             END CARD GENERATED
         BO    END22                    YES CONTINUE END PROCESSING
******** OF COURSE THERE'S MORE TO BE ADDED
SEQ40    TM    PSOPSW,16                IS OP MEXIT,MNOTE,MEND.....
         BO    SEQ45                    YES -A GOOF
         TM    PSOPSW,32                NO -IS OP MACRO.....
         BZ    SEQ50                    NO
SEQ45    L     LINK,GETAD               GET PAST ANY
         BALR  LINK,LINK                   CONTINUATION CARDS
         DC    AL2(6)
******** GENERATE DIAGNOSTIC -ILLEGAL STATEMENT IN OPEN CODE
         BAL   LINK,ABSERR
         DC    AL1(ERRR34)
         DC    AL1(ERRST)
********
SEQ50    TM    OUTPUT+4,MASK0           IS OP A PSEUDO-OP .Q
         BZ    SEQ52                    BIF NO
         TM    PSOPSW,8                 IS OP GBLX,LCLX.....
         BO    SEQEND                   YES -EXIT
         CLI   OUTPUT+5,X'0C'           NO.. IS OP COPY
         BE    SEQEND                   ALLOW COPY BEFORE DECLARATIONS
         CLI   OUTPUT+5,X'25'      IS OP ACTR.
         BE    SEQ55               YES -
         CLI   OUTPUT+5,X'2D'           NO.. IS OP OPSYN
         BE    SEQEND                   ALLOW OPSYN BEFORE DECLNS
SEQ52    DS    0H
         TM    SWTCH5,X'01'             IS EXTEN ON .Q
         BO    SEQ53                    YES, BRANCH AROUND
         TM    SWTCH1,X'40'             ARE WE IN A MACRO .Q
         BO    SEQ54                    YES, DISABLE DECLARATIONS
SEQ53    DS    0H
         CLI   PSOPSW,X'01'             EJECT,PRINT,SPACE OR TITLE .Q
         BE    SEQEND                   RETURN IF SO
SEQ54    DS    0H
         OI    SWTCH5,X'18'             DISABLE GBLX,LCLX AND ACTR
         B     SEQEND                     AND EXIT
SEQ55    TM    SWTCH5,X'08'        IF LCLX HAS BEEN DISALLOWED,
         BZ    SEQ52
         TM    SWTCH5,X'01'             IS EXTEN ON .Q            V7A55
         BO    SEQ52                    ACTR OK IF EXTEN          V7A55
         B     DCL05               THIS ACTR IS OUT OF ORDER.
         SPACE
SEQEND   DS    0H
         L     AUXREG,FINDSAVE+4        RESTORE RETURN REGISTER
         BR    AUXREG                   AND RETURN TO CALLER
         DROP  AUXREG
         EJECT
./ ADD NAME=ASMGF2A
><       CHANGE    NAME=ASMGF2A
><       DELETE    SEQ1=01960022,SEQ2=01960022                    V7A53
         ENTRY ENTKWB                                             V7A53
><       DELETE    SEQ1=27646025,SEQ2=27646025                    V7A56
         TM    0(EPTR),X'20'            ENTRY SETA/SETB/SETC .Q   V7A56
VABSER   DC    V(ABSERR)                                          V7A53
VWRNER1  DC    V(WRNERR)                                          V7A53
VABS001  DC    V(ABS001)                                          V7A53
><       DELETE    SEQ1=29140024,SEQ2=29200020                    V7A53
         EJECT ,                                                  V7A53
*        AFTER SCANNING MACRO PROTOTYPE STATEMENT THE             V7A53
*        KEYWORD PARAMETERS HAVE BEEN ENTERED IN LOCAL DICT       V7A53
*        WITH A PARAMETER NUMBER OF MINUS THE KEYWORD             V7A53
*        COUNT NUMBER.  THE PURPOSE OF THIS ROUTINE IS TO         V7A53
*        MAKE THE KEYWORD PARM NUMBERS ABOVE POSITIONAL PARMS.    V7A53
*                                                                 V7A53
*        CALLING SEQUENCE  --  L     LINK,VENTKWB                 V7A53
*                              BALR  LINK,LINK                    V7A53
         SPACE ,                                                  V7A53
ENTKWB   DS    0H                                                 V7A53
         STM   RB,L5,SAVREG        SAVE CALLER'S REGISTERS        V7A53
         L     B2,VENTKWB          BASE REGISTER                  V7A53
         USING ENTKWB,B2           AND TELL THE ASSEMBLER         V7A53
         LA    RR4,TASHL           NUMBER OF HAST TABLE ENTRIES   V7A53
         LA    RR3,THASHT          FIRST HASH POINTER IS HERE     V7A53
ENTKW1   DS    0H                                                 V7A53
         LR    RR2,RR3             FIRST CHAIN PTR ADDRESS        V7A53
ENTKW2   DS    0H                                                 V7A53
         MVC   EVENY+1(3),0(RR2)   ALIGN NEXT POINTER             V7A53
         L     RR2,EVENY           GET POINTER                    V7A53
         LTR   RR2,RR2             AT THE END .Q                  V7A53
         BZ    ENTKW3              YES, CONTINUE WITH NEXT        V7A53
         A     RR2,HISTRY+8             ADD DICTIONARY BASE
         TM    3(RR2),X'48'        IS THIS KEYWORD .Q             V7A53
         BNO   ENTKW2              BRANCH OUT IF NOT              V7A53
         TM    3(RR2),X'30'        AND NOTHING ELSE .Q            V7A53
         BNZ   ENTKW2              BRANCH OUT IF NOT              V7A53
         IC    RR1,3(,RR2)         GET FLAG BYTE                  V7A53
         N     RR1,F7              PURIFY BCD LENGTH-1            V7A53
         LA    RR1,5(RR1,RR2)      POINT TO POS PARM NUMBER       V7A53
         MVC   EVENX+2(2),0(RR1)   ALIGN POS PARM NUMBER          V7A53
         LH    RR0,EVENX+2         LOAD POS PARM NUMBER           V7A53
         LTR   RR0,RR0             NEGATIVE MEANS KEYWORD         V7A53
         BNM   ENTKW2              BRANCH IF NOT KEYWORD          V7A53
         LPR   RR0,RR0             POSITIVE KEYWORD NUMBER        V7A53
         AH    RR0,POSNO           PLUS NUMBER OF POSNL/KEYWORDS  V7A53
         SH    RR0,NRKEY           LESS NUMBER OF KEYWORDS        V7A53
         AH    RR0,POSNOINT        PLUS INITIAL DUMMIES           V7A53
         STH   RR0,EVENX+2         SAVE REAL RESULT               V7A53
         MVC   0(2,RR1),EVENX+2    CHANGE LOCAL DICT PARM NUMBER  V7A53
         B     ENTKW2              ALL DONE                       V7A53
ENTKW3   DS    0H                                                 V7A53
         LA    RR3,L'THASHT(,RR3)  NEXT HASH PTR IS HERE          V7A53
         BCT   RR4,ENTKW1          DO THEM ALL                    V7A53
         LM    RB,L5,SAVREG        RESTORE CALLER'S REGS          V7A53
         BR    LINK                AND RETURN TO CALLER           V7A53
         TM    SWTCH1,X'10'             PROTOTYPE EXPECTED .Q     V7A12
         BO    SMCH31                   YES, DON'T SUBSET MAC DIC V7A12
         ST    RE2,SMRE2X               SAVE PTR TO N/P FIELD     V7A24
><       DELETE SEQ1=39395027,SEQ2=39420027                       V7A42
         LH    L4,14(,RA)               CSW, BLKSIZE IN DCB       V7A42
         LCR   L4,L4                    AND BUFFER ADDRESS        V7A42
         TM    DCBRECFM-IHADCB(L5),X'C0'  RECFM 'U' .Q            V7A42
         BNO   LIBRS0                   BRANCH IF NOT             V7A42
         LTR   L4,L4                    CHECK RESIDUAL COUNT      V7A42
         BNM   LIBRDERR                 ERR IF RESID CT <= 0      V7A42
LIBRS0   DS    0H                                                 V7A42
         AH    L4,DCBBLKSI-IHADCB(,L5)  CALCULATE RECORD LENGTH   V7A42
         L     LINK,LBAREAAD(,RD1)      POINT AT THE BUFFER       V7A42
         CH    L4,0(,LINK)              IS IT EDIT-FORMAT .Q      V7A42
         BL    LIBRS1                   BRANCH IF NOT             V7A42
         CLI   0(LINK),X'0F'            DOUBLE-CHECK THAT HALF    V7A42
         BNL   LIBRS1                   WORD COUNT IS POSITIVE    V7A42
         LH    L4,0(,LINK)              GET EDIT BLOCK LENGTH     V7A42
         ST    L4,LBLIBEOB(,RD1)        STORE AS EOB OFFSET       V7A42
         LA    L4,2                     GET START OFFSET          V7A42
         B     LIBRS2                   AND JOIN COMMON CODE      V7A42
LIBRS1   DS    0H                                                 V7A42
         ST    L4,LBLIBEOB(,RD1)        SAVE EOB OFFSET           V7A42
LIBRS2   DS    0H                       HERE FROM EDIT-FORMAT     V7A42
SMCH31   DS    0H                                                 V7A12
         NI    SWTCH1,X'EF'             TURN OFF PROTOTYPE EXPECT V7A12
><       DELETE    SEQ1=45360020,SEQ2=45360020                    V7A08
ZXIT     DS    0H                                                 V7A08
         NI    SWTCH3,NM0123            RESET GETSRC BITS 0-3     V7A08
         TM    SWTCH1,MASK1             IN PROGRAMMER MACRO .Q    V7A04
         BO    REWRTP                   YES, PRINT EVERYTHING     V7A04
         TM    SWTCH3,MASK6             SUPPRESS SOURCE PUT ON .Q V7A04
         BO    NOSYSM                   YES, DO NOT PUT SOURCE    V7A04
><       DELETE    SEQ1=46900027,SEQ2=47000027                    V7A42
         BAL   LINK,LIBRDSUB            CLEAN VARIOUS STUFF UP    V7A42
         CLI   0(L4),X'0F'              IS THE BLOCK EDIT-FORMAT? V7A42
><       DELETE    SEQ1=47120027,SEQ2=47120027                    V7A24
         LA    L4,0(L4,RA)              ADD BUFFER OFFSET (CC)    V7A42
         BNL   LIBRRD2A                 NO, UNBLOCK CARD FORMAT   V7A42
         LR    RA,L4                    RECORD ADDR INTO RA (R1)  V7A42
         LA    WRKREG,NMBFLG(,ADJUST)   OUTPUT INTO WRKREG (R2)   V7A42
         L     LINK,ADLIST1             POINT AT LIST1 IN ASM     V7A42
         LA    RQ,L1DDNAM+24(,LINK)     R0 POINTS TO "SYSLIB"     V7A42
         L     L5,L1DBLK(,LINK)         POINT AT DEBLOCKER        V7A42
         BALR  L4,L5                    OFF TO IT                 V7A42
         S     RA,LBAREAAD(,RE1)        CALCULATE THE OFFSET      V7A42
         B     LIBRRD2B                 GO JOIN COMMON CODE       V7A42
LIBRRD2A DS    0H                       HERE FOR CARD FORMAT      V7A42
LIBRRD2B DS    0H                       HERE FROM EDIT CASE       V7A42
><       DELETE    SEQ1=47300027,SEQ2=47480027                    V7A42
         BAL   LINK,LIBRDSUB            CLEAN VARIOUS STUFF UP    V7A42
LSLINK   DS    F                        SAVE AREA FOR LINK        V7A42
LIBRDSUB DS    0H                                                 V7A42
         ST    LINK,LSLINK              SAVE LINK REGISTER        V7A42
         NI    LBRDSW(RE1),255-LBRDOT   TURN OFF READ OUTSTANDING V7A42
         LR    RD1,RE1                  DECB ADDRESS              V7A42
         BAL   LINK,NOTCHECK            CHECK THE READ            V7A42
         OI    LBRDSW(RE1),LBRDRS       PROCESSING READS STARTED  V7A42
         L     RD1,LBRECPW(,RE1)        COMPUTE EOB ADDRESS       V7A42
         L     RA,LBDCBAD(,RE1)         FROM RESIDUAL LENGTH IN   V7A42
         LH    L4,14(,RD1)              GET RESIDUAL COUNT        V7A42
         LCR   L4,L4                    CSW, BLKSIZE FROM DCB     V7A42
         TM    DCBRECFM-IHADCB(RA),X'C0'  RECFM 'U' .Q            V7A42
         BNO   LIBRDS0                  BRANCH IF NOT             V7A42
         LTR   L4,L4                    CHECK RESIDUAL COUNT      V7A42
         BNM   LIBRDERR                 OVERFLOW IF ZERO OR POS   V7A42
LIBRDS0  DS    0H                                                 V7A42
         AH    L4,DCBBLKSI-IHADCB(,RA)  GET TRUE BLOCK LENGTH     V7A42
         L     LINK,LBAREAAD(,RE1)      GET THE BUFFER ADDRESS    V7A42
         CH    L4,0(,LINK)              TEST IF IT'S EDIT FORMAT  V7A42
         BL    LIBRDS1                  IF NOT, PROCESS NORMALLY  V7A42
         CLI   0(LINK),X'0F'            BETTER DOUBLE-CHECK       V7A42
         BNL   LIBRDS1                  THAT THE WORD'S POSITIVE  V7A42
         LH    L4,0(,LINK)              GET THE 'REAL' LENGTH     V7A42
         ST    L4,LBLIBEOB(,RE1)        STORE IT AS EOB ADDR      V7A42
         LA    L4,2                     GET STARTING OFFSET OF 2  V7A42
         B     LIBRDS2                  REJOIN COMMON CODING      V7A42
LIBRDS1  DS    0H                                                 V7A42
         ST    L4,LBLIBEOB(,RE1)        SAVE EOB OFFSET           V7A42
         SR    L4,L4                    ZERO WORK REGISTER        V7A42
LIBRDS2  DS    0H                                                 V7A42
         ST    L4,LBLIBNTA(,RE1)        ZERO START BUFFER OFFSET  V7A42
         L     LINK,LSLINK              RESTORE LINK REGISTER     V7A42
         BR    LINK                     RETURN TO CALLER          V7A42
*                                                                 V7A42
LIBRDERR DS    0H                                                 V7A42
         L     RA,ADLIST1               POINT TO LIST1 IN ASM     V7A42
         MVC   LIBRDDNM(8),L1DDNAM+24(RA) MOVE "SYSLIB" INTO MSG  V7A42
         BAL   RQ,L1ABEND(,RA)          GO TERMINATE ASSEMBLY     V7A42
*                                                                 V7A42
         DC    C'503A',AL1(LIBME-*-2)   PARAMETERS FOR ABEND      V7A42
         DC    C'BLOCK EXCEEDS DECLARED BLKSIZE, DDNAME = '       V7A42
LIBRDDNM DC    C'XXXXXXXX'              SPACE FOR DDNAME          V7A42
LIBME    EQU   *                        END OF MESSAGE            V7A42
*                                                                 V7A42
><       DELETE    SEQ1=49673027,SEQ2=49673027                    V7A42
         READ  (RD1),SF,,,'S',MF=E      READ INTO BUFFER          V7A42
./ ADD NAME=ASMGF3
><       CHANGE    NAME=ASMGF3
         TM        PARBYT1,X'04'       UNDER EXTEN .Q             V7A49
         BNO       MACIN               NO, JUST GO AND READ       V7A49
         MVI       MAC4+1,X'00'        EXTEN POS PARMS SWITCH     V7A49
         L         R8,NDXCNT           FIRST SYSNDX VALUE         V7A49
         BCTR      R8,0                LESS ONE                   V7A49
         ST        R8,NDXCNT           SET FOR OPEN CODE VALUE    V7A49
         LH        R8,POSNOMAX         OLD MAX POS PARMS          V7A58
         LA        R8,40(,R8)          BUMP BY EXTEN OPTION       V7A58
         STH       R8,POSNOMAX         SET NEW MAX POS PARMS      V7A58
         LH        R8,HIPTRMXL         OLD MAX BYTE LENGTH        V7A58
         LA        R8,40*2(,R8)        BUMP TWICE EXTEN OPTION    V7A58
         STH       R8,HIPTRMXL         SET NEW MAX BYTE LENGTH    V7A58
         MVI       MAC5+1,X'00'        CLEAR FIRST TIME SWITCH    V7A49
         MVC       PARADROP(4),PARSAV  SAVE OPEN CODE PAR AREA    V7A49
         LA        R8,HIPTROP          OPEN PAR POINTERS HERE     V7A49
         ST        R8,PADOP            INITIALIZE ITS VALUE       V7A49
><       DELETE    SEQ1=06900027,SEQ2=06900027                    V7A53
         LA        R10,7(,R10)         BUMP INPUT POINTER         V7A53
         TM        PARBYT1,X'04'       UNDER EXTEN .Q             V7A49
         BNO       CSECT01             BRANCH IF NOT              V7A49
         L         R8,PARADROP         OPEN CODE POS PARM AREA    V7A49
         MVC       13(9,R8),SECTNM     ENTER SECTION NAME/LENGTH  V7A49
         MVC       45(6,R8),SECTYP     ENTER SECTION TYPE         V7A49
         CLC       46(5,R8),=X'1C1D0A1B1D'  IS IT 'START' .Q      V7A49
         BNE       CSECT01             BRANCH IF NOT              V7A49
         MVC       46(5,R8),=X'0C1C0E0C1D'  CHANGE TO 'CSECT'     V7A49
CSECT01  DS        0H                                             V7A49
         TM        PARBYT1,X'04'       UNDER EXTEN .Q             V7A49
         BNO       CSECT02             BRANCH IF NOT              V7A49
         L         R8,PARADROP         OPEN CODE POS PARM AREA    V7A49
         MVC       13(9,R8),SECTNM     ENTER SECTION NAME/LENGTH  V7A49
         MVC       45(6,R8),SECTYP     ENTER SECTION TYPE         V7A49
         CLC       46(5,R8),=X'1C1D0A1B1D'  IS IT 'START' .Q      V7A49
         BNE       CSECT02             BRANCH IF NOT              V7A49
         MVC       46(5,R8),=X'0C1C0E0C1D'  CHANGE TO 'CSECT'     V7A49
CSECT02  DS        0H                                             V7A49
         LA        R5,4(,R7)           ACTR VALUE GOES HERE       V7A55
         CR        R5,R12              DID WE JUST SET ACTR .Q    V7A55
         BNE       PARAM               BRANCH IF NOT              V7A55
         XC        8(4,R7),8(R7)       ZERO LOOP COUNT            V7A55
MAC5     BC        *-*+15,INIT1        BRANCH IF EXTEN AND OPEN   V7A49
><       DELETE    SEQ1=13450027,SEQ2=13450027                    V7A53
         LA        R10,3(,R10)         BUMP FOR END STATEMENT     V7A53
><       DELETE    SEQ1=13690027,SEQ2=13690027                    V7A53
*./      DELETE    SEQ1=13690027,SEQ2=13690027                    V7A53
         MVI       KEYSWIT,X'00'       CLEAR KEYWORD SWITCHES     V7A53
KWPRT01  DS        0H                                             V7A53
         CLI       0(R10),ENDREC       END OF PROTOTYPE           V7A53
         BE        KWPRT03             BRANCH IF YES              V7A53
         CLI       0(R10),ERRFLG       ERROR RECORD .Q            V7A53
         BH        KWPRT02             HIGHER, END OF RECORD      V7A53
         MVC       FWRD+2(2),1(R10)    ALIGN RECORD LENGTH        V7A53
         AH        R10,FWRD+2          ADVANCE PROTOTYPE PTR      V7A53
         B         KWPRT01             CONTINUE SEARCH            V7A53
KWPRT02  DS        0H                                             V7A53
         LA        R12,BUFFCB          READ NEXT PROTO SEGMENT    V7A53
         BAL       R9,RDNEXT2          READ NEXT PROTO SEGMENT    V7A53
         LA        R10,BLKHDR(,R1)     POINT TO NEXT RECORD       V7A53
         B         KWPRT01             AND CONTINUE SEARCH        V7A53
KWPRT03  DS        0H                                             V7A53
         MVC       POSCNT,5(R10)       ALIGN POS PARM COUNT       V7A53
         L         R0,SAVNOTE          READ PROTOTYPE TARGET BLK  V7A53
         LA        R12,BUFFCB          BUFFER CONTROL BLOCK       V7A53
         BAL       R9,RDTEXT2          RE-READ THE PROTOTYPE      V7A53
         LA        R10,BLKHDR(,R1)     POINT PAST HEADER          V7A53
         CLI       0(R10),X'06'        CHECK IF PROTOTYPE AGAIN   V7A53
         BNE       PUTERR              (LOGIC) ERROR IF NOT       V7A53
         MVC       FWRD+2(2),1(R10)    PROTOTYPE RECORD LENGTH    V7A53
         AH        R10,FWRD+2          ADVANCE PROTOTYPE POINTER  V7A53
><       DELETE    SEQ1=13860020,SEQ2=13860020                    V7A53
         BL        KWENDMI             M-I END RECORD FLAG        V7A53
><       DELETE    SEQ1=14120020,SEQ2=14120020                    V7A53
         BH        KWPAR               BRANCH IF KEYWORD          V7A53
         TM        KEYSWIT,KEYPASS2    SECOND PASS, KEYWORDS ONLY V7A53
         BO        PARP                BRANCH IF YES              V7A53
KWPAR    DS        0H                                             V7A53
         TM        KEYSWIT,KEYPASS2    2ND PASS KEYWORDS ONLY     V7A53
         BO        ALLPOS              BRANCH IF YES              V7A53
         OI        KEYSWIT,KEYFOUND    ONE KEYWORD IN M-I         V7A53
         B         PARP                SKIP IT THIS TIME          V7A53
KWENDMI  DS        0H                                             V7A53
         TM        KEYSWIT,KEYPASS2    2ND PASS KEYWORDS ONLY     V7A53
         BO        ALLPOS              BRANCH TO END IF YES       V7A53
         TM        KEYSWIT,KEYFOUND    ANY KEYWORDS ENCOUNTERED   V7A53
         BNO       ALLPOS              BRANCH IF NOT              V7A53
         OI        KEYSWIT,KEYPASS2    2ND PASS KEYWORDS ONLY     V7A53
         B         RDAGN               AND TRY AGAIN              V7A53
KEXTESTA BC        *-*,KATT1A          MOD FOR K' OF SETA         V7A56
KEXTESTB BC        *-*,KATT1B          MOD FOR K' OF SETB         V7A56
*        GET K' (COUNT) ATTRIBUTE OF VARIABLE SETA SYMBOL         V7A56
*                                                                 V7A56
KATTBTA  DS        0H                                             V7A56
         LA        R10,1(,R10)         BUMP INPUT POINTER         V7A56
         MVI       KEXTESTA+1,X'F0'    NO SUBSCRIPT SETA IN ARITH V7A56
         BAL       R9,METINT           FIND THE VARIABLE          V7A56
KATT1A   DS        0H                                             V7A56
         MVI       KEXTESTA+1,X'00'    REVERT BRANCH TO NOP       V7A56
         MVC       SAV12(4),0(R12)     ALIGN THE SETA VALUE       V7A56
         L         R8,SAV12            GET SETA VALUE             V7A56
         BAL       R9,ABCD             CONVERT TO PRINTABLE       V7A56
         LR        R8,R5               RESULTING STRING LENGTH    V7A56
         B         METB1               CONTINUE                   V7A56
*                                                                 V7A56
*        GET K' (COUNT) ATTRIBUTE OF VARIABLE SETB SYMBOL         V7A56
*                                                                 V7A56
KATTBTB  DS        0H                                             V7A56
         LA        R10,1(,R10)         BUMP INPUT POINTER         V7A56
         MVI       KEXTESTB+1,X'F0'    NO SUBSCRIPT SETB IN ARITH V7A56
         BAL       R9,METINT           FIND THE VARIABLE          V7A56
KATT1B   DS        0H                                             V7A56
         MVI       KEXTESTB+1,X'00'    REVERT BRANCH TO NOP       V7A56
         LA        R8,1                ALWAYS, ALWAYS ONE         V7A56
         B         METB1               CONTINUE                   V7A56
*                                                                 V7A56
><       DELETE    SEQ1=32350027,SEQ2=32350027                    V7A03
         CLI       3(R12),X'80'        NO SCALE FOR EXTENDED EQU  V7A03
         CLI       BUFFCB+7,8          IN OPEN CODE .Q            V7A49
         BNE       POSPAR01            BRANCH IF NOT              V7A49
         MVC       PAD(8),PADOP        ENTER THE OPEN CODE PTRS   V7A49
POSPAR01 DS        0H                                             V7A49
         CLI       1(R10),VSETA        EXTENDED K' OF SETA .Q     V7A56
         BE        KATTBTA             BRANCH IF YES              V7A56
         CLI       1(R10),VSETB        EXTENDED K' OF SETB .Q     V7A56
         BE        KATTBTB             BRANCH IF YES              V7A56
><       DELETE    SEQ1=41035026,SEQ2=41035026                    V7A39
         LA        R9,0(R9,R11)        POINT TO LAST OUTPUT CHAR  V7A39
><       DELETE    SEQ1=43580022,SEQ2=43580022                    V7A25
*./      DELETE    SEQ1=43580022,SEQ2=43580022                    V7A25
HIPTROP  DC        H'14',AL2(11,22,32,43,51),AL1(0,0)  OPEN CODE  V7A49
><       DELETE    SEQ1=49000020,SEQ2=49000020                    V7A58
         DS        (2*240+2)C          CONTIN FOR FIELD 'HIPTR'   V7A58
PADOP    DC        A(*-*,*-*)          OPEN CODE POS PARM ADDRS   V7A49
PARADROP EQU       PADOP+4             ADDR OPEN PARM TABLE       V7A49
KEYSWIT  DC        X'00'               M-I KEYWORD SCAN SWITCH    V7A53
KEYPASS2 EQU       X'80'               SECOND PASS, KEYWORDS ONLY V7A53
KEYFOUND EQU       X'40'               KEYWORD FOUND ON 1ST PASS  V7A53
><       DELETE    SEQ1=50677027,SEQ2=50677027                    V7A16
DUMLENF3 EQU       (26*1024-(F3END-ASMGF3))/256*256  MULT OF 256  V7A16
         DC        0D'0'               RESULT OF ALIGNMENT        V7A16
./ ADD NAME=ASMGF7C
><       CHANGE    NAME=ASMGF7C
><       DELETE    SEQ1=05980020,SEQ2=05980020
         BNE   TITLE1                   BRANCH IF LABEL PRESENT   V7A02
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A02
         BO    TITLE5                   YES, ALLOW LATER TITLE    V7A02
         B     TITLE4                   NO FURTHER TITLE LABELS   V7A02
><       DELETE    SEQ1=06210027,SEQ2=06210027
TITLE5   DS    0H                                                 V7A02
><       DELETE    SEQ1=07740020,SEQ2=07740020                    V7A41
         BNE   MNOTE1A                  BRANCH IF NOT             V7A41
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A41
         BNO   MNOTE3                   NO, SEVERITY CODE OMITTED V7A41
         OI    MNOTESC+1,X'F0'          CLOSE ERROR LOGGING GATE  V7A41
         B     MNOTE3                   SEVERITY CODE WAS OMITTED V7A41
MNOTE1A  DS    0H                                                 V7A41
./ ADD NAME=ASMGF7D
><       CHANGE    NAME=ASMGF7D
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A13
         BO    DCEV1                    YES, LIT EXPRESSION OK    V7A13
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A14
         BO    DCEV1Y                   YES, ALLOW * IN EXPRESS   V7A14
DCEV1Y   DS    0H                                                 V7A14
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A13
         BO    LMS3A                    YES, LIT EXPRESSION OK    V7A13
LMS3A    DS    0H                                                 V7A13
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A14
         BO    LMS4A                    YES, ALLOW * IN EXPRESS   V7A14
LMS4A    DS    0H                                                 V7A14
./ ADD NAME=ASMGF7I
><       CHANGE    NAME=ASMGF7I
         ST    GR1,CTXOFP(,ACT)         POSITIVE OPERAND ADDR     V7A23
><       DELETE    SEQ1=13900020,SEQ2=13900020                    V7A19
         MVC       ESDSEGR+768(208,SP2),ESDSEGR(SP2)              V7A19
./ ADD NAME=ASMGF7N
><       CHANGE    NAME=ASMGF7N
*   EQU, ORG, LTORG OR CNOP CODE (IF LABELLED AND EXTEN)          V7A31
><       DELETE    SEQ1=07940020,SEQ2=07940020                    V7A31
         BE    CCW                      BRANCH IF YES             V7A31
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A31
         BNO   RETURN                   RETURN NOW IF NOT         V7A31
         CLI   TXNAML(GRA),X'00'        IS LABEL FIELD NULL .Q    V7A31
         BE    RETURN                   BRANCH IF YES             V7A31
         CLI   TXHEX(GRA),X'1F'         CHECK FOR EQU CODE        V7A31
         BE    EQU                      BRANCH IF YES             V7A31
         CLI   TXHEX(GRA),X'20'         CHECK FOR ORG             V7A31
         BE    ORG                      BRANCH IF YES             V7A31
         CLI   TXHEX(GRA),X'22'         CHECK FOR LTORG           V7A31
         BE    ENTSIX                   BRANCH IF YES             V7A31
         CLI   TXHEX(GRA),X'29'         CHECK FOR CNOP            V7A31
         BE    CNOP                     BRANCH IF YES             V7A31
         B     RETURN                   ELSE RETURN               V7A31
*                                                                 V7A31
EQU      DS    0H                                                 V7A31
         CLI   ESDID(ACT),X'00'         ABSOLUTE EQU .Q           V7A31
         BE    RETURN                   YES, NO TESTRAN ENTRY     V7A31
         MVC   LOCCTR(4),STVALU(ACT)    VALUE OF RELOC EQU        V7A31
         B     ENTSIX                   GO SET TYPE               V7A31
><       DELETE    SEQ1=07960020,SEQ2=07960020                    V7A31
*                                                                 V7A31
ORG      DS    0H                                                 V7A31
         MVC   LOCCTR+1(3),TXLOC+5(GRB) SET PREVIOUS ADDRESS      V7A31
         B     ENTSIX                   GO SET TYPE               V7A31
*                                                                 V7A31
CNOP     DS    0H                                                 V7A31
         MVC   LOCCTR(4),STVALU(ACT)    FORMER LOC'N VALUE        V7A31
*                                                                 V7A31
ENTSIX   DS    0H                                                 V7A31
         OI    ORBYT,X'60'              SET TYPE SIX              V7A31
         B     MDSO                     MAKE THE ENTRY            V7A31
*                                                                 V7A31
CCW      DS    0H                                                 V7A31
./ ADD NAME=ASMGF7V
><       CHANGE    NAME=ASMGF7V
         N     GR1,LOW16                CLEAR TOP HALFWORD        V7A51
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BNO   DECNEX                   BRANCH IF NOT             V7A15
         LA    GR0,10                   MAX NO OF DIGITS          V7A15
         B     ABSD                     GO AND CHECK RESULT       V7A15
DECNEX   DS    0H                                                 V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BNO   BINNEX                   BRANCH IF NOT             V7A15
         LA    GR0,32                   MAX NO OF BITS            V7A15
         B     LM                       GO AND CHECK RESULT       V7A15
BINNEX   DS    0H                                                 V7A15
><       DELETE    SEQ1=06840020,SEQ2=06840020                    V7A15
         LA    GR0,4                    MAX NO OF CHARACTERS      V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BO    CHANEX                   BRANCH IF YES             V7A15
         LA    GR0,3                    MAX NO OF CHARACTERS      V7A15
CHANEX   DS    0H                                                 V7A15
         LA    GR0,8                    MAX NO OF HEX DIGITS      V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BO    LM                       BRANCH IF YES             V7A15
><       DELETE    SEQ1=16460020,SEQ2=16560020                    V7A15
SDV04    DS    0H                                                 V7A15
         CLI   SDV08+1,3                TEST FOR DECIMAL CONSTANT V7A15
         BNE   SDV05                    BRANCH IF NOT             V7A15
         SLA   VALR,0(SHFR)             OLD VALUE TIMES EIGHT     V7A15
         BO    SDVOFLO                  ERROR IF OVERFLOW         V7A15
         AR    SAVR,SAVR                TWICE OLD VALUE           V7A15
         AR    VALR,SAVR                TEN TIMES OLD VALUE       V7A15
         BO    SDVOFLO                  BRANCH IF OVERFLOW        V7A15
         AR    VALR,CHAR                PLUS NEXT DIGIT           V7A15
         BNO   SDV05A                   BRANCH IF NO OVERFLOW     V7A15
SDVOFLO  DS    0H                                                 V7A15
         LA    CNTR,10                  TOO MANY DECIMAL DIGITS   V7A15
         B     SDV05A                   AND CONTINUE              V7A15
SDV05    DS    0H                                                 V7A15
         SLL   VALR,0(SHFR)             SHIFT OLD VALUE           V7A15
         ALR   VALR,CHAR                ADD CHAR TO VALUE         V7A15
SDV05A   DS    0H                                                 V7A15
LOW16    DC    F'65535'                 LAST SIXTEEN BITS ON      V7A51
./ ADD NAME=ASMGF8A
><       CHANGE    NAME=ASMGF8A
><       DELETE    SEQ1=05830025,SEQ2=05835025
*./      DELETE    SEQ1=05830025,SEQ2=05835025
         ST    SP1,DWORD                START OF USING OPERAND    V7A29
         ST    SP1,DWORD+4              END+1 OF USING OPERAND    V7A29
         XC    DWORD,DWORD              CLEAR USING LABEL         V7A29
         L     GR1,DWORD                START OF USING LABEL      V7A29
         LTR   GR1,GR1                  IS ANYTHING THERE .Q      V7A29
         BZ    USDPPOP                  BRANCH IF NOT             V7A29
         MVI   USNGLBEL,IBLANK          BLANK TARGET LABEL        V7A29
         MVC   USNGLBEL+1(L'USNGLBEL-1),USNGLBEL  ALL OF IT       V7A29
         L     SP2,DWORD+4              END OF USING LABEL        V7A29
         SR    SP2,GR1                  LENGTH OF LABEL           V7A29
         BNP   USDPNUL                  JUST IN CASE              V7A29
><       DELETE    SEQ1=12145027,SEQ2=12145027                    V7A29
         LA    SRR,L'USNGLBEL           MAX ALLOWED               V7A29
         CR    SP2,SRR                  ARE WE LESS .Q            V7A29
         BNH   USDPLNOK                 BRANCH IF YES             V7A29
         LA    SP2,L'USNGLBEL-1         USING MAXIMUM-1 INSTEAD   V7A29
         MVI   USNGLBEL+L'USNGLBEL-1,IPRIOD  WITH DOT AT END      V7A29
USDPLNOK DS    0H                                                 V7A29
         BCTR  SP2,0                    LENGTH-1                  V7A29
         EX    SP2,USDPMVC              MOVE ARGUMENT             V7A29
USDPNUL  DS    0H                                                 V7A29
         L     GR1,CTRTBP(,ACT)         EXTERNAL TRANSLATE TABLE  V7A29
><       DELETE    SEQ1=12146027,SEQ2=12146027                    V7A29
         TR    USNGLBEL,0(GR1)          TRANSLATE LABEL TO EXT    V7A29
         B     USDPRETN                 GO TO RETURN              V7A29
USDPMVC  MVC   USNGLBEL(*-*),0(GR1)     EXECUTED MOVE LABEL       V7A29
USDPPOP  DS    0H                                                 V7A29
         MVC   USNGLBEL,USNGPOP         THIS IS A POP USING       V7A29
USDPRETN DS    0H                                                 V7A29
         LM    SP2,SP1,F8REGS           RESTORE CALLER'S REGS     V7A29
><       DELETE    SEQ1=12169027,SEQ2=12169027                    V7A35
         NI    CTUMAPI(ACT),X'FF'-X'80' TURN OFF UMAP OPTION      V7A35
><       DELETE    SEQ1=12170027,SEQ2=12170027                    V7A35
         BAL   SRR,ERRZRO               ERROR ROUTINE             V7A35
><       DELETE    SEQ1=12171027,SEQ2=12171027                    V7A35
         DC    AL2(ERRUSNG)             UMAP EXHAUSTED            V7A35
><       DELETE    SEQ1=12172027,SEQ2=12172027                    V7A35
         B     USDPRETN                 BRANCH TO RETURN          V7A35
USNGPOP  DC    CL12'*** POP ***'        LABEL OF POPPED REGISTER  V7A29
ERRUSNG  EQU   114                      NO STORAGE FOR UMAP       V7A35
><       DELETE    SEQ1=19100027,SEQ2=19100027                    V7A29
USNGLBEL DS    CL12                     LABEL OF USING LOCATION   V7A29
./ ADD NAME=ASMGF8I
><       CHANGE    NAME=ASMGF8I
         NI    2(GRC),ALL-MKI           UNSET LAST RECORD BIT     V7A30
         OI    2(GRC),MKI               SET LAST RECORD BIT       V7A30
./ ADD NAME=ASMGF8M
><       CHANGE    NAME=ASMGF8M
LTVL00   DS    0H                                                 V7A13
><       DELETE    SEQ1=16420020,SEQ2=16520020                    V7A13
         LA    SP1,1(,SP1)              BUMP OPERAND POINTER      V7A13
         CLI   0(SP1),ICOMMA            IS LITERAL DELIM COMMA .Q V7A13
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13
         CLI   0(SP1),IBLANK            IS LITERAL DELIM BLANK .Q V7A13
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A13
         BNO   DLMERR                   NO, DELIMITER ERROR       V7A13
         SR    GRD,GRD                  ZERO WORK REGISTER        V7A13
         B     LTVL00                   AND TRY AGAIN             V7A13
><       DELETE    SEQ1=16700020,SEQ2=16700020                    V7A13
         BNZ   LTVLQ5                   IF NOT ZERO, CONTINUE     V7A13
         LA    SP1,1(,SP1)              BUMP OPERAND POINTER      V7A13
         CLI   0(SP1),ICOMMA            IS LITERAL DELIM COMMA .Q V7A13
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13
         CLI   0(SP1),IBLANK            IS LITERAL DELIM BLANK .Q V7A13
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13
         B     DLMERR                   IF NOT, DELIM ERROR       V7A13
><       DELETE    SEQ1=16940023,SEQ2=16940023                    V7A11
         TM    TXLASI(GRB),X'03'        IS LITERAL IN POOL .Q     V7A11
         BNZ   LITVL11                  YES, CONTINUE             V7A11
         L     GRC,CTEXTP(,ACT)         NO, GET ADDRESS TO TEXT   V7A11
         TM    2(GRC),X'02'             IS EQUAL SIGN IND. ON .Q  V7A11
         BO    LTVLERR                  YES, ERROR FOUND EARLIER  V7A11
LITVL11  DS    0H                                                 V7A11
./ ADD NAME=ASMGF8P
><       CHANGE    NAME=ASMGF8P
><       DELETE    SEQ1=02580020,SEQ2=02580020                    V7A07
         CLI       F8PGEN(ACT),X'FF'   DO WE PRINT GEN STATEMENT  V7A07
><       DELETE    SEQ1=03240020,SEQ2=03240020                    V7A10
         STH   SP2,BLKBLK               SPACE ON AND OK           V7A10
><       DELETE    SEQ1=04500020,SEQ2=04500020                    V7A10
         LH    GRY,BLKCNT               TOTAL BLANK LINE COUNT    V7A10
><       DELETE    SEQ1=04520020,SEQ2=04520020                    V7A10
         LH    GR1,BLKBLK               FOR SUCCESSIVE 'SPACE' OP V7A10
><       DELETE    SEQ1=04560020,SEQ2=04560020                    V7A10
         STH   GRY,BLKCNT               BLANK LINE COUNTER        V7A10
><       DELETE    SEQ1=04640020,SEQ2=04640020                    V7A10
PRINT7   DS    0H                                                 V7A10
         CLC   BLKCNT,LCNT              LARGE SPACE WAITING .Q    V7A10
><       DELETE    SEQ1=04740020,SEQ2=04740020                    V7A10
         MVC   BLKCNT,HONE              SET FIRST BLANK LINE CNT  V7A10
><       DELETE    SEQ1=07600020,SEQ2=07600020                    V7A10
         LH    GRD,BLKCNT               PICK UP BLANK LINE COUNT  V7A10
><       DELETE    SEQ1=07880020,SEQ2=07880020                    V7A10
         MVC   BLKCNT,HZERO             RESET BLANK LINE COUNT    V7A10
         TM    F8WORK+3(ACT),X'80'      AN ASSEMBLER OP .Q        V7A04
         BZ    BLDNOTIT                 BRANCH IF NOT             V7A04
         CLI   F8WORK+4(ACT),TITLEX     A GENERATED TITLE .Q      V7A04
         BE    BLDTITLE                 YES, NO CONTINUATIONS     V7A04
BLDNOTIT DS    0H                                                 V7A04
         CLI   0(GRC),IBLANK            BLANK OPERAND .Q          V7A09
         BNE   BLDXX01                  BRANCH IF NOT             V7A09
         C     GRB,F1                   AND THAT IS ALL .Q        V7A09
         BNE   BLDXX01                  BRANCH IF NOT             V7A09
         LA    GRC,1(,GRC)              BUMP START ADDRESS        V7A09
         SR    GRB,GRB                  ZERO STRING LENGTH        V7A09
BLDXX01  DS    0H                                                 V7A09
BLDTITLE DS    0H                                                 V7A04
HONE     EQU   F1+2                     HALFWORD CONSTANT ONE     V7A10
BLKCNT   DC    H'0'                     BLANK LINE COUNT          V7A10
><       DELETE    SEQ1=14820026,SEQ2=14820026                    V7A10
BLKBLK   DC    H'0'                     NUM SPACES IN SPACE STMT  V7A10
><       DELETE    SEQ1=14920020,SEQ2=14940020                    V7A10
*./      DELETE    SEQ1=14920020,SEQ2=14940020                    V7A10
./ ADD NAME=ASMGF8V
><       CHANGE    NAME=ASMGF8V
         N     GR1,LOW16                CLEAR TOP HALFWORD        V7A51
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BNO   DECNEX                   BRANCH IF NOT             V7A15
         LA    GR0,10                   MAX NO OF DIGITS          V7A15
         B     ABSD                     GO AND CHECK RESULT       V7A15
DECNEX   DS    0H                                                 V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BNO   BINNEX                   BRANCH IF NOT             V7A15
         LA    GR0,32                   MAX NO OF BITS            V7A15
         B     LM                       GO AND CHECK RESULT       V7A15
BINNEX   DS    0H                                                 V7A15
><       DELETE    SEQ1=06960020,SEQ2=06960020                    V7A15
         LA    GR0,4                    MAX NO OF CHARACTERS      V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BO    CHANEX                   BRANCH IF YES             V7A15
         LA    GR0,3                    MAX NO OF CHARACTERS      V7A15
CHANEX   DS    0H                                                 V7A15
         LA    GR0,8                    MAX NO OF HEX DIGITS      V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BO    LM                       BRANCH IF YES             V7A15
><       DELETE    SEQ1=16440020,SEQ2=16540020                    V7A15
SDV04    DS    0H                                                 V7A15
         CLI   SDV08+1,3                TEST FOR DECIMAL CONSTANT V7A15
         BNE   SDV05                    BRANCH IF NOT             V7A15
         SLA   VALR,0(SHFR)             OLD VALUE TIMES EIGHT     V7A15
         BO    SDVOFLO                  ERROR IF OVERFLOW         V7A15
         AR    SAVR,SAVR                TWICE OLD VALUE           V7A15
         AR    VALR,SAVR                TEN TIMES OLD VALUE       V7A15
         BO    SDVOFLO                  BRANCH IF OVERFLOW        V7A15
         AR    VALR,CHAR                PLUS NEXT DIGIT           V7A15
         BNO   SDV05A                   BRANCH IF NO OVERFLOW     V7A15
SDVOFLO  DS    0H                                                 V7A15
         LA    CNTR,10                  TOO MANY DECIMAL DIGITS   V7A15
         B     SDV05A                   AND CONTINUE              V7A15
SDV05    DS    0H                                                 V7A15
         SLL   VALR,0(SHFR)             SHIFT OLD VALUE           V7A15
         ALR   VALR,CHAR                ADD CHAR TO VALUE         V7A15
SDV05A   DS    0H                                                 V7A15
LOW16    DC    F'65535'                 LAST SIXTEEN BITS ON      V7A51
./ ADD NAME=ASMGUP
><       CHANGE    NAME=ASMGUP
><       DELETE SEQ1=01230026,SEQ2=01240025                       V7A42
         LA        RC,4095(RB)         RECOVER 2ND BASE REG       V7A48
         LA        RC,1(,RC)           FOR OPEN EXIT IN ASMGF1    V7A48
         AP        DSSNEW1,DSSINCR     GET NEXT AUTONUMBER        V7A20
         BZ        DSSERROR            NOT IN EFFECT, BLANK BAD   V7A20
         UNPK      UTUPSEQ(8),DSSNEW1(5)  INTO THE CARD           V7A20
         OI        UTUPSEQ+7,X'F0'     FIX LAST COLUMN UP         V7A20
         B         UPDATA              AND GIVE THE CARD TO ASMG  V7A20
DSSERROR DS        0H                  AUTO-NUMBER DEAD, BAD CARD V7A20
         UPEMSG    321                 ERROR MESSAGE              V7A48
         MVC       9(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME      V7A48
><       DELETE SEQ1=02860026,SEQ2=02920025                       V7A48
><       DELETE SEQ1=03300025,SEQ2=03300025                       V7A48
         UPEMSG    323                 COMMENT TEXT               V7A48
><       DELETE SEQ1=03480025,SEQ2=03480025                       V7A48
         UPEMSG    324                 MESSAGE TEXT               V7A48
><       DELETE SEQ1=03580025,SEQ2=03580025                       V7A48
         UPEMSG    325                 MESSAGE TEXT               V7A48
         SP        DSSNEW1,DSSNEW1     CLEAR NEW1                 V7A20
         MVC       DSSINCR,DSSNEW1     AND CLEAR INCR             V7A20
         CLC       =C'DELET ',0(R8)    IEBUPDAT/HASPGEN DELETE .Q V7A22
         BE        UPCCH               YES, ENTER DELETE CODE     V7A22
         CLC       =C'CHNGE ',0(R8)    IEBUPDAT 'CHNGE' CARD?     V7A42
         BE        UPCOM               YES, NOT SUPPORTED         V7A42
><       DELETE    SEQ1=04180025,SEQ2=04180025                    V7A20
         BE        DSSNUM              YES, TRY TO AUTONUMBER     V7A20
         CLI       0(R8),C'*'          A (G) EXTENDED COMMENT .Q  V7A21
         BNE       UPBADCOM            BRANCH IF NOT              V7A21
         UPEMSG    343                 MESSAGE ADDRESS            V7A48
         LA        R4,UTUPREC          COMMENT RECORD ON SYSUP    V7A48
         BAL       RE,ERROR            GO PRINT THE RECORD        V7A21
         B         UPCONT              CHECK FOR CONTINUATIONS    V7A21
><       DELETE SEQ1=04360025,SEQ2=04360025                       V7A48
         UPEMSG    337                 ERROR MESSAGE              V7A48
><       DELETE SEQ1=04560025,SEQ2=04560025                       V7A48
         UPEMSG    336                 ERROR MESSAGE              V7A48
><       DELETE SEQ1=04800025,SEQ2=04800025                       V7A48
         UPEMSG    338                 ERROR MESSAGE              V7A48
><       DELETE  SEQ1=04940026,SEQ2=04940026                      V7A42
         LA        R4,UTUPREC+70       LAST POSSIBLE PARM ADDR    V7A42
         UPEMSG    339                 ERROR COMMENT              V7A48
         MVC       20(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME     V7A48
><       DELETE SEQ1=05100026,SEQ2=05120025                       V7A48
         UPEMSG    340                 ERROR MESSAGE              V7A48
         MVC       15(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME     V7A48
><       DELETE SEQ1=05300026,SEQ2=05320025                       V7A48
UPCCH    DS        0H                                             V7A22
         BCTR      R8,0                BACKUP FOR 'DELET'         V7A22
><       DELETE    SEQ1=05660026,SEQ2=05660026                    V7A22
         BNE       UPDELEX             TRY POSITIONALS IF NOT     V7A22
UPDELEX  DS        0H                                             V7A22
         LA        R1,UPDELS1          SET SEQ1 POSITIONAL 1      V7A22
         CLI       0(R1),X'FF'         HAVE WE GOTTEN SEQ1 .Q     V7A22
         BE        UPDELGO             NO, GO SCAN SEQ1 POSNL     V7A22
         LA        R1,UPDELS2          SET FOR SEQ2 POSITIONAL    V7A22
         CLI       0(R1),X'FF'         SCANNED SEQ2 .Q            V7A22
         BNE       UPDELER             YES, ERROR                 V7A22
UPDELGO  DS        0H                                             V7A22
         BAL       RE,DEPOINTX         GO SCAN OFF POSITIONAL SEQ V7A22
         B         DELOOP              LOOP NEXT SEQ NUMBER       V7A22
><       DELETE SEQ1=05740025,SEQ2=05740025                       V7A48
         UPEMSG    334                 ERROR MESSAGE              V7A48
><       DELETE    SEQ1=05890026,SEQ2=05890026                    V7A22
         BNE       DEDONE1             BRANCH IF YES              V7A22
         MVC       UPDELS2(8),UPDELS1  SET SEQ2=SEQ1              V7A22
DEDONE1  DS        0H                                             V7A22
><       DELETE SEQ1=05980025,SEQ2=05980025                       V7A48
         UPEMSG    335                 ERROR MESSAGE              V7A48
         LA        R8,5(,R8)           POINT PAST 'SEQN='         V7A22
DEPOINTX DS        0H                                             V7A22
><       DELETE    SEQ1=06047026,SEQ2=06047026                    V7A22
*./      DELETE    SEQ1=06047026,SEQ2=06047026                    V7A22
><       DELETE SEQ1=06300025,SEQ2=06300025                       V7A48
         UPEMSG    326                 MESSAGE TEST               V7A48
><       DELETE SEQ1=06580025,SEQ2=06580025                       V7A48
         UPEMSG    327                 ERROR MESSAGE              V7A48
UPDELRER DS        0H
         UPEMSG    328                 ERROR MESSAGE              V7A48
         MVC       3(8,R3),UPDEL01     SEQ1                       V7A48
         MVC       15(8,R3),UPDEL02    SEQ2                       V7A48
><       DELETE SEQ1=06820025,SEQ2=06900025                       V7A48
         UPEMSG    329                 MESSAGE TEXT               V7A48
><       DELETE SEQ1=07040025,SEQ2=07040025                       V7A48
         MVC       8(6,R3),=X'402020202120'  EDIT MASK            V7A48
><       DELETE SEQ1=07080025,SEQ2=07100025                       V7A48
         ED        8(6,R3),ERCVD+5  EDIT IN NUMBER                V7A48
         MVI       21(R3),C'S'         ASSUME PLURAL              V7A48
><       DELETE SEQ1=07140025,SEQ2=07200025                       V7A48
         MVI       21(R3),C' '         THERE'S ONLY ONE           V7A48
*                                                                 V7A20
*        SET UP FOR AUTOMATIC NUMBERING ON SYSUP                  V7A20
*                                                                 V7A20
DSSNUM   DS        0H                                             V7A20
         LA        R5,UPCOM            ERROR IF BUMP OVERFLOWS    V7A20
         LA        R8,6(,R8)           GET PAST 'NUMBER'          V7A20
DSSNUM1  DS        0H                                             V7A20
         BAL       RE,UPBUMP           SCAN FOR PARAMETER         V7A20
         CLI       0(R8),C' '          PARM PRESENT .Q            V7A20
         BE        DSSNUM1             NO, KEEP TRYING            V7A20
         MVI       DSS1,X'FF'          1ST ARG NOT INITIALIZED    V7A20
         MVI       DSS2,X'FF'          AND THE 2ND IS THE SAME    V7A20
         OI        ERSW,ERSWNUM        NUMERIC REQUIRED           V7A20
DSSLOOP  DS        0H                                             V7A20
         CLI       0(R8),C' '          END OF THE LINE .Q         V7A20
         BE        DSSDONE             CHECK FOR COMPLETENESS     V7A20
         CLC       =C'NEW1=',0(R8)     FIRST KEYWORD .Q           V7A20
         BNE       DSSTRY2             NO, CHECK THE OTHER        V7A20
         LA        R1,DSS1             1ST ARG TARGET             V7A20
         BAL       RE,DEPOINT          GO ENTER IT                V7A20
         B         DSSLOOP             KEEP GOING                 V7A20
DSSTRY2  DS        0H                                             V7A20
         CLC       =C'INCR=',0(R8)     2ND KEYWORD .Q             V7A20
         BCR       7,R5                NUMBER UNSUPPORTED ANYWAY  V7A20
         LA        R1,DSS2             SECOND TARGET              V7A20
         BAL       RE,DEPOINT          GO ENTER IT                V7A20
         B         DSSLOOP             CONTINUE LOOKING           V7A20
DSSDONE  DS        0H                  CHECK FOR ALL OK           V7A20
         CLI       DSS1,X'FF'          ARG1 OK .Q                 V7A20
         BCR       8,R5                NO, ERROR HIM              V7A20
         CLI       DSS2,X'FF'          AND ARG2 .Q                V7A20
         BCR       8,R5                BOTH ARE REQUIRED          V7A20
         PACK      DSSNEW1(5),DSS1(8)  INTO THE FIELD             V7A20
         PACK      DSSINCR(5),DSS2(8)  AS PACKED DECIMAL          V7A20
         SP        DSSNEW1(5),DSSINCR(5)  PREPARE FOR FIRST TIME  V7A20
         UPEMSG    342                 MESSAGE TEXT               V7A48
         MVC       3(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME      V7A48
         LA        R4,UTUPREC          SYSUP RECORD               V7A20
         BAL       RE,ERROR            PRINT IT OUT               V7A20
         B         UPCONT              CHECK FOR CONTINUATION     V7A20
         L         RF,L1DBLK+4(,R9)                               V7A42
         LTR       RF,RF                                          V7A42
         BNZ       RDINWYL                                        V7A42
RDINWYL  DS        0H                                             V7A42
><       DELETE SEQ1=07750026,SEQ2=07750026                       V7A42
         MVC       UTINREC,0(R1)       MOVE THE RECORD            V7A42
         UPEMSG    320                 MESSAGE TEXT               V7A48
         MVC       9(8,R3),L1DDNAM+2*L1SIN(R9)  SYSIN DDNAME      V7A48
><       DELETE SEQ1=07800026,SEQ2=07860025                       V7A48
         UPEMSG    332                 MESSAGE TEXT               V7A48
         MVC       3(8,R3),L1DDNAM+2*L1SIN(R9)  SYSIN DDNAME      V7A48
><       DELETE SEQ1=08020026,SEQ2=08080025                       V7A48
><       DELETE  SEQ1=08280026,SEQ2=08290026                      V7A42
         LM        RE,RC,12(RD)        RESTORE REGISTERS          V7A42
><       DELETE  SEQ1=08420026,SEQ2=08420026                      V7A42
         MVC       UTINREC,UTLASTR     SYSIN BECOMES INFINITE     V7A42
><       DELETE SEQ1=09040027,SEQ2=09040027                       V7A48
         UPEMSG    341                 MESSAGE TEXT               V7A48
><       DELETE  SEQ1=09280026,SEQ2=09290026                      V7A42
         LM        RE,RC,12(RD)        RESTORE CALLER'S REGS      V7A42
><       DELETE  SEQ1=09660026,SEQ2=09660026                      V7A42
         L         RF,L1DBLK+4(,R9)    POINT AT 'GET' ROUTINE     V7A42
         LTR       RF,RF               IS IT PREVENT .Q           V7A42
         BNZ       RDUPWYL             BRANCH IF YES              V7A42
         L         RF,DCBGET(R1)       REAL ACCESS METHOD ADDR    V7A42
RDUPWYL  DS        0H                                             V7A42
         BALR      RE,RF               DO THE GET                 V7A42
><       DELETE  SEQ1=09720025,SEQ2=09720025                      V7A42
         MVC       UTUPREC,0(R1)       MOVE THE RECORD            V7A42
><       DELETE SEQ1=09800025,SEQ2=09810026                       V7A42
         LM        RE,RC,12(RD)        RESTORE REGISTERS          V7A42
><       DELETE SEQ1=09920025,SEQ2=09920025                       V7A42
         MVC       UTUPREC,UTLASTR     DUMMY EOF SYSUP RECORD     V7A42
><       DELETE SEQ1=10940025,SEQ2=10940025                       V7A48
         UPEMSG    330                 ERROR MESSAGE              V7A48
><       DELETE SEQ1=14100026,SEQ2=14120025                       V7A48
         UPEMSG    331                 ERROR MESSAGE              V7A48
         MVC       3(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME      V7A48
><       DELETE SEQ1=15460026,SEQ2=15470026                       V7A42
><       DELETE SEQ1=15540025,SEQ2=15560025                       V7A42
><       DELETE SEQ1=15640025,SEQ2=15640025                       V7A42
*                                                                 V7A20
DSS1     DS        CL8                 NEW1 CHAR WORK AREA        V7A20
DSS2     DS        CL8                 INCR CHAR WORK AREA        V7A20
DSSNEW1  DC        PL5'0'              NEW1 PACKED VALUE          V7A20
DSSINCR  DC        PL5'0'              INCR PACKED VALUE          V7A20
         SPACE     1                                              V7A48
         LTORG     ,                                              V7A48
UPERROR  DS        0F                                             V7A48
><       DELETE    SEQ1=16160025,SEQ2=16160025                    V7A37
         UPEMSG    335,16,'SEQ1 IS GREATER THAN SEQ2'             V7A37
         UPEMSG    342,00,'SYSUPXXX NUMBERING RECORD'             V7A20
         UPEMSG    343,04,'COMMENT CONTROL CARD'                  V7A21
./ ADD NAME=ASMGWYL
><       CHANGE    NAME=ASMGWYL
><       DELETE    SEQ1=00020022,SEQ2=00020022                    V7A42
AWYL     TITLE     'ASMG     MASTER ROOT SEGMENT/WYLBUR FORMAT'   V7A42
         NI        DCBRECFM(R1),X'EF'  TURN OFF BLOCKED BIT       V7A42
><       DELETE    SEQ1=02560225,SEQ2=02560225                    V7A42
         TM        DCBRECFM(R1),X'C0'  RECFM=U .Q                 V7A42
         BO        EXIT2               IF SO, FORCE NEW BUFFERS   V7A42
><       DELETE    SEQ1=03020026,SEQ2=03040026                    V7A42
         MVC       0(80,R14),SYSINBUF  GIVE USER LAST RECORD      V7A42
><       DELETE    SEQ1=03110027,SEQ2=03190027                    V7A42
         L         R15,DCBGETSV        POINT AT SYSUP, MAYBE      V7A42
         TM        PARBYT2,X'40'       UPDATE IN EFFECT .Q        V7A42
         BNZ       SYSINEG             BRANCH IF SO               V7A42
         LA        R15,EDITGET         IF NOT, DO EDIT GET        V7A42
SYSINEG  BALR      R14,R15             GO DO THE "GET"            V7A42
><       DELETE    SEQ1=03300026,SEQ2=03300026                    V7A42
         CLC       $JOB,SYSINBUF       TEST FOR A $JOB CARD       V7A42
         LA        R1,SYSINBUF         NEGATE THE MVC FOLLOWING   V7A42
><       DELETE    SEQ1=03440026,SEQ2=03440026                    V7A42
         MVC       SYSINBUF,0(R1)      SAVE THE RECORD            V7A42
         LA        R1,SYSINBUF         POINT AT IT                V7A42
><       DELETE    SEQ1=03600026,SEQ2=03600026                    V7A42
SYSINBUF DS        CL80                INPUT BUFFER               V7A42
         LA        R4,1(,R4)           INCREMENT LINE COUNT       V7A50
><       DELETE    SEQ1=03649426,SEQ2=03649826                    V7A50
         LH        R6,DCBLRECL(,R3)    GET LRECL OF FILE          V7A50
         BCTR      R6,0                DECREMENT BY ONE           V7A50
         CLC       DCBGET+1(3,R3),PUTOURTN+1  NEW ACCESS ADDR .Q  V7A50
         BCR       8,R10               RETURN IF NOT              V7A50
         MVC       L1DCBPAD+1(3,R3),DCBGET+1(R3)  SAVE THE NEW    V7A50
         MVC       DCBGET+1(3,R3),PUTOURTN+1  RESET THE DUMMY     V7A50
PUTOURTN DC        A(LIST1+L1OUTRTN)   DUMMY OUTPUT ADDRESS       V7A50
><       DELETE    SEQ1=04140022,SEQ2=04140022                    V7A47
WTONOP   MVI       AB3+1,X'00'         NOP SW TO TYPE AND PRINT   V7A47
><       DELETE    SEQ1=04280022,SEQ2=04280022                    V7A47
         B         SYSPRPU             ONE MORE CHECK             V7A47
SYSPRPU  DS        0H                                             V7A47
         TM        PARBYT3,X'40'       UNDER CMS .Q               V7A47
         BNO       BACK1               BRANCH TO RETURN IF NOT    V7A47
         MVI       WTONOP+1,X'F0'      NOP THE NOP TO WTO ONLY    V7A47
         B         SYNADQ              AND JOIN SYNAD             V7A47
         CLOSE     SYSLIB              IN CASE WE'RE IN MACRO     V7A42
><       DELETE    SEQ1=06276026,SEQ2=06276026                    V7A43
*                                 6    STMT         7    SEQ      V7A43
><       DELETE    SEQ1=06288026,SEQ2=06292026                    V7A44
*                                 0    UMAP         1    CMS      V7A44
*                                 2    XREF(SHORT)  3    PRINTER  V7A44
*                                 4    YFLAG        5    RESERVED V7A44
><       DELETE    SEQ1=07704027,SEQ2=07704027                    V7A01
RELSDATE DC        C'21MAR76'          ASSEMBLER RELEASE DATE     V7A01
><       DELETE    SEQ1=07714427,SEQ2=07714427                    V7A01
         DC        CL10'ASMG76MAR'     PROGRAM IDENTIFICATION     V7A01
*                                                                 V7A42
* LIST1+L1DBLK                                                    V7A42
ADEBLOCK DC        A(DEBLOCK,EDITGET)  ADDRESS OF DEBLOCK SUBRS   V7A42
><       DELETE    SEQ1=07737027,SEQ2=07737027                    V7A47
         DC        19S(*)              PATCH FOR ASMGASM/ASMGBUFF V7A47
><       DELETE    SEQ1=08780026,SEQ2=08800025                    V7A42
SYSIN    DCB       DDNAME=SYSIN,MACRF=GL,DSORG=PS,SYNAD=IOERR,    V7A42*
               EXLST=EXITLIST      NEW SYSIN DCB                  V7A42
><       DELETE    SEQ1=08909025,SEQ2=08910025                    V7A42
SYSUP    DCB       DDNAME=SYSUP,MACRF=GL,DSORG=PS,                V7A42*
               SYNAD=IOERR,EXLST=EXITLIST                         V7A42
><       DELETE    SEQ1=08960022,SEQ2=08960022                    V7A42
         TITLE     'SUBROUTINE TO DEBLOCK EDIT-FORMAT RECORDS'    V7A42
*        SUBROUTINE DEBLOCK IS CALLED TO DEBLOCK A SINGLE RECORD  V7A42
*        FROM WYLBUR EDIT-FORMAT TO CARD FORMAT. AT ENTRY, IT     V7A42
*        EXPECTS THE FOLLOWING CONDITIONS:                        V7A42
*                                                                 V7A42
*        R0        ADDRESS OF AN 8-BYTE DDNAME FOR A POSSIBLE     V7A42
*                  ERROR MESSAGE.                                 V7A42
*        R1        ADDRESS OF THE INPUT RECORD TO BE DEBLOCKED    V7A42
*        R2        ADDRESS OF THE 80-CHARACTER OUTPUT BUFFER      V7A42
*        R13       ADDRESS OF A STANDARD OS SAVE AREA             V7A42
*        R14       RETURN ADDRESS                                 V7A42
*        R15       ADDRESS OF SUBROUTINE DEBLOCK                  V7A42
*                                                                 V7A42
*        AN EDIT-FORMAT RECORD CONSISTS OF A FOUR-BYTE BINARY     V7A42
*        LINE NUMBER, A ONE-BYTE COUNT, AND ZERO OR MORE BYTES    V7A42
*        OF DATA. THE COUNT GIVES THE TRUE LENGTH OF THE DATA     V7A42
*        AND DOES NOT INCLUDE EITHER ITSELF OR THE LINE NUMBER.   V7A42
*        THE DATA CONSIST OF ZERO OR MORE "FIELDS", EACH OF WHICH V7A42
*        STARTS WITH A CONTROL BYTE. THE FIRST FOUR BITS OF THE   V7A42
*        CONTROL BYTE TELL HOW MANY BLANKS ARE TO REPLACE THE     V7A42
*        CONTROL BYTE; THE LAST FOUR GIVE THE LENGTH OF THE       V7A42
*        DATA FOLLOWING. EITHER HALF OF THE CONTROL BYTE MAY      V7A42
*        BE ZERO.                                                 V7A42
*                                                                 V7A42
*        DEBLOCK PLACES THE DECOMPRESSED DATA IN THE OUTPUT       V7A42
*        BUFFER AND RETURNS VIA REGISTER 14, UNLESS THE INPUT     V7A42
*        DATA ARE INVALID IN SOME SENSE. IN THIS CASE, EXIT       V7A42
*        IS TO THE 'ABEND' ROUTINE TO PRINT AN ERROR MESSAGE      V7A42
*        AND TERMINATE. THE DDNAME ADDRESS PASSED IN REGISTER 0   V7A42
*        IS USED ONLY IN BUILDING THE ERROR MESSAGE.              V7A42
*        ON NORMAL RETURN, R1 WILL BE SET TO POINT TO THE         V7A42
*        ADDRESS OF THE NEXT RECORD IN SEQUENCE.                  V7A42
*                                                                 V7A42
*        REGISTER USAGE WITHIN THIS ROUTINE:                      V7A42
*                                                                 V7A42
*        R0        DDNAME ADDRESS FOR ERROR MESSAGE               V7A42
*        R1        POINTER TO NEXT INPUT CHARACTER                V7A42
*        R2        POINTER TO NEXT OUTPUT CHARACTER               V7A42
*        R3        WORK REGISTER                                  V7A42
*        R4        LENGTH OF CURRENT FIELD                        V7A42
*        R5        END OF INPUT RECORD, USED WITH R4 FOR BXLE     V7A42
*        R6        WORK REGISTER, USED IN OVERFLOW CHECK          V7A42
*        R7        CONSTANT X'0000000F', USED AS A MASK           V7A42
*        R8        WORK REGISTER, USED IN OVERFLOW CHECK          V7A42
*        R9        POINTER AFTER LAST OUTPUT CHARACTER            V7A42
*        R10       CONSTANT 1, USED VARIOUS PLACES                V7A42
*        R15       BASE REGISTER                                  V7A42
         EJECT     ,                                              V7A42
         USING     *,R15               INDICATE BASE              V7A42
DEBLOCK  STM       R2,R10,28(R13)      SAVE REGS WE USE           V7A42
         SH        R15,=Y(DEBLOCK-ASMGASM) NORMALIZE BASE REG     V7A42
         USING     ASMGASM,R15         TELL ASSEMBLER ABOUT IT    V7A42
         LH        R7,=H'15'           INITIALIZE R7              V7A42
         LH        R10,=H'1'           INITIALIZE R1              V7A42
         LA        R9,80(,R2)          POINT TO OUTPUT END + 1    V7A42
         LR        R5,R10              CLEAR LEFT 3 BYTES OF R5   V7A42
         IC        R5,4(,R1)           PICK UP THE RECORD LENGTH  V7A42
         MVC       DBLINE#,0(R1)       SAVE THE LINE NUMBER       V7A42
         LA        R1,5(,R1)           POINT AT FIRST CTRL BYTE   V7A42
         AR        R5,R1               LAST INPUT CHAR + 1        V7A42
         SR        R5,R10              BACK OFF FOR LAST CHAR     V7A42
         MVC       0(80,R2),BLANKS+1   BLANK THE OUTPUT BUFFER    V7A42
         CR        R1,R5               ARE WE ALREADY FINISHED .Q V7A42
         BH        DBEXIT              MAYBE JUMP OVER THE LOOP   V7A42
*                                                                 V7A42
DBLOOP   LR        R3,R10              CLEAR LEFT 3 BYTES OF R3   V7A42
         IC        R3,0(,R1)           GET CONTROL BYTE           V7A42
         LR        R4,R7               GET MASK X'000F'           V7A42
         NR        R4,R3               R4 IS NOW FIELD LENGTH     V7A42
         SRL       R3,4                R3 IS NOW BLANK COUNT      V7A42
         AR        R2,R3               BUMP OUTPUT PTR OVER BLKS  V7A42
         LCR       R3,R10              GET -1 INTO R3             V7A42
         AR        R3,R4               GET LENGTH - 1 IN R3       V7A42
         LR        R8,R4               COPY LENGTH INTO BXLE REG  V7A42
         LR        R6,R2               COPY OUTPUT ADDRESS        V7A42
         BXH       R6,R8,DBERR1        STEP R6, CHECK OVERFLOW    V7A42
         BM        DBOVER              SKIP MOVE IF LENGTH IS 0   V7A42
         EX        R3,DBMOVE           MOVE DATA TO OUTPUT BUFFER V7A42
DBOVER   LR        R2,R6               GET UPDATED OUTPUT POINTER V7A42
         AR        R4,R10              INCREMENT LENGTH BY 1      V7A42
         BXLE      R1,R4,DBLOOP        ADD LEN+1 TO INPUT PTR     V7A42
*                                                                 V7A42
DBEXIT   AR        R5,R10              RESTORE TRUE END PTR       V7A42
         CR        R1,R5               HIT THE END EXACTLY .Q     V7A42
         BNE       DBERR1              IF NOT, BAD RECORD         V7A42
*                                                                 V7A42
*        WE MAY HAVE TO CONVERT THE LINE NUMBER                   V7A42
*                                                                 V7A42
         L         R2,28(,R13)         RESTORE R2 VALUE           V7A42
         CLC       BLANKS+1(8),72(R2)  COLUMNS 73/80 BLANK .Q     V7A42
         BNE       DBNOCONV            IF NOT, NO CONVERSION      V7A42
         TM        PARBYT2,X'01'       WAS SEQUENCE SPECIFIED .Q  V7A42
         BZ        DBNOCONV            IF NOT, DON'T CONVERT      V7A42
         L         R3,DBLINE#          NOW GET THE LINE NUMBER    V7A42
         CVD       R3,DBWORK           CONVERT IT TO DECIMAL      V7A42
         UNPK      72(8,R2),DBWORK     AND THENCE TO EBCDIC       V7A42
         OI        79(R2),C'0'         GET THAT LAST DIGIT RIGHT  V7A42
*                                                                 V7A42
*        RETURN TO CALLING PROGRAM                                V7A42
*                                                                 V7A42
DBNOCONV LM        R2,R10,28(R13)      RESTORE REGS EXCEPT R1     V7A42
         BR        R14                 RETURN TO CALLING PROGRAM  V7A42
*                                                                 V7A42
*        ERROR MESSAGE ROUTINE                                    V7A42
*                                                                 V7A42
DBERR1   LR        R1,R0               MAKE DDNAME ADDRESSABLE    V7A42
         MVC       DBMSG1A,0(R1)       MOVE DDNAME INTO MESSAGE   V7A42
         LR        R12,R15             GET STANDARD BASE REG      V7A42
         BAL       R0,ABEND            GO PRINT MESSAGE AND STOP  V7A42
         DC        C'501A'             MESSAGE CODE               V7A42
         DC        AL1(DBMSG1E-*-2)    LENGTH OF MESSAGE          V7A42
         DC        C'EDIT-FORMAT RECORD INVALID OR > 80 CHARS, '  V7A42
         DC        C'DDNAME = '        MESSAGE TEXT               V7A42
DBMSG1A  DC        CL8'XXXXXXXX'       SPACE FOR DD NAME          V7A42
DBMSG1E  EQU       *                   END OF MESSAGE             V7A42
*                                                                 V7A42
DBMOVE   MVC       0(*-*,R2),1(R1)     EXECUTED INSTRUCTION       V7A42
*                                                                 V7A42
DBWORK   DS        D                   WORK AREA                  V7A42
DBLINE#  DS        F                   HOLDS THE LINE NUMBER      V7A42
         EJECT     ,                                              V7A42
*                  THIS SUBROUTINE IS USED TO PERFORM A "GET"     V7A42
*        LOCATE-MODE OPERATION ON A DCB THAT COULD POSSIBLY BE    V7A42
*        EDIT-FORMAT. IN THE CASE OF ERROR MESSAGES, THE ROUTINE  V7A42
*        ASSUMES THAT THE ONLY POSSIBLE DCB'S ARE SYSIN AND       V7A42
*        SYSUP. THE CALLING SEQUENCE IS EXACTLY THE SAME AS THAT  V7A42
*        FOR A NORMAL 'GET'.                                      V7A42
         SPACE     ,                                              V7A42
         USING     *,R15               TEMPORARY BASE REG         V7A42
EDITGET  STM       R1,R4,EGSAVE        SAVE SOME REGISTERS        V7A42
         ST        R14,EGSAVE14        STORE RETURN ADDRESS ALSO  V7A42
         LR        R3,R15              SET UP PERMANENT BASE      V7A42
         SH        R3,=Y(EDITGET-ASMGASM) NORMALIZE BASING        V7A42
         USING     ASMGASM,R3          DEFINE IT                  V7A42
         DROP      R15,R12             GET RID OF TEMPORARY BASE  V7A42
         LA        R4,EGSYSIN          POINT AT SYSIN TABLE       V7A42
         C         R1,LIST1+L1SUP      IS IT SYSUP .Q             V7A42
         BNE       EG1                 BRANCH IF IT IS NOT        V7A42
         LA        R4,EGSYSUP          IF SO, POINT AT SYSUP TAB  V7A42
         SPACE     ,                                              V7A42
*                  SAVE THE EODAD EXIT, INSERT OURS               V7A42
         SPACE     ,                                              V7A42
EG1      MVC       EGEODAD,DCBEODAD+1(R1)  SAVE EODAD             V7A42
         MVC       DCBEODAD+1(3,R1),=AL3(EGEOF)  PLUG EODAD       V7A42
         SPACE     ,                                              V7A42
*                  TEST RECFM                                     V7A42
         SPACE     ,                                              V7A42
EGRECFM  NI        SYSINSW,X'FE'       RESET SYSIN SWITCH         V7A42
         L         R1,EGSAVE           RESTORE DCB ADDRESS        V7A42
         L         R15,EGGADR(,R4)     GET GET ROUTINE POINTER    V7A42
         L         R15,0(,R15)         GET GET ROUTINE ADDR       V7A42
         TM        DCBRECFM(R1),X'80'  IS IT RECFM=V .Q           V7A42
         BNZ       EG2                 IF NOT, BRANCH             V7A42
         SPACE     ,                                              V7A42
*                  RECFM=V. ISSUE AN ERROR MESSAGE                V7A42
         SPACE     ,                                              V7A42
         L         R1,EGDDNAM(,R4)     POINT AT DDNAME            V7A42
         MVC       EGDD,0(R1)          MOVE IT INTO THE MESSAGE   V7A42
         LR        R12,R3              SET UP ABEND ROUTINE BASE  V7A42
         BAL       R0,ABEND            GO TERMINATE               V7A42
         DC        C'502A',AL1(EGEMSG-*-2)  LENGTH, ETC.          V7A42
         DC        C'V-FORMAT INPUT, DDNAME = '                   V7A42
EGDD     DC        CL8'XXXXXXXX'       SPACE FOR DDNAME           V7A42
EGEMSG   EQU       *                   END OF MESSAGE             V7A42
         SPACE     ,                                              V7A42
EG2      TM        DCBRECFM(R1),X'40'  IS IT RECFM=F .Q           V7A42
         BNZ       EG3                 IF NOT, BRANCH             V7A42
         SPACE     ,                                              V7A42
*                  HERE FOR RECFM=F                               V7A42
         SPACE     ,                                              V7A42
         BALR      R14,R15             DO THE GET                 V7A42
         BAL       R14,EGCONCAT        TEST CONCATENATION         V7A42
         MVC       EGBUFFER,0(R1)      MOVE THE DATA              V7A42
         B         EGEXIT              AND GO RETURN              V7A42
         SPACE     ,                                              V7A42
*                  HERE FOR RECFM=U                               V7A42
         SPACE     ,                                              V7A42
EG3      L         R2,EGRECAD(,R4)     POINT TO LOGICAL RECORD    V7A42
         C         R2,EGEOBAD(,R4)     COMPARE TO END OF BLOCK    V7A42
         BL        EG4                 IF LOW, NO INPUT NEEDED    V7A42
         BALR      R14,R15             DO THE GET                 V7A42
         BAL       R14,EGCONCAT        TEST CONCATENATION         V7A42
         LA        R2,2(,R1)           GET START OF BLOCK PTR     V7A42
         ST        R2,EGRECAD(,R4)     STORE IT IN BLOCK          V7A42
         AH        R1,0(,R1)           GET END OF BLOCK POINTER   V7A42
         ST        R1,EGEOBAD(,R4)     STORE IT                   V7A42
EG4      LR        R1,R2               POINT AT INPUT RECORD      V7A42
         LA        R2,EGBUFFER         POINT AT OUTPUT AREA       V7A42
         LA        R15,DEBLOCK         POINT AT DEBLOCKER         V7A42
         L         R0,EGDDNAM(,R4)     POINT TO DDNAME            V7A42
         BALR      R14,R15             OFF TO DEBLOCKER           V7A42
         ST        R1,EGRECAD(,R4)     SAVE UPDATED RECORDADDR    V7A42
         SPACE     ,                                              V7A42
*                  RETURN TO CALLING PROGRAM                      V7A42
EGEXIT   L         R2,EGSAVE           RESTORE DCB POINTER        V7A42
         MVC       DCBEODAD+1(3,R2),EGEODAD  RESTORE EODAD        V7A42
         LA        R1,EGBUFFER         POINT TO THE RECORD        V7A42
         L         R14,EGSAVE14        RESTORE REGISTER 14        V7A42
         LM        R2,R4,EGSAVE+4      RESTORE REGISTERS          V7A42
         BR        R14                 RETURN                     V7A42
         SPACE     ,                                              V7A42
*                  HERE FOR END OF FILE                           V7A42
         SPACE     ,                                              V7A42
EGEOF    L         R2,EGSAVE           RESTORE DCB POINTER        V7A42
         MVC       DCBEODAD+1(3,R2),EGEODAD  RESTORE EODAD        V7A42
         L         R14,EGSAVE14        RESTORE REGISTER 14        V7A42
         LM        R1,R4,EGSAVE        RESTORE REGISTERS          V7A42
         L         R15,DCBEODAD(,R1)   POINT AT REAL EOF ADDR     V7A42
         BR        R15                 OFF TO IT                  V7A42
         SPACE     ,                                              V7A42
*                  CONCATENATION TESTER                           V7A42
         SPACE     ,                                              V7A42
EGCONCAT TM        SYSINSW,X'01'       CONCATENATION .Q           V7A42
         BCR       8,R14               IF NOT, RETURN IMMEDIATELY V7A42
         C         R4,=A(EGSYSIN)      IS THIS SYSIN .Q           V7A42
         BNE       EGRECFM             RETRY IF SYSUP             V7A42
         TM        PARBYT2,X'40'       IS THIS UPDATE .Q          V7A42
         BO        EGCONC1             IF SO, SKIP NEXT INSN      V7A42
         MVC       DCBGETSV+1(3),SYSIN+DCBGET+1 SAVE GET ADDR AGN V7A42
EGCONC1  MVC       SYSIN+L1DCBPAD+1(3),SYSIN+DCBGET+1 FOR CLOSE   V7A42
         MVC       SYSIN+DCBGET+1(3),SYSINAD+1   RESET FAKE ADDR  V7A42
         B         EGRECFM             GO RETRY THE OPERATION     V7A42
         SPACE     ,                                              V7A42
*                  DCB DESCRIPTION BLOCKS                         V7A42
         SPACE     ,                                              V7A42
*                  FIRST, THE FORMAT                              V7A42
         SPACE     ,                                              V7A42
EGDDNAM  EQU       0                   POINTER TO DDNAME          V7A42
EGRECAD  EQU       4                   LOGICAL RECORD ADDRESS     V7A42
EGEOBAD  EQU       8                   END OF BLOCK ADDRESS       V7A42
EGGADR   EQU       12                  PTR TO GET ROUTINE ADDR    V7A42
         SPACE     ,                                              V7A42
*                  NOW THE BLOCK FOR SYSIN                        V7A42
         SPACE     ,                                              V7A42
EGSYSIN  DC        A(LIST1+L1DDNAM+L1SIN*2) SYSIN DDNAME          V7A42
         DC        2A(*-*)             RECORD, END OF BLOCK ADDR  V7A42
         DC        A(SYSIN+L1DCBPAD)   GET ROUTINE POINTER ADDR   V7A42
         SPACE     ,                                              V7A42
*                  THE BLOCK FOR SYSUP                            V7A42
         SPACE     ,                                              V7A42
EGSYSUP  DC        A(LIST1+L1DDNAM+L1SUP*2) SYSUP DDNAME          V7A42
         DC        2A(*-*)             RECORD, END OF BLOCK ADDR  V7A42
         DC        A(SYSUP+DCBGET)     GET ROUTINE POINTER ADDR   V7A42
         SPACE     ,                                              V7A42
*                  OTHER CONSTANTS, WORK AREAS, ETC.              V7A42
         SPACE     ,                                              V7A42
EGSAVE   DS        4F                  REGISTER SAVE AREA         V7A42
EGSAVE14 DS        F                   SAVE AREA FOR REGISTER 14  V7A42
EGBUFFER DS        CL80                BUFFER FOR UNSQUISHING     V7A42
EGEODAD  DS        AL3                 SAVE AREA FOR DCBEODAD     V7A42
         SPACE     3                                              V7A42
         END       ASMGASM                                        V7A42
./ ADD NAME=COMMON
><       CHANGE    NAME=COMMON
><       DELETE    SEQ1=01200027,SEQ2=01200027                    V7A32
EXTMWD   DC        A(5,1,9999)         EXECUTION TIME IN SECONDS  V7A32
><       DELETE    SEQ1=02080027,SEQ2=02080027                    V7A43
PARBYT2  DC        AL1(LREF+NUM+STMT+SEQPARM)  *PARBYT2           V7A43
><       DELETE    SEQ1=02260027,SEQ2=02260027                    V7A43
SEQPARM  EQU       X'01'               SEQ            NOSEQ       V7A43
><       DELETE    SEQ1=02300027,SEQ2=02300027                    V7A44
PARBYT3  DC        AL1(UMAP+PRT+YFLAG)      *PARBYT3              V7A44
><       DELETE    SEQ1=02420027,SEQ2=02420027                    V7A44
YFLAG    EQU       X'08'               YFLAG          NOYFLAG     V7A44
><       DELETE    SEQ1=09100027,SEQ2=09100027                    V7A28
*      2 (20)  SET IF SKIPPING COPY BACK TO SYSIN LEVEL           V7A28
><       DELETE    SEQ1=11740027,SEQ2=11740027                    V7A58
POSNOMAX DC        H'240'               MAX POS PARM, 200 NOEXTEN V7A58
*                                                                 V7A49
*        SYSTEM PARAMETER CONSTANTS                               V7A49
*        FORMAT - FLAG BYTE, NAME IN INTERNAL, PARAMETER NUMBER   V7A49
SYSNDX   DC    X'4E2D1C221C170D210000'                            V7A49
SYSECT   DC              X'0E0C1D0001'                            V7A49
SYSDATE  DC    X'4F2D1C221C0D0A1D0E0002'                          V7A49
SYSTIME  DC              X'1D12160E0003'                          V7A49
SYSSTYP  DC              X'1C1D22190004'                          V7A49
SYSPARM  DC              X'190A1B160005'                          V7A49
LASCAN   DC        V(ASCAN)            .                          V7A54
DCLSE    DC        V(DCLOSE)           .                          V7A54
GETAD    DC        V(GETSRC)           .                          V7A54
DLOOKUP  DC        V(LOOKUP)           .                          V7A54
ADWS     DC        V(BWFORC)           .                          V7A54
ADWS2    DC        V(BWRITE)           .                          V7A54
VCHECK   DC        V(LIBCHK)           .                          V7A54
VLREAD   DC        V(LIBRFND1)         .                          V7A54
VWAIT    DC        V(LIBWAIT)          .                          V7A54
AKLOSIT  DC        V(KLOSIT)           .                          V7A54
VENTKWB  DC        V(ENTKWB)           .                          V7A54
><       DELETE    SEQ1=14800027,SEQ2=14800027                    V7A28
POEND    DC    X'82'          END       33  DC  X'86' IF NOEXTEN  V7A28
><       DELETE    SEQ1=15840027,SEQ2=15840027                    V7A16
DUMLENF1 EQU       1024*26-(F1END-ASMGF1)-(COMEND-COMMON)         V7A16
><       DELETE    SEQ1=15940027,SEQ2=15940027                    V7A16
*        SO ROUND UP ASMGF2A TO A LARGER FIGURE.                  V7A16
><       DELETE    SEQ1=15980027,SEQ2=15980027                    V7A16
ELENF2   EQU       10500               ROUNDED EST F2 LENGTH      V7A16
><       DELETE    SEQ1=16000027,SEQ2=16000027                    V7A16
         AIF       ('&PHASE' EQ 'ASMGF2').ENDF2T                  V7A16
ASMGF2A  CSECT     ,                   RESUME FORMER CSECT        V7A16
><       DELETE    SEQ1=16020027,SEQ2=16020027                    V7A16
DUMLENF2 EQU   1024*26-(F2AEND-ASMGF2A)-(COMEND-COMMON)-ELENF2    V7A16
><       DELETE    SEQ1=16040027,SEQ2=16040027                    V7A16
         DS        (DUMLENF2)X         UP SIZE OF ASMGF2A         V7A16
FIND     EQU       *                   DUMMY FIND ADDR FOR F2A    V7A16
><       DELETE    SEQ1=16080027,SEQ2=16080027                    V7A16
.ENDF2T  ANOP      ,                                              V7A16
><       DELETE    SEQ1=16100027,SEQ2=16100027                    V7A16
*                                                                 V7A16
><       DELETE    SEQ1=16120027,SEQ2=16120027                    V7A16
ALENF2   EQU       (F2END-ASMGF2+99)/100*100  ROUNDED ACTUAL F2   V7A16
><       DELETE    SEQ1=16140027,SEQ2=16140027                    V7A16
F2TEST   DC        0S(ALENF2-ELENF2),0S(ELENF2-ALENF2)            V7A16
         DC        0D'0'               THIS IS WHERE WE'RE AT     V7A16
./ ADD NAME=FDIMEN
><       CHANGE    NAME=FDIMEN
><       DELETE    SEQ1=04758026,SEQ2=04758026                    V7A43
CTSEQI   EQU   CT5+68 .7   .1      SEQ NUMBERS FOR SQUISHED FILES V7A43
><       DELETE    SEQ1=04763026,SEQ2=04763026                    V7A44
CTPRTI   EQU   CT5+69 .3   .1      PRINTER OPTION SPECIFIED       V7A44
><       DELETE    SEQ1=04764026,SEQ2=04764026                    V7A44
CTYFLGI  EQU   CT5+69 .4   .1      Y-CON ERROR FLAG               V7A44
./ ADD NAME=LIST1EQU
><       CHANGE    NAME=LIST1EQU
L1DBLK   EQU       L1BLANKS+134        ADDR OF DEBLOCK ROUTINE    V7A42
><       DELETE    SEQ1=01340026,SEQ2=01340026                    V7A42
L1$JOB   EQU       L1DBLK+8            EXECUTE JOB SEPARATOR      V7A42
./ ADD NAME=SEQ
>< ADD NAME=ASMGASM
><       CHANGE    NAME=ASMGASM
         LA        R4,1(,R4)           INCREMENT LINE COUNT       V7A50
><       DELETE    SEQ1=03649426,SEQ2=03649826                    V7A50
         LH        R6,DCBLRECL(,R3)    GET LRECL OF FILE          V7A50
         BCTR      R6,0                DECREMENT BY ONE           V7A50
         CLC       DCBGET+1(3,R3),PUTOURTN+1  NEW ACCESS ADDR .Q  V7A50
         BCR       8,R10               RETURN IF NOT              V7A50
         MVC       L1DCBPAD+1(3,R3),DCBGET+1(R3)  SAVE THE NEW    V7A50
         MVC       DCBGET+1(3,R3),PUTOURTN+1  RESET THE DUMMY     V7A50
PUTOURTN DC        A(LIST1+L1OUTRTN)   DUMMY OUTPUT ADDRESS       V7A50
><       DELETE    SEQ1=04140022,SEQ2=04140022                    V7A47
WTONOP   MVI       AB3+1,X'00'         NOP SW TO TYPE AND PRINT   V7A47
><       DELETE    SEQ1=04280022,SEQ2=04280022                    V7A47
         B         SYSPRPU             ONE MORE CHECK             V7A47
SYSPRPU  DS        0H                                             V7A47
         TM        PARBYT3,X'40'       UNDER CMS .Q               V7A47
         BNO       BACK1               BRANCH TO RETURN IF NOT    V7A47
         MVI       WTONOP+1,X'F0'      NOP THE NOP TO WTO ONLY    V7A47
         B         SYNADQ              AND JOIN SYNAD             V7A47
><       DELETE    SEQ1=06276026,SEQ2=06276026                    V7A43
*                                 6    STMT         7    SEQ      V7A43
><       DELETE    SEQ1=06288026,SEQ2=06292026                    V7A44
*                                 0    UMAP         1    CMS      V7A44
*                                 2    XREF(SHORT)  3    PRINTER  V7A44
*                                 4    YFLAG        5    RESERVED V7A44
><       DELETE    SEQ1=07704027,SEQ2=07704027                    V7A01
RELSDATE DC        C'21MAR76'          ASSEMBLER RELEASE DATE     V7A01
><       DELETE    SEQ1=07714427,SEQ2=07714427                    V7A01
         DC        CL10'ASMG76MAR'     PROGRAM IDENTIFICATION     V7A01
*                                                                 V7A42
* LIST1+L1DBLK                                                    V7A42
ADEBLOCK DC        A(0,0)              DUMMY ADDR OF DEBLOCK RTN  V7A42
><       DELETE    SEQ1=07737027,SEQ2=07737027                    V7A47
         DC        19S(*)              PATCH FOR ASMGASM/ASMGBUFF V7A47
>< ADD NAME=ASMGFD
><       CHANGE    NAME=ASMGFD
><       DELETE    SEQ1=02420026,SEQ2=02420026                    V7A44
NOERSW   DS    0H                                                 V7A44
         TM    CTYFLGI(ACT),X'08'       YFLAG OPTION IN EFFECT    V7A44
         BNO   ML00                     BRANCH IF NOT             V7A44
         TM    F8YDC(ACT),X'FF'         REL Y-CONS ENCOUNTERED .Q V7A44
         MVI   BUFR+1,C' '              CLEAR FIRST CHARACTER     V7A33
><       DELETE    SEQ1=04288027,SEQ2=04288027                    V7A30
ML07     DS    0H                                                 V7A30
         SR        GRX,GRX             CLEAR WORK REGISTER        V7A18
><       DELETE    SEQ1=04555026,SEQ2=04555026                    V7A18
         MVC       BUFR+2(4),WORD      PUT IN SEVERITY CODE       V7A18
><       DELETE    SEQ1=09860027,SEQ2=09860027                    V7A35
         EPTR  117,ERROR=(36,53,54,113,117)  ERROR POINTERS       V7A35
><       DELETE    SEQ1=12020020,SEQ2=12020020                    V7A36
         EMSG  096,12,'MACRO INSTRUCTION OR PROTOTYPE OPERAND EXCEEDS 2-
><       DELETE    SEQ1=12040020,SEQ2=12040020                    V7A36
               55 CHARACTERS IN LENGTH'                           V7A36
><       DELETE    SEQ1=12368023,SEQ2=12368023                    V7A35
         EMSG  114,04,'INSUFFICIENT MEMORY FOR USING MAP'         V7A35
>< ADD NAME=ASMGFEX
><       CHANGE    NAME=ASMGFEX
><       DELETE    SEQ1=08500024,SEQ2=08500024                    V7A45
         MVC       EXERPSW,4(R1)       SAVE BUNGLER'S PSW         V7A45
         MVC       ESDTBL+56(8),12(R1) SAVE BUNGLER'S R14-R15     V7A45
         MVC       ESDTBL(12),20(R1)   SAVE BUNGLER'S R0-R2       V7A45
><       DELETE    SEQ1=08580020,SEQ2=08620020                    V7A45
*./      DELETE    SEQ1=08580020,SEQ2=08620020                    V7A45
><       DELETE    SEQ1=08700020,SEQ2=08700020                    V7A45
         LA        R3,EXERPSW          ADDRESS OF USER'S PSW      V7A45
         L     R9,ESDTBL+64            RESTORE ASM POINTER        V7A57
EXERPSW  DC        D'0'                SPIE SAVE FOR USER PSW     V7A45
>< ADD NAME=ASMGFPP
><       CHANGE    NAME=ASMGFPP
         BZ        LRFLOD              IF NOT THEN DO THE LREF    V7A29
         LA        R6,STUMAP(,ACT)     POINT TO FIRST POINTER     V7A29
         USING     USNGMAP,R6          LESSER BUBBLE SORT ENTRY   V7A29
USORT01  DS        0H                                             V7A29
         L         R6,USNGCHN          GET NEXT ENTRY             V7A29
         LA        R6,0(,R6)           CLEAR REGISTER             V7A29
         LTR       R6,R6               AT THE END .Q              V7A29
         BZ        USORT04             BRANCH IF YES              V7A29
         LR        R7,R6               START OF REST TO COMPARE   V7A29
USORT02  DS        0H                                             V7A29
         L         R7,USNGCHN-USNGMAP(,R7)  NEXT ENTRY            V7A29
         LA        R7,0(,R7)           CLEAR REGISTER             V7A29
         LTR       R7,R7               AT THE END .Q              V7A29
         BZ        USORT01             BRANCH IF YES              V7A29
         CLC       USNGREG,USNGREG-USNGMAP(R7)  REGISTER SMALLER  V7A29
         BL        USORT02             BRANCH IF YES              V7A29
         BH        USORT03             BRANCH IF NOT              V7A29
         CLC       USNGSTRT,USNGSTRT-USNGMAP(R7) USING STMT       V7A29
         BL        USORT02             BRANCH IF YES              V7A29
><       DELETE    SEQ1=04200027,SEQ2=04200027                    V7A29
USORT03  DS        0H                                             V7A29
         IC        R1,USNGREG          ENTRY ONE                  V7A29
         MVC       USNGREG,USNGREG-USNGMAP(R7)   TWO TO ONE       V7A29
         STC       R1,USNGREG-USNGMAP(,R7)       ONE TO TWO       V7A29
         XC    USNGSTRT(USNGLEN-L'USNGCHN),USNGSTRT-USNGMAP(R7)   V7A29
         XC    USNGSTRT-USNGMAP(USNGLEN-L'USNGCHN,R7),USNGSTRT    V7A29
         XC    USNGSTRT(USNGLEN-L'USNGCHN),USNGSTRT-USNGMAP(R7)   V7A29
         B         USORT02             AND CONTINUE               V7A29
         DROP      R6                  END OF BUBBLE SORT         V7A29
USORT04  DS        0H                                             V7A29
         LA        R1,USNGLBEL(R6)     POINT TO USING LABEL       V7A29
         MVC       42(L'USNGLBEL,R7),0(R1)  ENTER USING LABEL     V7A29
><       DELETE    SEQ1=11820027,SEQ2=11820027                    V7A29
         LA        R0,MSG995           POINT TO MESSAGE           V7A29
><       DELETE    SEQ1=11840027,SEQ2=11840027                    V7A29
         B         ABEND               END OF THE LINE            V7A29
><       DELETE    SEQ1=11860027,SEQ2=11860027                    V7A29
*./      DELETE    SEQ1=11860027,SEQ2=11860027                    V7A29
><       DELETE    SEQ1=19680027,SEQ2=19700027                    V7A29
*./      DELETE    SEQ1=19680027,SEQ2=19700027                    V7A29
MSG995   DC        C'995I',AL1(L'MES995-1)                        V7A29
MES995   DC        C'INSUFFICIENT MEMORY TO PROCESS XREF'         V7A29
MSG994   DC        C'994I',AL1(L'MES994-1)                        V7A29
MES994   DC        C'INSUFFICIENT MEMORY TO PROCESS RLD'          V7A29
><       DELETE    SEQ1=30460027,SEQ2=30460027                    V7A29
UMP2ID   DC    C' REGISTER  USING STMT  DROP STMT  VALUE   LABEL' V7A29
><       DELETE    SEQ1=31240027,SEQ2=31240027                    V7A29
USNGLBEL DS        CL12                LABEL OF USING LOCATION    V7A29
>< ADD NAME=ASMGF1
><       CHANGE    NAME=ASMGF1
WORDEND2 DS        0H                                             V7A27
><       DELETE    SEQ1=05060027,SEQ2=05060027                    V7A27
         BE        NOCHECK             POSSIBLE ERROR IF SO       V7A27
*                                                                 V7A27
*        CHECK FOR 'N' AS VALID ALTERNATIVE FOR 'NO'              V7A27
NOCHECK  DS        0H                                             V7A27
         CLI       0(R4),C'N'          START WITH 'N' .Q          V7A27
         BNE       PARMERR             ERROR IF NOT               V7A27
         CLI       1(R4),C'O'          START WITH 'NO' .Q         V7A27
         BE        PARMERR             ERROR IF YES               V7A27
         EX        R5,NOMVC            MOVE CURRENT ARGUMENT      V7A27
         MVI       NOWORK,C'N'         WITH 'N' AT THE START      V7A27
         MVI       NOWORK+1,C'O'       AND 'O' NEXT               V7A27
         LA        R5,NOWORK+2(5)      POINT TO END CHAR PLUS ONE V7A27
         LA        R4,NOWORK           POINT TO FIRST CHARACTER   V7A27
         B         WORDEND2            AND GO THROUGH IT AGAIN    V7A27
NOMVC    MVC       NOWORK+1(*-*),0(R4) MOVE FAILED ARGUMENT       V7A27
NOWORK   DC        CL13' '             WORK AREA FOR 'NO' PARM    V7A27
><       DELETE    SEQ1=13340027,SEQ2=13360027                    V7A42
         LA        R1,0(,R1)           CLEAR HIGH ORDER BYTE      V7A42
         C         R1,L1DCBADS+L1SUT1(,R9)       SYSUT1 .Q        V7A42
         BE        EXUTIL              IF YES, GO PROCESS IT      V7A42
         C         R1,L1DCBADS+L1SUT2(,R9)       SYSUT2 .Q        V7A42
         BE        EXUTIL              IF YES, GO PROCESS IT      V7A42
         L         R5,L1DCBADS+L1SUT3(,R9)       SYSUT3 DCBAD     V7A42
         LA        R5,0(,R5)           CLEAR HIGH ORDER BYTE      V7A42
         CR        R1,R5               SYSUT3 .Q                  V7A42
         BE        EXUTIL              IF YES, GO PROCESS IT      V7A42
         OC        L1DBLK(8,R9),L1DBLK(R9)  DEBLOCKING RTN HERE   V7A42
         BZ        EXBEGIN             BRANCH IF NOT              V7A42
         C         R1,L1DCBADS+L1SLIB(,R9)       SYSLIB .Q        V7A42
         BNE       EXNUTIL             IF NOT, PROCESS OTHERS     V7A42
*                                                                 V7A42
*        HERE TO PROCESS SYSLIB.  FORCE RECFM=U AND MAKE          V7A42
*        BLKSIZE THE NEXT STRICTLY LARGER MULTIPLE OF 8.          V7A42
*                                                                 V7A42
         OI        DCBRECFM(R1),X'C0'  MAKE RECFM = 'U'           V7A42
         LH        R5,DCBBLKSI(,R1)    GET THE BLOCK SIZE         V7A42
         N         R5,=F'-8'           ROUND TO MULT OF EIGHT     V7A42
         S         R5,=F'-8'           MAKE IT NEXT MULTIPLE      V7A42
         STH       R5,DCBBLKSI(,R1)    SAVE IT BACK IN DCB        V7A42
         B         EXLSTEND            GO RETURN TO OPEN          V7A42
*                                                                 V7A42
*        HERE TO PROCESS UTILITY DATA SETS                        V7A42
*                                                                 V7A42
EXUTIL   DS        0H                                             V7A42
         XC        DCBLRECL(2,R1),DCBLRECL(R1)    CLEAR LRECL     V7A26
         MVI       DCBKEYLE(R1),X'00'  AND KEY LENGTH             V7A26
*                                                                 V7A42
*        HERE IF NOT A UTILITY OR SYSLIB                          V7A42
*                                                                 V7A42
EXNUTIL  DS        0H                  JOIN HERE                  V7A42
         TM        DCBRECFM(R1),X'40'  RECFM= 'V' OR 'U' .Q       V7A42
         BZ        EXBEGIN             IF NOT, MUST BE F (NORMAL) V7A42
         C         R1,L1DCBADS+L1SIN(,R9)        SYSIN .Q         V7A42
         BE        EXLSTEND            IF SO, DON'T DO ANYTHING   V7A42
         C         R1,L1DCBADS+L1SUP(,R9)        SYSUP .Q         V7A42
         BE        EXLSTEND            AGAIN, IF SO RETURN        V7A42
EXBEGIN  DS        0H                                             V7A42
         TM        DCBRECFM(R1),X'C0'  IS THIS RECFM 'U' .Q       V7A42
         BO        EXLSTEND            OF SO, DON'T SHARE BUFFERS V7A42
><       DELETE    SEQ1=15800027,SEQ2=15820027                    V7A46
DCBTFI01 DS        0H                                             V7A46
         L         R0,L1DCBADS(R3,R9)  GET DCB ADDRESS            V7A46
         N         R0,=X'00FFFFFF'     MAKE SURE IT'S PURE        V7A46
         CR        R1,R0               INDEX POINTS AT DCB .Q     V7A46
         BE        DCBTFI02            BRANCH IF YES              V7A46
><       DELETE    SEQ1=15860027,SEQ2=15860027                    V7A46
         B         DCBTFI01            AND LOOP                   V7A46
DCBTFI02 DS        0H                                             V7A46
         OC        L1DBLK(8,R9),L1DBLK(R9)  DEBLK ROUTINE .Q      V7A43
         BZ        OPTNOWYL            BRANCH IF NOT              V7A43
         NI        WYLSEQ+OPTPFLGS,X'FF'-X'80'   NOT SHORT FORM   V7A43
         NI        WYLNOSEQ+OPTPFLGS,X'FF'-X'80' NOT SHORT FORM   V7A43
OPTNOWYL DS        0H                                             V7A43
><       DELETE    SEQ1=21260027,SEQ2=21320027                    V7A46
         LA        R1,DCBTAB           START OF DCBTAB            V7A46
         SR        R1,R3               OFFSET FOUND IN TABLE      V7A46
         LPR       R1,R1               POSITIVE OFFSET            V7A46
         LA        R1,L1DDNAM(R1,R9)   POINT TO ASSOCIATED DDNAME V7A46
         MVC       MES200+15(8),0(R1)  PLACE DDNAME IN ERROR      V7A46
         LA        R0,MSG200           POINT AT ERROR MESSAGE     VA746
><       DELETE    SEQ1=23920027,SEQ2=23960027                    V7A52
         STM       R1,R2,GOTADDR   CHANGE ADDR AND LENGTH KEPT    V7A52
         AR        R1,R2           ADDRESS TO FREE                V7A52
         SPACE     1                                              V7A52
><       DELETE    SEQ1=27920027,SEQ2=27920027                    V7A42
MACROIN  DS        0H                                             V7A42
         READ      INPUTBLK,SF,(R2),(R5),256                      V7A42
><       DELETE    SEQ1=38340027,SEQ2=38340027                    V7A52
         DC        C'CMS',AL1(K1*4/256)     CMS SAME AS PCP       V7A52
         DC        H'0000',AL1(0),X'FFFF',X'80',X'00',X'00'   UT1 V7A46
         DC        H'0000',AL1(0),X'FFFF',X'80',X'00',X'00'   UT2 V7A46
         DC        H'0000',AL1(0),X'FFFF',X'80',X'00',X'00'   UT3 V7A46
><       DELETE    SEQ1=39980027,SEQ2=39980027                    V7A43
SEQ#     DS        0CL32               *         SEQ              V7A43
><       DELETE    SEQ1=40120027,SEQ2=40120027                    V7A44
YFLAG#   DS        0CL37               *         YFLAG            V7A44
         APARM     EDICT,MIN=2,ON=ESD#,FORM=S                     V7A27
         APARM     NOEDICT,MIN=4,OFF=ESD#,FORM=S                  V7A27
><       DELETE    SEQ1=41300027,SEQ2=41300027                    V7A40
         APARM     'EXTIME=',MIN=4,ADDR=EXTMWD                    V7A40
         APARM     'ETIME=',MIN=2,ADDR=EXTMWD,FORM=S              V7A40
         APARM     'LCOUNT=',MIN=2,ADDR=LCTBYT,FORM=S             V7A27
         APARM     LD,MIN=2,ON=LOAD#,FORM=S                       V7A27
         APARM     NOLD,MIN=4,OFF=LOAD#,FORM=S                    V7A27
         APARM     RDICT,MIN=2,ON=RLD#,FORM=S                     V7A27
         APARM     NORDICT,MIN=4,OFF=RLD#,FORM=S                  V7A27
WYLSEQ   APARM     SEQUENCE,MIN=2,ON=SEQ#,FORM=S                  V7A43
WYLNOSEQ APARM     NOSEQUENCE,MIN=4,OFF=SEQ#,FORM=S               V7A43
         APARM     YFLAG,MIN=2,ON=YFLAG#                          V7A44
         APARM     NOYFLAG,MIN=4,OFF=YFLAG#                       V7A44
>< ADD NAME=ASMGF2
><       CHANGE    NAME=ASMGF2
         OI        POEND,X'04'         ILLEGAL WITHIN COPY        V7A28
         LA        LINK,2500           SETX DIMENSION LIMIT       V7A17
         ST        LINK,SETXLIM        SET VALUE FOR LATER CHECK  V7A17
         LA        LINK,200            MAX POS PARM VALUE         V7A58
         STH       LINK,POSNOMAX       SET VALUE FOR LATER CHECK  V7A58
         TM    SWTCH8,MASK2             SKIPPING FOR SYSIN LEVEL  V7A28
         BNO   DRVER0                   BRANCH IF NOT             V7A28
         TM    SWTCH7,X'01'             IN COPY CODE STILL .Q     V7A28
         BO    DRVER0                   YES, READ AGAIN           V7A28
         NI    SWTCH8,X'FF'-MASK2       RESET SKIP FLAG           V7A28
         B     END0                     CONTINUE END PROCESSING   V7A28
DRVER0   DS    0H                                                 V7A28
         TM    SWTCH8,MASK2             SKIPPING FOR SYSIN LEVEL  V7A28
         BO    DRIVER                   YES, READ AGAIN           V7A28
         OI    NPRIME+1,X'01'           SUBLISTS DISABLE KEYWORDS V7A38
         CLI   0(TEMPRG),24             A TITLE STATEMENT .Q      V7A04
         BNE   PSDOPRA                  NO, LET GETSRC PUT STMT   V7A04
         OI    SWTCH3,MASK6             SET NO PUT CONTIN SOURCE  V7A04
PSDOPRA  DS    0H                                                 V7A04
         TM    SWTCH5,X'01'             UNDER 'EXTEN' .Q          V7A55
         BO    DCL15                    YES, GBL OK ANYWHERE      V7A55
><       DELETE    SEQ1=10740020,SEQ2=10740020                    V7A55
         BNO   DCL12                    BRANCH IF LEGAL           V7A55
         TM    SWTCH5,X'01'             IS 'EXTEN' ON .Q          V7A55
         BNO   DCL05                    ILLEGAL LCL IF NOT        V7A55
DCL12    DS    0H                                                 V7A55
><       DELETE    SEQ1=11910023,SEQ2=11910023                    V7A17
SETXLIM  DC    F'9999'                  EXTEN SETX DIMEN LIMIT    V7A17
><       DELETE    SEQ1=17500027,SEQ2=17500027                    V7A54
         BNH   TCOPYA                   BRANCH IF NOT TOO BIG     V7A54
         BAL   LINK,ABSERR              SO TO ERROR ROUTINE       V7A54
         DC    AL1(ERRR30,ERRST)        ILLEGAL STMT IN COPY      V7A54
TCOPYA   DS    0H                                                 V7A54
         TM    SWTCH5,X'41'             EXTEN AND OPEN CODE .Q    V7A28
         BNO   END0                     BRANCH IF NOT             V7A28
         TM    SWTCH7,X'01'             IN 'COPY CODE' .Q         V7A28
         BNO   END0                     BRANCH IF NOT             V7A28
         OI    SWTCH8,MASK2             SKIP BACK TO SYSIN LEVEL  V7A28
         B     DRIVER                   AND CONTINUE              V7A28
END0     DS    0H                                                 V7A28
><       DELETE    SEQ1=21095023,SEQ2=21095023                    V7A54
         BNO   END22                    NO, CONTINUE              V7A54
         L     AUXREG,ASEQBEG           BEG SEQ BASE REG          V7A54
         B     SEQ35-SEQBEG(,AUXREG)    INIT OPEN CODE            V7A54
><       DELETE    SEQ1=21680020,SEQ2=21960020                    V7A54
*./      DELETE    SEQ1=21680020,SEQ2=21960020                    V7A54
><       DELETE    SEQ1=28760020,SEQ2=28820020                    V7A54
SMTSQ1   DS    0H                                                 V7A54
         LA    ZERORG,41                DUMMY IT UP               V7A54
SMTSEQ   DS    0H                                                 V7A54
         ST    AUXREG,FINDSAVE+4        SAVE RETURN ADDRESS       V7A54
         L     AUXREG,ASEQBEG           BASE ADDRESS              V7A54
         BR    AUXREG                   ENTER ROUTINE             V7A54
ASEQBEG  DC    A(SEQBEG)                STMT SEQUENCE ROUTINE     V7A54
><       DELETE    SEQ1=28840020,SEQ2=32110027                    V7A54
*./      DELETE    SEQ1=28840020,SEQ2=32110027                    V7A54
         BP    EDT04A                   BRANCH IF VALID OFFSET    V7A05
><       DELETE    SEQ1=32766027,SEQ2=32766027                    V7A05
         LA    R1,1(,R1)                RESTORE ORIGINAL          V7A05
         BZ    EDT04A                   BRANCH IF OFFSET ONE      V7A05
BDPROT1  DS    0H                                                 V7A34
         NI    SWTCH4,X'FF'-X'02'       SET OFF M-I BIT           V7A34
><       DELETE    SEQ1=54900020,SEQ2=54900020                    V7A53
RPUPFD   DS    0H                                                 V7A53
         BAL   LINK,TSTPOS              POSPARM PRECEDE KW .Q     V7A53
         TM    SWTCH1,MASK3             PROTOTYPE STMT .Q         V7A53
         BNO   RPUPFDA                  BRANCH IF NOT             V7A53
         CLC   NRKEY,H0                 ANY KEYWORDS FOUND        V7A53
         BE    RPUPFDA                  BRANCH IF NONE            V7A53
         L     LINK,VENTKWB             KEYWORD ADJUST ROUTINE    V7A53
         BALR  LINK,LINK                ADJUST KEYWORD NUMBERS    V7A53
RPUPFDA  DS    0H                                                 V7A53
><       DELETE    SEQ1=55040027,SEQ2=55040027                    V7A53
         LA    OPTR,OUTPUT+6            ALSO END OF M-I STATEMENT V7A53
         LH    WORK1,POSNO              KEYWORDS AND POSNLS       V7A53
         SH    WORK1,NRKEY              LESS KEYWORD COUNT        V7A53
         STH   WORK1,POSNO              GIVES ONLY POSNL COUNT    V7A53
         MVC   OUTPUT+5(2),POSNO        FINAL POSNL COUNT         V7A53
         TM    PARBYT1,EXTEN            IS EXTEN ON .Q            V7A06
         BNO   LEGP1B                   BRANCH IF NOT             V7A06
         TM    MVBYTE,X'20'             S.D.T.'S STILL OK .Q      V7A06
         BZ    LEGP1B                   BRANCH IF YES             V7A06
         LA    R3,1                     FIRST INPUT INDICATOR     V7A06
         MVC   PNCTAB+39(12),NN15       TRANSLATE TO DELIMITER    V7A06
         MVI   PNCTAB+EQUALS,X'00'      FORGET THE EQUAL SIGN     V7A06
         BAL   LINK,TRTESN+6            GO TO ENTRY POINT         V7A06
         B     LEGP1C                   AND CONTINUE              V7A06
LEGP1B   DS    0H                                                 V7A06
LEGP1C   DS    0H                                                 V7A06
><       DELETE    SEQ1=64630027,SEQ2=64630027                    V7A53
         BCR   1,LINK                   IGNORE ERROR IF YES       V7A53
><       DELETE    SEQ1=66860020,SEQ2=66860020                    V7A53
NTCM1    DS    0H                                                 V7A53
         CLC   NRKEY,H0                 ANY KEYWORDS FOUND .Q     V7A53
         BE    NTCM2                    BRANCH IF NONE            V7A53
         L     LINK,VENTKWB             KEYWORD ADJUST ROUTINE    V7A53
         BALR  LINK,LINK                REASSIGN KW POS NUMBERS   V7A53
         B     NTCM3                    GO TO RETURN              V7A53
NTCM2    DS    0H                                                 V7A53
         BAL   LINKR,RPPFD1             INSERT PROTO START STMT   V7A53
NTCM3    DS    0H                                                 V7A53
><       DELETE    SEQ1=67050027,SEQ2=67055027                    V7A53
*./      DELETE    SEQ1=67050027,SEQ2=67055027                    V7A53
><       DELETE    SEQ1=67380020,SEQ2=67380020                    V7A53
         BAL   LINK,UPKEY               INCREMENT KW COUNTER      V7A53
><       DELETE    SEQ1=67400020,SEQ2=67400020                    V7A53
         BAL   R1,ISVLD1                ENTER KW NAME, IF VALID   V7A53
         SH    WORK1,NRKEY              LESS NUMBER OF KEYWORDS   V7A53
         CLI   0(INPTR),EQUALS          KEYWORD .Q                V7A53
         BNE   ISVLD3                   BRANCH IF NOT             V7A53
         LH    WORK1,NRKEY              KEYWORD NUMBER            V7A53
         LNR   WORK1,WORK1              -(MINUS) KEYWORD NUMBER   V7A53
ISVLD3   DS    0H                                                 V7A53
><       DELETE    SEQ1=70130025,SEQ2=70130025                    V7A08
MASK5    EQU   X'04'                                              V7A08
MASK6    EQU   X'02'                                              V7A04
><       DELETE    SEQ1=77580027,SEQ2=77580027                    V7A34
         BNE   BDPROT1                  ERROR IF NOT              V7A34
><       DELETE    SEQ1=77860027,SEQ2=78020027                    V7A49
*./      DELETE    SEQ1=77860027,SEQ2=78020027                    V7A49
*        FROM HERE TO SEQEND IS UPDATE NUMBER                     V7A54
SEQBEG   DS    0H
         USING SEQBEG,AUXREG            ENTRY ADDRESS WILL BE BASE
         IC    RQ,POBYTE(ZERORG)        INITIALIZE SWITCH BYTE
         STC   RQ,PSOPSW
         TM    SWTCH5,X'02'             SKIPPING TO END .Q
         BZ    SEQ02                    BIF NO
         TM    PSOPSW,X'80'             YES - IS THIS AN END CARD .Q
         BZ    DRIVER                   BIF NO
         L     B2,DCLOS1AD              YES -LOAD BASE FOR BRANCH
         L     LINK,AKLOSIT             TO ABORT
         BR    LINK                     ASSEMBLY.
SEQ02    TM    SWTCH5,X'04'             SKIPPING TO MEND .Q
         BZ    SEQ05                    BIF NO
         TM    PSOPSW,X'80'             YES -IS THIS AN END CARD .Q
         BO    SEQ04                    BIF YES
         TM    PSOPSW,X'40'             IS THIS A MEND CARD .Q
         BZ    ABS001                   BIF NO
         TM        SWTCH6,2            WILL DICT BE SUBSET .Q
         BZ        MEND2     NO, RESET OUTPUT BUFFER & CLOSE OUT DEFN
         B         MEND1                YES- PROCESS MEND
SEQ04    BAL       LINK,WRNERR         GO LOG ERROR
         DC        AL1(ERRR33)         END CARD IN MACRO
         DC        AL1(ERRST)          CLOSE OUT DEFINITION
         B         END1                CLOSE OUT PHASE
SEQ05    TM    SWTCH7,X'01'             ARE WE WITHIN COPY CODE.....
         BZ    SEQ10                    NO
         TM    PSOPSW,4                 YES -IS OP LEGAL IN COPY.....
         BO    SEQ08                    ERROR IF NOT
         TM    SWTCH5,X'20'             WITHIN SYSTEM MACRO DEFN .Q
         BZ    SEQ10                    BRANCH IF NOT
         TM    PSOPSW,X'60'             IS THIS A MACRO/MEND OP .Q
         BZ    SEQ10                    OK IF NOT
******** GENERATE DIAGNOSTIC -ILLEGAL STATEMENT IN COPY
SEQ08    DS    0H
         BAL   LINK,ABSERR
         DC    AL1(ERRR30)
         DC    AL1(ERRST)
********
SEQ10    TM    SWTCH1,64                ARE WE WITHIN A MACRO.....
         BZ    SEQ20                    NO
         TM    PSOPSW,2                 YES -IS OP LEGAL IN MACROS.....
         BZ    SEQ50                    YES
         TM    SWTCH5,32                NO -IS THIS A SYSTEM MACRO.....
         BO    SEQ30               YES
         TM    PSOPSW,128               NO -IS THIS END.....
         BO    OMY                 WELL,WELL - AN END CARD
         L     LINK,GETAD               GET PAST ANY
         BALR  LINK,LINK                   CONTINUATION CARDS
         DC    AL2(6)
******** GENERATE DIAGNOSTIC -OP ILLEGAL IN MACRO DEFINITIONS
********
         BAL   LINK,ABSERR
         DC    AL1(ERRR31)
         DC    AL1(ERRST)
SEQ20    TM    SWTCH5,128               PROCESSING PROGRAMMER MACROS...
         BZ    SEQ25                    NO
         CLI   NAMBYT,1                 YES -IF NAME FIELD IS S.S.
         BE    SEQ34                      GENERATE DIAGNOSTIC
         TM    PSOPSW,1                 IF OP IS LEGAL BETWEEN MACROS
         BO    SEQEND                     EXIT
         B     SEQ35                    OTHERWISE, INITIALIZE MAIN-LINE
SEQ25    TM    SWTCH6,64                EXPECTING MACRO PSEUDO-OP.....
         BZ    SEQ40                    NO
         TM    PSOPSW,32                YES -IS THAT WHAT WE GOT.....
         BNZ       SEQ26               YES-
         OI        SWTCH5,X'04'        NO-MACRO ABORT ON
         NI        SWTCH6,X'FD'        SUBSET INDICATOR OFF
         B         END1                TO CLOSE OUT DICTIONARY
SEQ26    NI        SWTCH6,X'BF'        TURN OFF INDICATOR.
         B     SEQEND                     AND EXIT
******** GENERATE DIAGNOSTIC -ILLEGAL STATEMENT IN SYSTEM MACRO
SEQ30    L     LINK,GETAD
         BALR  LINK,LINK           SKIP ANY CONTINUATION CARDS.
         DC    AL2(6)
         BAL   LINK,ABSERR
         DC    AL1(ERRR32)
         DC    AL1(ERRST)
OMY      DS    0H
         BAL   LINK,WRNERR
         DC    AL1(ERRR33)
         DC    AL1(ERRST)
         B     SEQ35
******** GENERATE DIAGNOSTIC -MEANINGLESS SEQUENCE SYMBOL -ERASED
********
SEQ34    BAL   LINK,CKNAM3
         CLI   OUTPUT+5,X'0B'           IS OPERATION ANOP .Q
         BNE   *+8                      BIF NO
         MVI   NAMBYT,1                 YES -FOOL ANOP, S.S. PRESENT
********
******** INITIALIZATION FOR OPEN CODE PROCESSING
SEQ35    XI    SWTCH5,192               FLIP INDICATORS
         TIMEOUT   'OPEN CODE STARTED ',DCB=NO
         L     LINK,HISTRY+8            ENTER A DUMMY ENTRY INTO BLOCK
         MVC   4(5,LINK),F1+1           ZERO OF THE OPEN CODE DICT-
         LA    LINK,9                   IONARY AND UP THE INDICES
         ST    LINK,VCR                 ACCORDINGLY. THIS IS NEC. DUE
         ST    LINK,TNDX                TO BLOCK NO. SEARCH ALGORITHM.
         TM    SWTCH5,X'01'             WAS 'EXTEN' SPECIFIED .Q  V7A49
         BNO   SEQ37                    BRANCH IF NOT             V7A49
         ST    AUXREG,FINDSAVE          SAVE BASE REGISTER        V7A49
         L     AUXREG,DUSING            BRANCH ADDR FOR ENTDICT   V7A49
         MVC   DCAREA(10),SYSNDX        SYSNDX                    V7A49
         BALR  LINK,AUXREG              ENTER ZEROTH POS PARM     V7A49
         MVC   DCAREA+5(5),SYSECT       SYSECT                    V7A49
         BALR  LINK,AUXREG              ENTER FIRST POS PARM      V7A49
         MVC   DCAREA(11),SYSDATE       SYSDATE                   V7A49
         BALR  LINK,AUXREG              ENTER SECOND POS PARM     V7A49
         MVC   DCAREA+5(6),SYSTIME      SYSTIME                   V7A49
         BALR  LINK,AUXREG              ENTER THIRD POS PARM      V7A49
         MVC   DCAREA+5(6),SYSSTYP      SYSSTYP                   V7A49
         BALR  LINK,AUXREG              ENTER FOURTH POS PARM     V7A49
         MVC   DCAREA+5(6),SYSPARM      SYSPARM                   V7A49
         BALR  LINK,AUXREG              ENTER FIFTH POS PARM      V7A49
         L     AUXREG,FINDSAVE          RESTORE BASE REGISTER     V7A49
SEQ37    DS    0H                                                 V7A49
         TM    SWTCH7,X'02'             END CARD GENERATED
         BO    END22                    YES CONTINUE END PROCESSING
******** OF COURSE THERE'S MORE TO BE ADDED
SEQ40    TM    PSOPSW,16                IS OP MEXIT,MNOTE,MEND.....
         BO    SEQ45                    YES -A GOOF
         TM    PSOPSW,32                NO -IS OP MACRO.....
         BZ    SEQ50                    NO
SEQ45    L     LINK,GETAD               GET PAST ANY
         BALR  LINK,LINK                   CONTINUATION CARDS
         DC    AL2(6)
******** GENERATE DIAGNOSTIC -ILLEGAL STATEMENT IN OPEN CODE
         BAL   LINK,ABSERR
         DC    AL1(ERRR34)
         DC    AL1(ERRST)
********
SEQ50    TM    OUTPUT+4,MASK0           IS OP A PSEUDO-OP .Q
         BZ    SEQ52                    BIF NO
         TM    PSOPSW,8                 IS OP GBLX,LCLX.....
         BO    SEQEND                   YES -EXIT
         CLI   OUTPUT+5,X'0C'           NO.. IS OP COPY
         BE    SEQEND                   ALLOW COPY BEFORE DECLARATIONS
         CLI   OUTPUT+5,X'25'      IS OP ACTR.
         BE    SEQ55               YES -
         CLI   OUTPUT+5,X'2D'           NO.. IS OP OPSYN
         BE    SEQEND                   ALLOW OPSYN BEFORE DECLNS
SEQ52    DS    0H
         TM    SWTCH5,X'01'             IS EXTEN ON .Q
         BO    SEQ53                    YES, BRANCH AROUND
         TM    SWTCH1,X'40'             ARE WE IN A MACRO .Q
         BO    SEQ54                    YES, DISABLE DECLARATIONS
SEQ53    DS    0H
         CLI   PSOPSW,X'01'             EJECT,PRINT,SPACE OR TITLE .Q
         BE    SEQEND                   RETURN IF SO
SEQ54    DS    0H
         OI    SWTCH5,X'18'             DISABLE GBLX,LCLX AND ACTR
         B     SEQEND                     AND EXIT
SEQ55    TM    SWTCH5,X'08'        IF LCLX HAS BEEN DISALLOWED,
         BZ    SEQ52
         TM    SWTCH5,X'01'             IS EXTEN ON .Q            V7A55
         BO    SEQ52                    ACTR OK IF EXTEN          V7A55
         B     DCL05               THIS ACTR IS OUT OF ORDER.
         SPACE
SEQEND   DS    0H
         L     AUXREG,FINDSAVE+4        RESTORE RETURN REGISTER
         BR    AUXREG                   AND RETURN TO CALLER
         DROP  AUXREG
         EJECT
>< ADD NAME=ASMGF2A
><       CHANGE    NAME=ASMGF2A
><       DELETE    SEQ1=01960022,SEQ2=01960022                    V7A53
         ENTRY ENTKWB                                             V7A53
><       DELETE    SEQ1=27646025,SEQ2=27646025                    V7A56
         TM    0(EPTR),X'20'            ENTRY SETA/SETB/SETC .Q   V7A56
VABSER   DC    V(ABSERR)                                          V7A53
VWRNER1  DC    V(WRNERR)                                          V7A53
VABS001  DC    V(ABS001)                                          V7A53
><       DELETE    SEQ1=29140024,SEQ2=29200020                    V7A53
         EJECT ,                                                  V7A53
*        AFTER SCANNING MACRO PROTOTYPE STATEMENT THE             V7A53
*        KEYWORD PARAMETERS HAVE BEEN ENTERED IN LOCAL DICT       V7A53
*        WITH A PARAMETER NUMBER OF MINUS THE KEYWORD             V7A53
*        COUNT NUMBER.  THE PURPOSE OF THIS ROUTINE IS TO         V7A53
*        MAKE THE KEYWORD PARM NUMBERS ABOVE POSITIONAL PARMS.    V7A53
*                                                                 V7A53
*        CALLING SEQUENCE  --  L     LINK,VENTKWB                 V7A53
*                              BALR  LINK,LINK                    V7A53
         SPACE ,                                                  V7A53
ENTKWB   DS    0H                                                 V7A53
         STM   RB,L5,SAVREG        SAVE CALLER'S REGISTERS        V7A53
         L     B2,VENTKWB          BASE REGISTER                  V7A53
         USING ENTKWB,B2           AND TELL THE ASSEMBLER         V7A53
         LA    RR4,TASHL           NUMBER OF HAST TABLE ENTRIES   V7A53
         LA    RR3,THASHT          FIRST HASH POINTER IS HERE     V7A53
ENTKW1   DS    0H                                                 V7A53
         LR    RR2,RR3             FIRST CHAIN PTR ADDRESS        V7A53
ENTKW2   DS    0H                                                 V7A53
         MVC   EVENY+1(3),0(RR2)   ALIGN NEXT POINTER             V7A53
         L     RR2,EVENY           GET POINTER                    V7A53
         LTR   RR2,RR2             AT THE END .Q                  V7A53
         BZ    ENTKW3              YES, CONTINUE WITH NEXT        V7A53
         A     RR2,HISTRY+8             ADD DICTIONARY BASE
         TM    3(RR2),X'48'        IS THIS KEYWORD .Q             V7A53
         BNO   ENTKW2              BRANCH OUT IF NOT              V7A53
         TM    3(RR2),X'30'        AND NOTHING ELSE .Q            V7A53
         BNZ   ENTKW2              BRANCH OUT IF NOT              V7A53
         IC    RR1,3(,RR2)         GET FLAG BYTE                  V7A53
         N     RR1,F7              PURIFY BCD LENGTH-1            V7A53
         LA    RR1,5(RR1,RR2)      POINT TO POS PARM NUMBER       V7A53
         MVC   EVENX+2(2),0(RR1)   ALIGN POS PARM NUMBER          V7A53
         LH    RR0,EVENX+2         LOAD POS PARM NUMBER           V7A53
         LTR   RR0,RR0             NEGATIVE MEANS KEYWORD         V7A53
         BNM   ENTKW2              BRANCH IF NOT KEYWORD          V7A53
         LPR   RR0,RR0             POSITIVE KEYWORD NUMBER        V7A53
         AH    RR0,POSNO           PLUS NUMBER OF POSNL/KEYWORDS  V7A53
         SH    RR0,NRKEY           LESS NUMBER OF KEYWORDS        V7A53
         AH    RR0,POSNOINT        PLUS INITIAL DUMMIES           V7A53
         STH   RR0,EVENX+2         SAVE REAL RESULT               V7A53
         MVC   0(2,RR1),EVENX+2    CHANGE LOCAL DICT PARM NUMBER  V7A53
         B     ENTKW2              ALL DONE                       V7A53
ENTKW3   DS    0H                                                 V7A53
         LA    RR3,L'THASHT(,RR3)  NEXT HASH PTR IS HERE          V7A53
         BCT   RR4,ENTKW1          DO THEM ALL                    V7A53
         LM    RB,L5,SAVREG        RESTORE CALLER'S REGS          V7A53
         BR    LINK                AND RETURN TO CALLER           V7A53
         TM    SWTCH1,X'10'             PROTOTYPE EXPECTED .Q     V7A12
         BO    SMCH31                   YES, DON'T SUBSET MAC DIC V7A12
         ST    RE2,SMRE2X               SAVE PTR TO N/P FIELD     V7A24
><       DELETE SEQ1=39395027,SEQ2=39420027                       V7A42
         LH    L4,14(,RA)               CSW, BLKSIZE IN DCB       V7A42
         LCR   L4,L4                    AND BUFFER ADDRESS        V7A42
         TM    DCBRECFM-IHADCB(L5),X'C0'  RECFM 'U' .Q            V7A42
         BNO   LIBRS0                   BRANCH IF NOT             V7A42
         LTR   L4,L4                    CHECK RESIDUAL COUNT      V7A42
         BNM   LIBRDERR                 ERR IF RESID CT <= 0      V7A42
LIBRS0   DS    0H                                                 V7A42
         AH    L4,DCBBLKSI-IHADCB(,L5)  CALCULATE RECORD LENGTH   V7A42
         L     LINK,LBAREAAD(,RD1)      POINT AT THE BUFFER       V7A42
         CH    L4,0(,LINK)              IS IT EDIT-FORMAT .Q      V7A42
         BL    LIBRS1                   BRANCH IF NOT             V7A42
         CLI   0(LINK),X'0F'            DOUBLE-CHECK THAT HALF    V7A42
         BNL   LIBRS1                   WORD COUNT IS POSITIVE    V7A42
         LH    L4,0(,LINK)              GET EDIT BLOCK LENGTH     V7A42
         ST    L4,LBLIBEOB(,RD1)        STORE AS EOB OFFSET       V7A42
         LA    L4,2                     GET START OFFSET          V7A42
         B     LIBRS2                   AND JOIN COMMON CODE      V7A42
LIBRS1   DS    0H                                                 V7A42
         ST    L4,LBLIBEOB(,RD1)        SAVE EOB OFFSET           V7A42
LIBRS2   DS    0H                       HERE FROM EDIT-FORMAT     V7A42
SMCH31   DS    0H                                                 V7A12
         NI    SWTCH1,X'EF'             TURN OFF PROTOTYPE EXPECT V7A12
><       DELETE    SEQ1=45360020,SEQ2=45360020                    V7A08
ZXIT     DS    0H                                                 V7A08
         NI    SWTCH3,NM0123            RESET GETSRC BITS 0-3     V7A08
         TM    SWTCH1,MASK1             IN PROGRAMMER MACRO .Q    V7A04
         BO    REWRTP                   YES, PRINT EVERYTHING     V7A04
         TM    SWTCH3,MASK6             SUPPRESS SOURCE PUT ON .Q V7A04
         BO    NOSYSM                   YES, DO NOT PUT SOURCE    V7A04
><       DELETE    SEQ1=46900027,SEQ2=47000027                    V7A42
         BAL   LINK,LIBRDSUB            CLEAN VARIOUS STUFF UP    V7A42
         CLI   0(L4),X'0F'              IS THE BLOCK EDIT-FORMAT? V7A42
><       DELETE    SEQ1=47120027,SEQ2=47120027                    V7A24
         LA    L4,0(L4,RA)              ADD BUFFER OFFSET (CC)    V7A42
         BNL   LIBRRD2A                 NO, UNBLOCK CARD FORMAT   V7A42
         LR    RA,L4                    RECORD ADDR INTO RA (R1)  V7A42
         LA    WRKREG,NMBFLG(,ADJUST)   OUTPUT INTO WRKREG (R2)   V7A42
         L     LINK,ADLIST1             POINT AT LIST1 IN ASM     V7A42
         LA    RQ,L1DDNAM+24(,LINK)     R0 POINTS TO "SYSLIB"     V7A42
         L     L5,L1DBLK(,LINK)         POINT AT DEBLOCKER        V7A42
         BALR  L4,L5                    OFF TO IT                 V7A42
         S     RA,LBAREAAD(,RE1)        CALCULATE THE OFFSET      V7A42
         B     LIBRRD2B                 GO JOIN COMMON CODE       V7A42
LIBRRD2A DS    0H                       HERE FOR CARD FORMAT      V7A42
LIBRRD2B DS    0H                       HERE FROM EDIT CASE       V7A42
><       DELETE    SEQ1=47300027,SEQ2=47480027                    V7A42
         BAL   LINK,LIBRDSUB            CLEAN VARIOUS STUFF UP    V7A42
LSLINK   DS    F                        SAVE AREA FOR LINK        V7A42
LIBRDSUB DS    0H                                                 V7A42
         ST    LINK,LSLINK              SAVE LINK REGISTER        V7A42
         NI    LBRDSW(RE1),255-LBRDOT   TURN OFF READ OUTSTANDING V7A42
         LR    RD1,RE1                  DECB ADDRESS              V7A42
         BAL   LINK,NOTCHECK            CHECK THE READ            V7A42
         OI    LBRDSW(RE1),LBRDRS       PROCESSING READS STARTED  V7A42
         L     RD1,LBRECPW(,RE1)        COMPUTE EOB ADDRESS       V7A42
         L     RA,LBDCBAD(,RE1)         FROM RESIDUAL LENGTH IN   V7A42
         LH    L4,14(,RD1)              GET RESIDUAL COUNT        V7A42
         LCR   L4,L4                    CSW, BLKSIZE FROM DCB     V7A42
         TM    DCBRECFM-IHADCB(RA),X'C0'  RECFM 'U' .Q            V7A42
         BNO   LIBRDS0                  BRANCH IF NOT             V7A42
         LTR   L4,L4                    CHECK RESIDUAL COUNT      V7A42
         BNM   LIBRDERR                 OVERFLOW IF ZERO OR POS   V7A42
LIBRDS0  DS    0H                                                 V7A42
         AH    L4,DCBBLKSI-IHADCB(,RA)  GET TRUE BLOCK LENGTH     V7A42
         L     LINK,LBAREAAD(,RE1)      GET THE BUFFER ADDRESS    V7A42
         CH    L4,0(,LINK)              TEST IF IT'S EDIT FORMAT  V7A42
         BL    LIBRDS1                  IF NOT, PROCESS NORMALLY  V7A42
         CLI   0(LINK),X'0F'            BETTER DOUBLE-CHECK       V7A42
         BNL   LIBRDS1                  THAT THE WORD'S POSITIVE  V7A42
         LH    L4,0(,LINK)              GET THE 'REAL' LENGTH     V7A42
         ST    L4,LBLIBEOB(,RE1)        STORE IT AS EOB ADDR      V7A42
         LA    L4,2                     GET STARTING OFFSET OF 2  V7A42
         B     LIBRDS2                  REJOIN COMMON CODING      V7A42
LIBRDS1  DS    0H                                                 V7A42
         ST    L4,LBLIBEOB(,RE1)        SAVE EOB OFFSET           V7A42
         SR    L4,L4                    ZERO WORK REGISTER        V7A42
LIBRDS2  DS    0H                                                 V7A42
         ST    L4,LBLIBNTA(,RE1)        ZERO START BUFFER OFFSET  V7A42
         L     LINK,LSLINK              RESTORE LINK REGISTER     V7A42
         BR    LINK                     RETURN TO CALLER          V7A42
*                                                                 V7A42
LIBRDERR DS    0H                                                 V7A42
         L     RA,ADLIST1               POINT TO LIST1 IN ASM     V7A42
         MVC   LIBRDDNM(8),L1DDNAM+24(RA) MOVE "SYSLIB" INTO MSG  V7A42
         BAL   RQ,L1ABEND(,RA)          GO TERMINATE ASSEMBLY     V7A42
*                                                                 V7A42
         DC    C'503A',AL1(LIBME-*-2)   PARAMETERS FOR ABEND      V7A42
         DC    C'BLOCK EXCEEDS DECLARED BLKSIZE, DDNAME = '       V7A42
LIBRDDNM DC    C'XXXXXXXX'              SPACE FOR DDNAME          V7A42
LIBME    EQU   *                        END OF MESSAGE            V7A42
*                                                                 V7A42
><       DELETE    SEQ1=49673027,SEQ2=49673027                    V7A42
         READ  (RD1),SF,,,'S',MF=E      READ INTO BUFFER          V7A42
>< ADD NAME=ASMGF3
><       CHANGE    NAME=ASMGF3
         TM        PARBYT1,X'04'       UNDER EXTEN .Q             V7A49
         BNO       MACIN               NO, JUST GO AND READ       V7A49
         MVI       MAC4+1,X'00'        EXTEN POS PARMS SWITCH     V7A49
         L         R8,NDXCNT           FIRST SYSNDX VALUE         V7A49
         BCTR      R8,0                LESS ONE                   V7A49
         ST        R8,NDXCNT           SET FOR OPEN CODE VALUE    V7A49
         LH        R8,POSNOMAX         OLD MAX POS PARMS          V7A58
         LA        R8,40(,R8)          BUMP BY EXTEN OPTION       V7A58
         STH       R8,POSNOMAX         SET NEW MAX POS PARMS      V7A58
         LH        R8,HIPTRMXL         OLD MAX BYTE LENGTH        V7A58
         LA        R8,40*2(,R8)        BUMP TWICE EXTEN OPTION    V7A58
         STH       R8,HIPTRMXL         SET NEW MAX BYTE LENGTH    V7A58
         MVI       MAC5+1,X'00'        CLEAR FIRST TIME SWITCH    V7A49
         MVC       PARADROP(4),PARSAV  SAVE OPEN CODE PAR AREA    V7A49
         LA        R8,HIPTROP          OPEN PAR POINTERS HERE     V7A49
         ST        R8,PADOP            INITIALIZE ITS VALUE       V7A49
><       DELETE    SEQ1=06900027,SEQ2=06900027                    V7A53
         LA        R10,7(,R10)         BUMP INPUT POINTER         V7A53
         TM        PARBYT1,X'04'       UNDER EXTEN .Q             V7A49
         BNO       CSECT01             BRANCH IF NOT              V7A49
         L         R8,PARADROP         OPEN CODE POS PARM AREA    V7A49
         MVC       13(9,R8),SECTNM     ENTER SECTION NAME/LENGTH  V7A49
         MVC       45(6,R8),SECTYP     ENTER SECTION TYPE         V7A49
         CLC       46(5,R8),=X'1C1D0A1B1D'  IS IT 'START' .Q      V7A49
         BNE       CSECT01             BRANCH IF NOT              V7A49
         MVC       46(5,R8),=X'0C1C0E0C1D'  CHANGE TO 'CSECT'     V7A49
CSECT01  DS        0H                                             V7A49
         TM        PARBYT1,X'04'       UNDER EXTEN .Q             V7A49
         BNO       CSECT02             BRANCH IF NOT              V7A49
         L         R8,PARADROP         OPEN CODE POS PARM AREA    V7A49
         MVC       13(9,R8),SECTNM     ENTER SECTION NAME/LENGTH  V7A49
         MVC       45(6,R8),SECTYP     ENTER SECTION TYPE         V7A49
         CLC       46(5,R8),=X'1C1D0A1B1D'  IS IT 'START' .Q      V7A49
         BNE       CSECT02             BRANCH IF NOT              V7A49
         MVC       46(5,R8),=X'0C1C0E0C1D'  CHANGE TO 'CSECT'     V7A49
CSECT02  DS        0H                                             V7A49
         LA        R5,4(,R7)           ACTR VALUE GOES HERE       V7A55
         CR        R5,R12              DID WE JUST SET ACTR .Q    V7A55
         BNE       PARAM               BRANCH IF NOT              V7A55
         XC        8(4,R7),8(R7)       ZERO LOOP COUNT            V7A55
MAC5     BC        *-*+15,INIT1        BRANCH IF EXTEN AND OPEN   V7A49
><       DELETE    SEQ1=13450027,SEQ2=13450027                    V7A53
         LA        R10,3(,R10)         BUMP FOR END STATEMENT     V7A53
><       DELETE    SEQ1=13690027,SEQ2=13690027                    V7A53
*./      DELETE    SEQ1=13690027,SEQ2=13690027                    V7A53
         MVI       KEYSWIT,X'00'       CLEAR KEYWORD SWITCHES     V7A53
KWPRT01  DS        0H                                             V7A53
         CLI       0(R10),ENDREC       END OF PROTOTYPE           V7A53
         BE        KWPRT03             BRANCH IF YES              V7A53
         CLI       0(R10),ERRFLG       ERROR RECORD .Q            V7A53
         BH        KWPRT02             HIGHER, END OF RECORD      V7A53
         MVC       FWRD+2(2),1(R10)    ALIGN RECORD LENGTH        V7A53
         AH        R10,FWRD+2          ADVANCE PROTOTYPE PTR      V7A53
         B         KWPRT01             CONTINUE SEARCH            V7A53
KWPRT02  DS        0H                                             V7A53
         LA        R12,BUFFCB          READ NEXT PROTO SEGMENT    V7A53
         BAL       R9,RDNEXT2          READ NEXT PROTO SEGMENT    V7A53
         LA        R10,BLKHDR(,R1)     POINT TO NEXT RECORD       V7A53
         B         KWPRT01             AND CONTINUE SEARCH        V7A53
KWPRT03  DS        0H                                             V7A53
         MVC       POSCNT,5(R10)       ALIGN POS PARM COUNT       V7A53
         L         R0,SAVNOTE          READ PROTOTYPE TARGET BLK  V7A53
         LA        R12,BUFFCB          BUFFER CONTROL BLOCK       V7A53
         BAL       R9,RDTEXT2          RE-READ THE PROTOTYPE      V7A53
         LA        R10,BLKHDR(,R1)     POINT PAST HEADER          V7A53
         CLI       0(R10),X'06'        CHECK IF PROTOTYPE AGAIN   V7A53
         BNE       PUTERR              (LOGIC) ERROR IF NOT       V7A53
         MVC       FWRD+2(2),1(R10)    PROTOTYPE RECORD LENGTH    V7A53
         AH        R10,FWRD+2          ADVANCE PROTOTYPE POINTER  V7A53
><       DELETE    SEQ1=13860020,SEQ2=13860020                    V7A53
         BL        KWENDMI             M-I END RECORD FLAG        V7A53
><       DELETE    SEQ1=14120020,SEQ2=14120020                    V7A53
         BH        KWPAR               BRANCH IF KEYWORD          V7A53
         TM        KEYSWIT,KEYPASS2    SECOND PASS, KEYWORDS ONLY V7A53
         BO        PARP                BRANCH IF YES              V7A53
KWPAR    DS        0H                                             V7A53
         TM        KEYSWIT,KEYPASS2    2ND PASS KEYWORDS ONLY     V7A53
         BO        ALLPOS              BRANCH IF YES              V7A53
         OI        KEYSWIT,KEYFOUND    ONE KEYWORD IN M-I         V7A53
         B         PARP                SKIP IT THIS TIME          V7A53
KWENDMI  DS        0H                                             V7A53
         TM        KEYSWIT,KEYPASS2    2ND PASS KEYWORDS ONLY     V7A53
         BO        ALLPOS              BRANCH TO END IF YES       V7A53
         TM        KEYSWIT,KEYFOUND    ANY KEYWORDS ENCOUNTERED   V7A53
         BNO       ALLPOS              BRANCH IF NOT              V7A53
         OI        KEYSWIT,KEYPASS2    2ND PASS KEYWORDS ONLY     V7A53
         B         RDAGN               AND TRY AGAIN              V7A53
KEXTESTA BC        *-*,KATT1A          MOD FOR K' OF SETA         V7A56
KEXTESTB BC        *-*,KATT1B          MOD FOR K' OF SETB         V7A56
*        GET K' (COUNT) ATTRIBUTE OF VARIABLE SETA SYMBOL         V7A56
*                                                                 V7A56
KATTBTA  DS        0H                                             V7A56
         LA        R10,1(,R10)         BUMP INPUT POINTER         V7A56
         MVI       KEXTESTA+1,X'F0'    NO SUBSCRIPT SETA IN ARITH V7A56
         BAL       R9,METINT           FIND THE VARIABLE          V7A56
KATT1A   DS        0H                                             V7A56
         MVI       KEXTESTA+1,X'00'    REVERT BRANCH TO NOP       V7A56
         MVC       SAV12(4),0(R12)     ALIGN THE SETA VALUE       V7A56
         L         R8,SAV12            GET SETA VALUE             V7A56
         BAL       R9,ABCD             CONVERT TO PRINTABLE       V7A56
         LR        R8,R5               RESULTING STRING LENGTH    V7A56
         B         METB1               CONTINUE                   V7A56
*                                                                 V7A56
*        GET K' (COUNT) ATTRIBUTE OF VARIABLE SETB SYMBOL         V7A56
*                                                                 V7A56
KATTBTB  DS        0H                                             V7A56
         LA        R10,1(,R10)         BUMP INPUT POINTER         V7A56
         MVI       KEXTESTB+1,X'F0'    NO SUBSCRIPT SETB IN ARITH V7A56
         BAL       R9,METINT           FIND THE VARIABLE          V7A56
KATT1B   DS        0H                                             V7A56
         MVI       KEXTESTB+1,X'00'    REVERT BRANCH TO NOP       V7A56
         LA        R8,1                ALWAYS, ALWAYS ONE         V7A56
         B         METB1               CONTINUE                   V7A56
*                                                                 V7A56
><       DELETE    SEQ1=32350027,SEQ2=32350027                    V7A03
         CLI       3(R12),X'80'        NO SCALE FOR EXTENDED EQU  V7A03
         CLI       BUFFCB+7,8          IN OPEN CODE .Q            V7A49
         BNE       POSPAR01            BRANCH IF NOT              V7A49
         MVC       PAD(8),PADOP        ENTER THE OPEN CODE PTRS   V7A49
POSPAR01 DS        0H                                             V7A49
         CLI       1(R10),VSETA        EXTENDED K' OF SETA .Q     V7A56
         BE        KATTBTA             BRANCH IF YES              V7A56
         CLI       1(R10),VSETB        EXTENDED K' OF SETB .Q     V7A56
         BE        KATTBTB             BRANCH IF YES              V7A56
><       DELETE    SEQ1=41035026,SEQ2=41035026                    V7A39
         LA        R9,0(R9,R11)        POINT TO LAST OUTPUT CHAR  V7A39
><       DELETE    SEQ1=43580022,SEQ2=43580022                    V7A25
*./      DELETE    SEQ1=43580022,SEQ2=43580022                    V7A25
HIPTROP  DC        H'14',AL2(11,22,32,43,51),AL1(0,0)  OPEN CODE  V7A49
><       DELETE    SEQ1=49000020,SEQ2=49000020                    V7A58
         DS        (2*240+2)C          CONTIN FOR FIELD 'HIPTR'   V7A58
PADOP    DC        A(*-*,*-*)          OPEN CODE POS PARM ADDRS   V7A49
PARADROP EQU       PADOP+4             ADDR OPEN PARM TABLE       V7A49
KEYSWIT  DC        X'00'               M-I KEYWORD SCAN SWITCH    V7A53
KEYPASS2 EQU       X'80'               SECOND PASS, KEYWORDS ONLY V7A53
KEYFOUND EQU       X'40'               KEYWORD FOUND ON 1ST PASS  V7A53
><       DELETE    SEQ1=50677027,SEQ2=50677027                    V7A16
DUMLENF3 EQU       (26*1024-(F3END-ASMGF3))/256*256  MULT OF 256  V7A16
         DC        0D'0'               RESULT OF ALIGNMENT        V7A16
>< ADD NAME=ASMGF7C
><       CHANGE    NAME=ASMGF7C
><       DELETE    SEQ1=05980020,SEQ2=05980020
         BNE   TITLE1                   BRANCH IF LABEL PRESENT   V7A02
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A02
         BO    TITLE5                   YES, ALLOW LATER TITLE    V7A02
         B     TITLE4                   NO FURTHER TITLE LABELS   V7A02
><       DELETE    SEQ1=06210027,SEQ2=06210027
TITLE5   DS    0H                                                 V7A02
><       DELETE    SEQ1=07740020,SEQ2=07740020                    V7A41
         BNE   MNOTE1A                  BRANCH IF NOT             V7A41
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A41
         BNO   MNOTE3                   NO, SEVERITY CODE OMITTED V7A41
         OI    MNOTESC+1,X'F0'          CLOSE ERROR LOGGING GATE  V7A41
         B     MNOTE3                   SEVERITY CODE WAS OMITTED V7A41
MNOTE1A  DS    0H                                                 V7A41
>< ADD NAME=ASMGF7D
><       CHANGE    NAME=ASMGF7D
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A13
         BO    DCEV1                    YES, LIT EXPRESSION OK    V7A13
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A14
         BO    DCEV1Y                   YES, ALLOW * IN EXPRESS   V7A14
DCEV1Y   DS    0H                                                 V7A14
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A13
         BO    LMS3A                    YES, LIT EXPRESSION OK    V7A13
LMS3A    DS    0H                                                 V7A13
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A14
         BO    LMS4A                    YES, ALLOW * IN EXPRESS   V7A14
LMS4A    DS    0H                                                 V7A14
>< ADD NAME=ASMGF7I
><       CHANGE    NAME=ASMGF7I
         ST    GR1,CTXOFP(,ACT)         POSITIVE OPERAND ADDR     V7A23
><       DELETE    SEQ1=13900020,SEQ2=13900020                    V7A19
         MVC       ESDSEGR+768(208,SP2),ESDSEGR(SP2)              V7A19
>< ADD NAME=ASMGF7N
><       CHANGE    NAME=ASMGF7N
*   EQU, ORG, LTORG OR CNOP CODE (IF LABELLED AND EXTEN)          V7A31
><       DELETE    SEQ1=07940020,SEQ2=07940020                    V7A31
         BE    CCW                      BRANCH IF YES             V7A31
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A31
         BNO   RETURN                   RETURN NOW IF NOT         V7A31
         CLI   TXNAML(GRA),X'00'        IS LABEL FIELD NULL .Q    V7A31
         BE    RETURN                   BRANCH IF YES             V7A31
         CLI   TXHEX(GRA),X'1F'         CHECK FOR EQU CODE        V7A31
         BE    EQU                      BRANCH IF YES             V7A31
         CLI   TXHEX(GRA),X'20'         CHECK FOR ORG             V7A31
         BE    ORG                      BRANCH IF YES             V7A31
         CLI   TXHEX(GRA),X'22'         CHECK FOR LTORG           V7A31
         BE    ENTSIX                   BRANCH IF YES             V7A31
         CLI   TXHEX(GRA),X'29'         CHECK FOR CNOP            V7A31
         BE    CNOP                     BRANCH IF YES             V7A31
         B     RETURN                   ELSE RETURN               V7A31
*                                                                 V7A31
EQU      DS    0H                                                 V7A31
         CLI   ESDID(ACT),X'00'         ABSOLUTE EQU .Q           V7A31
         BE    RETURN                   YES, NO TESTRAN ENTRY     V7A31
         MVC   LOCCTR(4),STVALU(ACT)    VALUE OF RELOC EQU        V7A31
         B     ENTSIX                   GO SET TYPE               V7A31
><       DELETE    SEQ1=07960020,SEQ2=07960020                    V7A31
*                                                                 V7A31
ORG      DS    0H                                                 V7A31
         MVC   LOCCTR+1(3),TXLOC+5(GRB) SET PREVIOUS ADDRESS      V7A31
         B     ENTSIX                   GO SET TYPE               V7A31
*                                                                 V7A31
CNOP     DS    0H                                                 V7A31
         MVC   LOCCTR(4),STVALU(ACT)    FORMER LOC'N VALUE        V7A31
*                                                                 V7A31
ENTSIX   DS    0H                                                 V7A31
         OI    ORBYT,X'60'              SET TYPE SIX              V7A31
         B     MDSO                     MAKE THE ENTRY            V7A31
*                                                                 V7A31
CCW      DS    0H                                                 V7A31
>< ADD NAME=ASMGF7V
><       CHANGE    NAME=ASMGF7V
         N     GR1,LOW16                CLEAR TOP HALFWORD        V7A51
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BNO   DECNEX                   BRANCH IF NOT             V7A15
         LA    GR0,10                   MAX NO OF DIGITS          V7A15
         B     ABSD                     GO AND CHECK RESULT       V7A15
DECNEX   DS    0H                                                 V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BNO   BINNEX                   BRANCH IF NOT             V7A15
         LA    GR0,32                   MAX NO OF BITS            V7A15
         B     LM                       GO AND CHECK RESULT       V7A15
BINNEX   DS    0H                                                 V7A15
><       DELETE    SEQ1=06840020,SEQ2=06840020                    V7A15
         LA    GR0,4                    MAX NO OF CHARACTERS      V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BO    CHANEX                   BRANCH IF YES             V7A15
         LA    GR0,3                    MAX NO OF CHARACTERS      V7A15
CHANEX   DS    0H                                                 V7A15
         LA    GR0,8                    MAX NO OF HEX DIGITS      V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BO    LM                       BRANCH IF YES             V7A15
><       DELETE    SEQ1=16460020,SEQ2=16560020                    V7A15
SDV04    DS    0H                                                 V7A15
         CLI   SDV08+1,3                TEST FOR DECIMAL CONSTANT V7A15
         BNE   SDV05                    BRANCH IF NOT             V7A15
         SLA   VALR,0(SHFR)             OLD VALUE TIMES EIGHT     V7A15
         BO    SDVOFLO                  ERROR IF OVERFLOW         V7A15
         AR    SAVR,SAVR                TWICE OLD VALUE           V7A15
         AR    VALR,SAVR                TEN TIMES OLD VALUE       V7A15
         BO    SDVOFLO                  BRANCH IF OVERFLOW        V7A15
         AR    VALR,CHAR                PLUS NEXT DIGIT           V7A15
         BNO   SDV05A                   BRANCH IF NO OVERFLOW     V7A15
SDVOFLO  DS    0H                                                 V7A15
         LA    CNTR,10                  TOO MANY DECIMAL DIGITS   V7A15
         B     SDV05A                   AND CONTINUE              V7A15
SDV05    DS    0H                                                 V7A15
         SLL   VALR,0(SHFR)             SHIFT OLD VALUE           V7A15
         ALR   VALR,CHAR                ADD CHAR TO VALUE         V7A15
SDV05A   DS    0H                                                 V7A15
LOW16    DC    F'65535'                 LAST SIXTEEN BITS ON      V7A51
>< ADD NAME=ASMGF8A
><       CHANGE    NAME=ASMGF8A
><       DELETE    SEQ1=05830025,SEQ2=05835025
*./      DELETE    SEQ1=05830025,SEQ2=05835025
         ST    SP1,DWORD                START OF USING OPERAND    V7A29
         ST    SP1,DWORD+4              END+1 OF USING OPERAND    V7A29
         XC    DWORD,DWORD              CLEAR USING LABEL         V7A29
         L     GR1,DWORD                START OF USING LABEL      V7A29
         LTR   GR1,GR1                  IS ANYTHING THERE .Q      V7A29
         BZ    USDPPOP                  BRANCH IF NOT             V7A29
         MVI   USNGLBEL,IBLANK          BLANK TARGET LABEL        V7A29
         MVC   USNGLBEL+1(L'USNGLBEL-1),USNGLBEL  ALL OF IT       V7A29
         L     SP2,DWORD+4              END OF USING LABEL        V7A29
         SR    SP2,GR1                  LENGTH OF LABEL           V7A29
         BNP   USDPNUL                  JUST IN CASE              V7A29
><       DELETE    SEQ1=12145027,SEQ2=12145027                    V7A29
         LA    SRR,L'USNGLBEL           MAX ALLOWED               V7A29
         CR    SP2,SRR                  ARE WE LESS .Q            V7A29
         BNH   USDPLNOK                 BRANCH IF YES             V7A29
         LA    SP2,L'USNGLBEL-1         USING MAXIMUM-1 INSTEAD   V7A29
         MVI   USNGLBEL+L'USNGLBEL-1,IPRIOD  WITH DOT AT END      V7A29
USDPLNOK DS    0H                                                 V7A29
         BCTR  SP2,0                    LENGTH-1                  V7A29
         EX    SP2,USDPMVC              MOVE ARGUMENT             V7A29
USDPNUL  DS    0H                                                 V7A29
         L     GR1,CTRTBP(,ACT)         EXTERNAL TRANSLATE TABLE  V7A29
><       DELETE    SEQ1=12146027,SEQ2=12146027                    V7A29
         TR    USNGLBEL,0(GR1)          TRANSLATE LABEL TO EXT    V7A29
         B     USDPRETN                 GO TO RETURN              V7A29
USDPMVC  MVC   USNGLBEL(*-*),0(GR1)     EXECUTED MOVE LABEL       V7A29
USDPPOP  DS    0H                                                 V7A29
         MVC   USNGLBEL,USNGPOP         THIS IS A POP USING       V7A29
USDPRETN DS    0H                                                 V7A29
         LM    SP2,SP1,F8REGS           RESTORE CALLER'S REGS     V7A29
><       DELETE    SEQ1=12169027,SEQ2=12169027                    V7A35
         NI    CTUMAPI(ACT),X'FF'-X'80' TURN OFF UMAP OPTION      V7A35
><       DELETE    SEQ1=12170027,SEQ2=12170027                    V7A35
         BAL   SRR,ERRZRO               ERROR ROUTINE             V7A35
><       DELETE    SEQ1=12171027,SEQ2=12171027                    V7A35
         DC    AL2(ERRUSNG)             UMAP EXHAUSTED            V7A35
><       DELETE    SEQ1=12172027,SEQ2=12172027                    V7A35
         B     USDPRETN                 BRANCH TO RETURN          V7A35
USNGPOP  DC    CL12'*** POP ***'        LABEL OF POPPED REGISTER  V7A29
ERRUSNG  EQU   114                      NO STORAGE FOR UMAP       V7A35
><       DELETE    SEQ1=19100027,SEQ2=19100027                    V7A29
USNGLBEL DS    CL12                     LABEL OF USING LOCATION   V7A29
>< ADD NAME=ASMGF8I
><       CHANGE    NAME=ASMGF8I
         NI    2(GRC),ALL-MKI           UNSET LAST RECORD BIT     V7A30
         OI    2(GRC),MKI               SET LAST RECORD BIT       V7A30
>< ADD NAME=ASMGF8M
><       CHANGE    NAME=ASMGF8M
LTVL00   DS    0H                                                 V7A13
><       DELETE    SEQ1=16420020,SEQ2=16520020                    V7A13
         LA    SP1,1(,SP1)              BUMP OPERAND POINTER      V7A13
         CLI   0(SP1),ICOMMA            IS LITERAL DELIM COMMA .Q V7A13
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13
         CLI   0(SP1),IBLANK            IS LITERAL DELIM BLANK .Q V7A13
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A13
         BNO   DLMERR                   NO, DELIMITER ERROR       V7A13
         SR    GRD,GRD                  ZERO WORK REGISTER        V7A13
         B     LTVL00                   AND TRY AGAIN             V7A13
><       DELETE    SEQ1=16700020,SEQ2=16700020                    V7A13
         BNZ   LTVLQ5                   IF NOT ZERO, CONTINUE     V7A13
         LA    SP1,1(,SP1)              BUMP OPERAND POINTER      V7A13
         CLI   0(SP1),ICOMMA            IS LITERAL DELIM COMMA .Q V7A13
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13
         CLI   0(SP1),IBLANK            IS LITERAL DELIM BLANK .Q V7A13
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13
         B     DLMERR                   IF NOT, DELIM ERROR       V7A13
><       DELETE    SEQ1=16940023,SEQ2=16940023                    V7A11
         TM    TXLASI(GRB),X'03'        IS LITERAL IN POOL .Q     V7A11
         BNZ   LITVL11                  YES, CONTINUE             V7A11
         L     GRC,CTEXTP(,ACT)         NO, GET ADDRESS TO TEXT   V7A11
         TM    2(GRC),X'02'             IS EQUAL SIGN IND. ON .Q  V7A11
         BO    LTVLERR                  YES, ERROR FOUND EARLIER  V7A11
LITVL11  DS    0H                                                 V7A11
>< ADD NAME=ASMGF8P
><       CHANGE    NAME=ASMGF8P
><       DELETE    SEQ1=02580020,SEQ2=02580020                    V7A07
         CLI       F8PGEN(ACT),X'FF'   DO WE PRINT GEN STATEMENT  V7A07
><       DELETE    SEQ1=03240020,SEQ2=03240020                    V7A10
         STH   SP2,BLKBLK               SPACE ON AND OK           V7A10
><       DELETE    SEQ1=04500020,SEQ2=04500020                    V7A10
         LH    GRY,BLKCNT               TOTAL BLANK LINE COUNT    V7A10
><       DELETE    SEQ1=04520020,SEQ2=04520020                    V7A10
         LH    GR1,BLKBLK               FOR SUCCESSIVE 'SPACE' OP V7A10
><       DELETE    SEQ1=04560020,SEQ2=04560020                    V7A10
         STH   GRY,BLKCNT               BLANK LINE COUNTER        V7A10
><       DELETE    SEQ1=04640020,SEQ2=04640020                    V7A10
PRINT7   DS    0H                                                 V7A10
         CLC   BLKCNT,LCNT              LARGE SPACE WAITING .Q    V7A10
><       DELETE    SEQ1=04740020,SEQ2=04740020                    V7A10
         MVC   BLKCNT,HONE              SET FIRST BLANK LINE CNT  V7A10
><       DELETE    SEQ1=07600020,SEQ2=07600020                    V7A10
         LH    GRD,BLKCNT               PICK UP BLANK LINE COUNT  V7A10
><       DELETE    SEQ1=07880020,SEQ2=07880020                    V7A10
         MVC   BLKCNT,HZERO             RESET BLANK LINE COUNT    V7A10
         TM    F8WORK+3(ACT),X'80'      AN ASSEMBLER OP .Q        V7A04
         BZ    BLDNOTIT                 BRANCH IF NOT             V7A04
         CLI   F8WORK+4(ACT),TITLEX     A GENERATED TITLE .Q      V7A04
         BE    BLDTITLE                 YES, NO CONTINUATIONS     V7A04
BLDNOTIT DS    0H                                                 V7A04
         CLI   0(GRC),IBLANK            BLANK OPERAND .Q          V7A09
         BNE   BLDXX01                  BRANCH IF NOT             V7A09
         C     GRB,F1                   AND THAT IS ALL .Q        V7A09
         BNE   BLDXX01                  BRANCH IF NOT             V7A09
         LA    GRC,1(,GRC)              BUMP START ADDRESS        V7A09
         SR    GRB,GRB                  ZERO STRING LENGTH        V7A09
BLDXX01  DS    0H                                                 V7A09
BLDTITLE DS    0H                                                 V7A04
HONE     EQU   F1+2                     HALFWORD CONSTANT ONE     V7A10
BLKCNT   DC    H'0'                     BLANK LINE COUNT          V7A10
><       DELETE    SEQ1=14820026,SEQ2=14820026                    V7A10
BLKBLK   DC    H'0'                     NUM SPACES IN SPACE STMT  V7A10
><       DELETE    SEQ1=14920020,SEQ2=14940020                    V7A10
*./      DELETE    SEQ1=14920020,SEQ2=14940020                    V7A10
>< ADD NAME=ASMGF8V
><       CHANGE    NAME=ASMGF8V
         N     GR1,LOW16                CLEAR TOP HALFWORD        V7A51
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BNO   DECNEX                   BRANCH IF NOT             V7A15
         LA    GR0,10                   MAX NO OF DIGITS          V7A15
         B     ABSD                     GO AND CHECK RESULT       V7A15
DECNEX   DS    0H                                                 V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BNO   BINNEX                   BRANCH IF NOT             V7A15
         LA    GR0,32                   MAX NO OF BITS            V7A15
         B     LM                       GO AND CHECK RESULT       V7A15
BINNEX   DS    0H                                                 V7A15
><       DELETE    SEQ1=06960020,SEQ2=06960020                    V7A15
         LA    GR0,4                    MAX NO OF CHARACTERS      V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BO    CHANEX                   BRANCH IF YES             V7A15
         LA    GR0,3                    MAX NO OF CHARACTERS      V7A15
CHANEX   DS    0H                                                 V7A15
         LA    GR0,8                    MAX NO OF HEX DIGITS      V7A15
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15
         BO    LM                       BRANCH IF YES             V7A15
><       DELETE    SEQ1=16440020,SEQ2=16540020                    V7A15
SDV04    DS    0H                                                 V7A15
         CLI   SDV08+1,3                TEST FOR DECIMAL CONSTANT V7A15
         BNE   SDV05                    BRANCH IF NOT             V7A15
         SLA   VALR,0(SHFR)             OLD VALUE TIMES EIGHT     V7A15
         BO    SDVOFLO                  ERROR IF OVERFLOW         V7A15
         AR    SAVR,SAVR                TWICE OLD VALUE           V7A15
         AR    VALR,SAVR                TEN TIMES OLD VALUE       V7A15
         BO    SDVOFLO                  BRANCH IF OVERFLOW        V7A15
         AR    VALR,CHAR                PLUS NEXT DIGIT           V7A15
         BNO   SDV05A                   BRANCH IF NO OVERFLOW     V7A15
SDVOFLO  DS    0H                                                 V7A15
         LA    CNTR,10                  TOO MANY DECIMAL DIGITS   V7A15
         B     SDV05A                   AND CONTINUE              V7A15
SDV05    DS    0H                                                 V7A15
         SLL   VALR,0(SHFR)             SHIFT OLD VALUE           V7A15
         ALR   VALR,CHAR                ADD CHAR TO VALUE         V7A15
SDV05A   DS    0H                                                 V7A15
LOW16    DC    F'65535'                 LAST SIXTEEN BITS ON      V7A51
>< ADD NAME=ASMGUP
><       CHANGE    NAME=ASMGUP
><       DELETE SEQ1=01230026,SEQ2=01240025                       V7A42
         LA        RC,4095(RB)         RECOVER 2ND BASE REG       V7A48
         LA        RC,1(,RC)           FOR OPEN EXIT IN ASMGF1    V7A48
         AP        DSSNEW1,DSSINCR     GET NEXT AUTONUMBER        V7A20
         BZ        DSSERROR            NOT IN EFFECT, BLANK BAD   V7A20
         UNPK      UTUPSEQ(8),DSSNEW1(5)  INTO THE CARD           V7A20
         OI        UTUPSEQ+7,X'F0'     FIX LAST COLUMN UP         V7A20
         B         UPDATA              AND GIVE THE CARD TO ASMG  V7A20
DSSERROR DS        0H                  AUTO-NUMBER DEAD, BAD CARD V7A20
         UPEMSG    321                 ERROR MESSAGE              V7A48
         MVC       9(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME      V7A48
><       DELETE SEQ1=02860026,SEQ2=02920025                       V7A48
><       DELETE SEQ1=03300025,SEQ2=03300025                       V7A48
         UPEMSG    323                 COMMENT TEXT               V7A48
><       DELETE SEQ1=03480025,SEQ2=03480025                       V7A48
         UPEMSG    324                 MESSAGE TEXT               V7A48
><       DELETE SEQ1=03580025,SEQ2=03580025                       V7A48
         UPEMSG    325                 MESSAGE TEXT               V7A48
         SP        DSSNEW1,DSSNEW1     CLEAR NEW1                 V7A20
         MVC       DSSINCR,DSSNEW1     AND CLEAR INCR             V7A20
         CLC       =C'DELET ',0(R8)    IEBUPDAT/HASPGEN DELETE .Q V7A22
         BE        UPCCH               YES, ENTER DELETE CODE     V7A22
         CLC       =C'CHNGE ',0(R8)    IEBUPDAT 'CHNGE' CARD?     V7A42
         BE        UPCOM               YES, NOT SUPPORTED         V7A42
><       DELETE    SEQ1=04180025,SEQ2=04180025                    V7A20
         BE        DSSNUM              YES, TRY TO AUTONUMBER     V7A20
         CLI       0(R8),C'*'          A (G) EXTENDED COMMENT .Q  V7A21
         BNE       UPBADCOM            BRANCH IF NOT              V7A21
         UPEMSG    343                 MESSAGE ADDRESS            V7A48
         LA        R4,UTUPREC          COMMENT RECORD ON SYSUP    V7A48
         BAL       RE,ERROR            GO PRINT THE RECORD        V7A21
         B         UPCONT              CHECK FOR CONTINUATIONS    V7A21
><       DELETE SEQ1=04360025,SEQ2=04360025                       V7A48
         UPEMSG    337                 ERROR MESSAGE              V7A48
><       DELETE SEQ1=04560025,SEQ2=04560025                       V7A48
         UPEMSG    336                 ERROR MESSAGE              V7A48
><       DELETE SEQ1=04800025,SEQ2=04800025                       V7A48
         UPEMSG    338                 ERROR MESSAGE              V7A48
><       DELETE  SEQ1=04940026,SEQ2=04940026                      V7A42
         LA        R4,UTUPREC+70       LAST POSSIBLE PARM ADDR    V7A42
         UPEMSG    339                 ERROR COMMENT              V7A48
         MVC       20(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME     V7A48
><       DELETE SEQ1=05100026,SEQ2=05120025                       V7A48
         UPEMSG    340                 ERROR MESSAGE              V7A48
         MVC       15(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME     V7A48
><       DELETE SEQ1=05300026,SEQ2=05320025                       V7A48
UPCCH    DS        0H                                             V7A22
         BCTR      R8,0                BACKUP FOR 'DELET'         V7A22
><       DELETE    SEQ1=05660026,SEQ2=05660026                    V7A22
         BNE       UPDELEX             TRY POSITIONALS IF NOT     V7A22
UPDELEX  DS        0H                                             V7A22
         LA        R1,UPDELS1          SET SEQ1 POSITIONAL 1      V7A22
         CLI       0(R1),X'FF'         HAVE WE GOTTEN SEQ1 .Q     V7A22
         BE        UPDELGO             NO, GO SCAN SEQ1 POSNL     V7A22
         LA        R1,UPDELS2          SET FOR SEQ2 POSITIONAL    V7A22
         CLI       0(R1),X'FF'         SCANNED SEQ2 .Q            V7A22
         BNE       UPDELER             YES, ERROR                 V7A22
UPDELGO  DS        0H                                             V7A22
         BAL       RE,DEPOINTX         GO SCAN OFF POSITIONAL SEQ V7A22
         B         DELOOP              LOOP NEXT SEQ NUMBER       V7A22
><       DELETE SEQ1=05740025,SEQ2=05740025                       V7A48
         UPEMSG    334                 ERROR MESSAGE              V7A48
><       DELETE    SEQ1=05890026,SEQ2=05890026                    V7A22
         BNE       DEDONE1             BRANCH IF YES              V7A22
         MVC       UPDELS2(8),UPDELS1  SET SEQ2=SEQ1              V7A22
DEDONE1  DS        0H                                             V7A22
><       DELETE SEQ1=05980025,SEQ2=05980025                       V7A48
         UPEMSG    335                 ERROR MESSAGE              V7A48
         LA        R8,5(,R8)           POINT PAST 'SEQN='         V7A22
DEPOINTX DS        0H                                             V7A22
><       DELETE    SEQ1=06047026,SEQ2=06047026                    V7A22
*./      DELETE    SEQ1=06047026,SEQ2=06047026                    V7A22
><       DELETE SEQ1=06300025,SEQ2=06300025                       V7A48
         UPEMSG    326                 MESSAGE TEST               V7A48
><       DELETE SEQ1=06580025,SEQ2=06580025                       V7A48
         UPEMSG    327                 ERROR MESSAGE              V7A48
UPDELRER DS        0H
         UPEMSG    328                 ERROR MESSAGE              V7A48
         MVC       3(8,R3),UPDEL01     SEQ1                       V7A48
         MVC       15(8,R3),UPDEL02    SEQ2                       V7A48
><       DELETE SEQ1=06820025,SEQ2=06900025                       V7A48
         UPEMSG    329                 MESSAGE TEXT               V7A48
><       DELETE SEQ1=07040025,SEQ2=07040025                       V7A48
         MVC       8(6,R3),=X'402020202120'  EDIT MASK            V7A48
><       DELETE SEQ1=07080025,SEQ2=07100025                       V7A48
         ED        8(6,R3),ERCVD+5  EDIT IN NUMBER                V7A48
         MVI       21(R3),C'S'         ASSUME PLURAL              V7A48
><       DELETE SEQ1=07140025,SEQ2=07200025                       V7A48
         MVI       21(R3),C' '         THERE'S ONLY ONE           V7A48
*                                                                 V7A20
*        SET UP FOR AUTOMATIC NUMBERING ON SYSUP                  V7A20
*                                                                 V7A20
DSSNUM   DS        0H                                             V7A20
         LA        R5,UPCOM            ERROR IF BUMP OVERFLOWS    V7A20
         LA        R8,6(,R8)           GET PAST 'NUMBER'          V7A20
DSSNUM1  DS        0H                                             V7A20
         BAL       RE,UPBUMP           SCAN FOR PARAMETER         V7A20
         CLI       0(R8),C' '          PARM PRESENT .Q            V7A20
         BE        DSSNUM1             NO, KEEP TRYING            V7A20
         MVI       DSS1,X'FF'          1ST ARG NOT INITIALIZED    V7A20
         MVI       DSS2,X'FF'          AND THE 2ND IS THE SAME    V7A20
         OI        ERSW,ERSWNUM        NUMERIC REQUIRED           V7A20
DSSLOOP  DS        0H                                             V7A20
         CLI       0(R8),C' '          END OF THE LINE .Q         V7A20
         BE        DSSDONE             CHECK FOR COMPLETENESS     V7A20
         CLC       =C'NEW1=',0(R8)     FIRST KEYWORD .Q           V7A20
         BNE       DSSTRY2             NO, CHECK THE OTHER        V7A20
         LA        R1,DSS1             1ST ARG TARGET             V7A20
         BAL       RE,DEPOINT          GO ENTER IT                V7A20
         B         DSSLOOP             KEEP GOING                 V7A20
DSSTRY2  DS        0H                                             V7A20
         CLC       =C'INCR=',0(R8)     2ND KEYWORD .Q             V7A20
         BCR       7,R5                NUMBER UNSUPPORTED ANYWAY  V7A20
         LA        R1,DSS2             SECOND TARGET              V7A20
         BAL       RE,DEPOINT          GO ENTER IT                V7A20
         B         DSSLOOP             CONTINUE LOOKING           V7A20
DSSDONE  DS        0H                  CHECK FOR ALL OK           V7A20
         CLI       DSS1,X'FF'          ARG1 OK .Q                 V7A20
         BCR       8,R5                NO, ERROR HIM              V7A20
         CLI       DSS2,X'FF'          AND ARG2 .Q                V7A20
         BCR       8,R5                BOTH ARE REQUIRED          V7A20
         PACK      DSSNEW1(5),DSS1(8)  INTO THE FIELD             V7A20
         PACK      DSSINCR(5),DSS2(8)  AS PACKED DECIMAL          V7A20
         SP        DSSNEW1(5),DSSINCR(5)  PREPARE FOR FIRST TIME  V7A20
         UPEMSG    342                 MESSAGE TEXT               V7A48
         MVC       3(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME      V7A48
         LA        R4,UTUPREC          SYSUP RECORD               V7A20
         BAL       RE,ERROR            PRINT IT OUT               V7A20
         B         UPCONT              CHECK FOR CONTINUATION     V7A20
         L         RF,L1DBLK+4(,R9)                               V7A42
         LTR       RF,RF                                          V7A42
         BNZ       RDINWYL                                        V7A42
RDINWYL  DS        0H                                             V7A42
><       DELETE SEQ1=07750026,SEQ2=07750026                       V7A42
         MVC       UTINREC,0(R1)       MOVE THE RECORD            V7A42
         UPEMSG    320                 MESSAGE TEXT               V7A48
         MVC       9(8,R3),L1DDNAM+2*L1SIN(R9)  SYSIN DDNAME      V7A48
><       DELETE SEQ1=07800026,SEQ2=07860025                       V7A48
         UPEMSG    332                 MESSAGE TEXT               V7A48
         MVC       3(8,R3),L1DDNAM+2*L1SIN(R9)  SYSIN DDNAME      V7A48
><       DELETE SEQ1=08020026,SEQ2=08080025                       V7A48
><       DELETE  SEQ1=08280026,SEQ2=08290026                      V7A42
         LM        RE,RC,12(RD)        RESTORE REGISTERS          V7A42
><       DELETE  SEQ1=08420026,SEQ2=08420026                      V7A42
         MVC       UTINREC,UTLASTR     SYSIN BECOMES INFINITE     V7A42
><       DELETE SEQ1=09040027,SEQ2=09040027                       V7A48
         UPEMSG    341                 MESSAGE TEXT               V7A48
><       DELETE  SEQ1=09280026,SEQ2=09290026                      V7A42
         LM        RE,RC,12(RD)        RESTORE CALLER'S REGS      V7A42
><       DELETE  SEQ1=09660026,SEQ2=09660026                      V7A42
         L         RF,L1DBLK+4(,R9)    POINT AT 'GET' ROUTINE     V7A42
         LTR       RF,RF               IS IT PREVENT .Q           V7A42
         BNZ       RDUPWYL             BRANCH IF YES              V7A42
         L         RF,DCBGET(R1)       REAL ACCESS METHOD ADDR    V7A42
RDUPWYL  DS        0H                                             V7A42
         BALR      RE,RF               DO THE GET                 V7A42
><       DELETE  SEQ1=09720025,SEQ2=09720025                      V7A42
         MVC       UTUPREC,0(R1)       MOVE THE RECORD            V7A42
><       DELETE SEQ1=09800025,SEQ2=09810026                       V7A42
         LM        RE,RC,12(RD)        RESTORE REGISTERS          V7A42
><       DELETE SEQ1=09920025,SEQ2=09920025                       V7A42
         MVC       UTUPREC,UTLASTR     DUMMY EOF SYSUP RECORD     V7A42
><       DELETE SEQ1=10940025,SEQ2=10940025                       V7A48
         UPEMSG    330                 ERROR MESSAGE              V7A48
><       DELETE SEQ1=14100026,SEQ2=14120025                       V7A48
         UPEMSG    331                 ERROR MESSAGE              V7A48
         MVC       3(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME      V7A48
><       DELETE SEQ1=15460026,SEQ2=15470026                       V7A42
><       DELETE SEQ1=15540025,SEQ2=15560025                       V7A42
><       DELETE SEQ1=15640025,SEQ2=15640025                       V7A42
*                                                                 V7A20
DSS1     DS        CL8                 NEW1 CHAR WORK AREA        V7A20
DSS2     DS        CL8                 INCR CHAR WORK AREA        V7A20
DSSNEW1  DC        PL5'0'              NEW1 PACKED VALUE          V7A20
DSSINCR  DC        PL5'0'              INCR PACKED VALUE          V7A20
         SPACE     1                                              V7A48
         LTORG     ,                                              V7A48
UPERROR  DS        0F                                             V7A48
><       DELETE    SEQ1=16160025,SEQ2=16160025                    V7A37
         UPEMSG    335,16,'SEQ1 IS GREATER THAN SEQ2'             V7A37
         UPEMSG    342,00,'SYSUPXXX NUMBERING RECORD'             V7A20
         UPEMSG    343,04,'COMMENT CONTROL CARD'                  V7A21
>< ADD NAME=ASMGWYL
><       CHANGE    NAME=ASMGWYL
><       DELETE    SEQ1=00020022,SEQ2=00020022                    V7A42
AWYL     TITLE     'ASMG     MASTER ROOT SEGMENT/WYLBUR FORMAT'   V7A42
         NI        DCBRECFM(R1),X'EF'  TURN OFF BLOCKED BIT       V7A42
><       DELETE    SEQ1=02560225,SEQ2=02560225                    V7A42
         TM        DCBRECFM(R1),X'C0'  RECFM=U .Q                 V7A42
         BO        EXIT2               IF SO, FORCE NEW BUFFERS   V7A42
><       DELETE    SEQ1=03020026,SEQ2=03040026                    V7A42
         MVC       0(80,R14),SYSINBUF  GIVE USER LAST RECORD      V7A42
><       DELETE    SEQ1=03110027,SEQ2=03190027                    V7A42
         L         R15,DCBGETSV        POINT AT SYSUP, MAYBE      V7A42
         TM        PARBYT2,X'40'       UPDATE IN EFFECT .Q        V7A42
         BNZ       SYSINEG             BRANCH IF SO               V7A42
         LA        R15,EDITGET         IF NOT, DO EDIT GET        V7A42
SYSINEG  BALR      R14,R15             GO DO THE "GET"            V7A42
><       DELETE    SEQ1=03300026,SEQ2=03300026                    V7A42
         CLC       $JOB,SYSINBUF       TEST FOR A $JOB CARD       V7A42
         LA        R1,SYSINBUF         NEGATE THE MVC FOLLOWING   V7A42
><       DELETE    SEQ1=03440026,SEQ2=03440026                    V7A42
         MVC       SYSINBUF,0(R1)      SAVE THE RECORD            V7A42
         LA        R1,SYSINBUF         POINT AT IT                V7A42
><       DELETE    SEQ1=03600026,SEQ2=03600026                    V7A42
SYSINBUF DS        CL80                INPUT BUFFER               V7A42
         LA        R4,1(,R4)           INCREMENT LINE COUNT       V7A50
><       DELETE    SEQ1=03649426,SEQ2=03649826                    V7A50
         LH        R6,DCBLRECL(,R3)    GET LRECL OF FILE          V7A50
         BCTR      R6,0                DECREMENT BY ONE           V7A50
         CLC       DCBGET+1(3,R3),PUTOURTN+1  NEW ACCESS ADDR .Q  V7A50
         BCR       8,R10               RETURN IF NOT              V7A50
         MVC       L1DCBPAD+1(3,R3),DCBGET+1(R3)  SAVE THE NEW    V7A50
         MVC       DCBGET+1(3,R3),PUTOURTN+1  RESET THE DUMMY     V7A50
PUTOURTN DC        A(LIST1+L1OUTRTN)   DUMMY OUTPUT ADDRESS       V7A50
><       DELETE    SEQ1=04140022,SEQ2=04140022                    V7A47
WTONOP   MVI       AB3+1,X'00'         NOP SW TO TYPE AND PRINT   V7A47
><       DELETE    SEQ1=04280022,SEQ2=04280022                    V7A47
         B         SYSPRPU             ONE MORE CHECK             V7A47
SYSPRPU  DS        0H                                             V7A47
         TM        PARBYT3,X'40'       UNDER CMS .Q               V7A47
         BNO       BACK1               BRANCH TO RETURN IF NOT    V7A47
         MVI       WTONOP+1,X'F0'      NOP THE NOP TO WTO ONLY    V7A47
         B         SYNADQ              AND JOIN SYNAD             V7A47
         CLOSE     SYSLIB              IN CASE WE'RE IN MACRO     V7A42
><       DELETE    SEQ1=06276026,SEQ2=06276026                    V7A43
*                                 6    STMT         7    SEQ      V7A43
><       DELETE    SEQ1=06288026,SEQ2=06292026                    V7A44
*                                 0    UMAP         1    CMS      V7A44
*                                 2    XREF(SHORT)  3    PRINTER  V7A44
*                                 4    YFLAG        5    RESERVED V7A44
><       DELETE    SEQ1=07704027,SEQ2=07704027                    V7A01
RELSDATE DC        C'21MAR76'          ASSEMBLER RELEASE DATE     V7A01
><       DELETE    SEQ1=07714427,SEQ2=07714427                    V7A01
         DC        CL10'ASMG76MAR'     PROGRAM IDENTIFICATION     V7A01
*                                                                 V7A42
* LIST1+L1DBLK                                                    V7A42
ADEBLOCK DC        A(DEBLOCK,EDITGET)  ADDRESS OF DEBLOCK SUBRS   V7A42
><       DELETE    SEQ1=07737027,SEQ2=07737027                    V7A47
         DC        19S(*)              PATCH FOR ASMGASM/ASMGBUFF V7A47
><       DELETE    SEQ1=08780026,SEQ2=08800025                    V7A42
SYSIN    DCB       DDNAME=SYSIN,MACRF=GL,DSORG=PS,SYNAD=IOERR,    V7A42*
               EXLST=EXITLIST      NEW SYSIN DCB                  V7A42
><       DELETE    SEQ1=08909025,SEQ2=08910025                    V7A42
SYSUP    DCB       DDNAME=SYSUP,MACRF=GL,DSORG=PS,                V7A42*
               SYNAD=IOERR,EXLST=EXITLIST                         V7A42
><       DELETE    SEQ1=08960022,SEQ2=08960022                    V7A42
         TITLE     'SUBROUTINE TO DEBLOCK EDIT-FORMAT RECORDS'    V7A42
*        SUBROUTINE DEBLOCK IS CALLED TO DEBLOCK A SINGLE RECORD  V7A42
*        FROM WYLBUR EDIT-FORMAT TO CARD FORMAT. AT ENTRY, IT     V7A42
*        EXPECTS THE FOLLOWING CONDITIONS:                        V7A42
*                                                                 V7A42
*        R0        ADDRESS OF AN 8-BYTE DDNAME FOR A POSSIBLE     V7A42
*                  ERROR MESSAGE.                                 V7A42
*        R1        ADDRESS OF THE INPUT RECORD TO BE DEBLOCKED    V7A42
*        R2        ADDRESS OF THE 80-CHARACTER OUTPUT BUFFER      V7A42
*        R13       ADDRESS OF A STANDARD OS SAVE AREA             V7A42
*        R14       RETURN ADDRESS                                 V7A42
*        R15       ADDRESS OF SUBROUTINE DEBLOCK                  V7A42
*                                                                 V7A42
*        AN EDIT-FORMAT RECORD CONSISTS OF A FOUR-BYTE BINARY     V7A42
*        LINE NUMBER, A ONE-BYTE COUNT, AND ZERO OR MORE BYTES    V7A42
*        OF DATA. THE COUNT GIVES THE TRUE LENGTH OF THE DATA     V7A42
*        AND DOES NOT INCLUDE EITHER ITSELF OR THE LINE NUMBER.   V7A42
*        THE DATA CONSIST OF ZERO OR MORE "FIELDS", EACH OF WHICH V7A42
*        STARTS WITH A CONTROL BYTE. THE FIRST FOUR BITS OF THE   V7A42
*        CONTROL BYTE TELL HOW MANY BLANKS ARE TO REPLACE THE     V7A42
*        CONTROL BYTE; THE LAST FOUR GIVE THE LENGTH OF THE       V7A42
*        DATA FOLLOWING. EITHER HALF OF THE CONTROL BYTE MAY      V7A42
*        BE ZERO.                                                 V7A42
*                                                                 V7A42
*        DEBLOCK PLACES THE DECOMPRESSED DATA IN THE OUTPUT       V7A42
*        BUFFER AND RETURNS VIA REGISTER 14, UNLESS THE INPUT     V7A42
*        DATA ARE INVALID IN SOME SENSE. IN THIS CASE, EXIT       V7A42
*        IS TO THE 'ABEND' ROUTINE TO PRINT AN ERROR MESSAGE      V7A42
*        AND TERMINATE. THE DDNAME ADDRESS PASSED IN REGISTER 0   V7A42
*        IS USED ONLY IN BUILDING THE ERROR MESSAGE.              V7A42
*        ON NORMAL RETURN, R1 WILL BE SET TO POINT TO THE         V7A42
*        ADDRESS OF THE NEXT RECORD IN SEQUENCE.                  V7A42
*                                                                 V7A42
*        REGISTER USAGE WITHIN THIS ROUTINE:                      V7A42
*                                                                 V7A42
*        R0        DDNAME ADDRESS FOR ERROR MESSAGE               V7A42
*        R1        POINTER TO NEXT INPUT CHARACTER                V7A42
*        R2        POINTER TO NEXT OUTPUT CHARACTER               V7A42
*        R3        WORK REGISTER                                  V7A42
*        R4        LENGTH OF CURRENT FIELD                        V7A42
*        R5        END OF INPUT RECORD, USED WITH R4 FOR BXLE     V7A42
*        R6        WORK REGISTER, USED IN OVERFLOW CHECK          V7A42
*        R7        CONSTANT X'0000000F', USED AS A MASK           V7A42
*        R8        WORK REGISTER, USED IN OVERFLOW CHECK          V7A42
*        R9        POINTER AFTER LAST OUTPUT CHARACTER            V7A42
*        R10       CONSTANT 1, USED VARIOUS PLACES                V7A42
*        R15       BASE REGISTER                                  V7A42
         EJECT     ,                                              V7A42
         USING     *,R15               INDICATE BASE              V7A42
DEBLOCK  STM       R2,R10,28(R13)      SAVE REGS WE USE           V7A42
         SH        R15,=Y(DEBLOCK-ASMGASM) NORMALIZE BASE REG     V7A42
         USING     ASMGASM,R15         TELL ASSEMBLER ABOUT IT    V7A42
         LH        R7,=H'15'           INITIALIZE R7              V7A42
         LH        R10,=H'1'           INITIALIZE R1              V7A42
         LA        R9,80(,R2)          POINT TO OUTPUT END + 1    V7A42
         LR        R5,R10              CLEAR LEFT 3 BYTES OF R5   V7A42
         IC        R5,4(,R1)           PICK UP THE RECORD LENGTH  V7A42
         MVC       DBLINE#,0(R1)       SAVE THE LINE NUMBER       V7A42
         LA        R1,5(,R1)           POINT AT FIRST CTRL BYTE   V7A42
         AR        R5,R1               LAST INPUT CHAR + 1        V7A42
         SR        R5,R10              BACK OFF FOR LAST CHAR     V7A42
         MVC       0(80,R2),BLANKS+1   BLANK THE OUTPUT BUFFER    V7A42
         CR        R1,R5               ARE WE ALREADY FINISHED .Q V7A42
         BH        DBEXIT              MAYBE JUMP OVER THE LOOP   V7A42
*                                                                 V7A42
DBLOOP   LR        R3,R10              CLEAR LEFT 3 BYTES OF R3   V7A42
         IC        R3,0(,R1)           GET CONTROL BYTE           V7A42
         LR        R4,R7               GET MASK X'000F'           V7A42
         NR        R4,R3               R4 IS NOW FIELD LENGTH     V7A42
         SRL       R3,4                R3 IS NOW BLANK COUNT      V7A42
         AR        R2,R3               BUMP OUTPUT PTR OVER BLKS  V7A42
         LCR       R3,R10              GET -1 INTO R3             V7A42
         AR        R3,R4               GET LENGTH - 1 IN R3       V7A42
         LR        R8,R4               COPY LENGTH INTO BXLE REG  V7A42
         LR        R6,R2               COPY OUTPUT ADDRESS        V7A42
         BXH       R6,R8,DBERR1        STEP R6, CHECK OVERFLOW    V7A42
         BM        DBOVER              SKIP MOVE IF LENGTH IS 0   V7A42
         EX        R3,DBMOVE           MOVE DATA TO OUTPUT BUFFER V7A42
DBOVER   LR        R2,R6               GET UPDATED OUTPUT POINTER V7A42
         AR        R4,R10              INCREMENT LENGTH BY 1      V7A42
         BXLE      R1,R4,DBLOOP        ADD LEN+1 TO INPUT PTR     V7A42
*                                                                 V7A42
DBEXIT   AR        R5,R10              RESTORE TRUE END PTR       V7A42
         CR        R1,R5               HIT THE END EXACTLY .Q     V7A42
         BNE       DBERR1              IF NOT, BAD RECORD         V7A42
*                                                                 V7A42
*        WE MAY HAVE TO CONVERT THE LINE NUMBER                   V7A42
*                                                                 V7A42
         L         R2,28(,R13)         RESTORE R2 VALUE           V7A42
         CLC       BLANKS+1(8),72(R2)  COLUMNS 73/80 BLANK .Q     V7A42
         BNE       DBNOCONV            IF NOT, NO CONVERSION      V7A42
         TM        PARBYT2,X'01'       WAS SEQUENCE SPECIFIED .Q  V7A42
         BZ        DBNOCONV            IF NOT, DON'T CONVERT      V7A42
         L         R3,DBLINE#          NOW GET THE LINE NUMBER    V7A42
         CVD       R3,DBWORK           CONVERT IT TO DECIMAL      V7A42
         UNPK      72(8,R2),DBWORK     AND THENCE TO EBCDIC       V7A42
         OI        79(R2),C'0'         GET THAT LAST DIGIT RIGHT  V7A42
*                                                                 V7A42
*        RETURN TO CALLING PROGRAM                                V7A42
*                                                                 V7A42
DBNOCONV LM        R2,R10,28(R13)      RESTORE REGS EXCEPT R1     V7A42
         BR        R14                 RETURN TO CALLING PROGRAM  V7A42
*                                                                 V7A42
*        ERROR MESSAGE ROUTINE                                    V7A42
*                                                                 V7A42
DBERR1   LR        R1,R0               MAKE DDNAME ADDRESSABLE    V7A42
         MVC       DBMSG1A,0(R1)       MOVE DDNAME INTO MESSAGE   V7A42
         LR        R12,R15             GET STANDARD BASE REG      V7A42
         BAL       R0,ABEND            GO PRINT MESSAGE AND STOP  V7A42
         DC        C'501A'             MESSAGE CODE               V7A42
         DC        AL1(DBMSG1E-*-2)    LENGTH OF MESSAGE          V7A42
         DC        C'EDIT-FORMAT RECORD INVALID OR > 80 CHARS, '  V7A42
         DC        C'DDNAME = '        MESSAGE TEXT               V7A42
DBMSG1A  DC        CL8'XXXXXXXX'       SPACE FOR DD NAME          V7A42
DBMSG1E  EQU       *                   END OF MESSAGE             V7A42
*                                                                 V7A42
DBMOVE   MVC       0(*-*,R2),1(R1)     EXECUTED INSTRUCTION       V7A42
*                                                                 V7A42
DBWORK   DS        D                   WORK AREA                  V7A42
DBLINE#  DS        F                   HOLDS THE LINE NUMBER      V7A42
         EJECT     ,                                              V7A42
*                  THIS SUBROUTINE IS USED TO PERFORM A "GET"     V7A42
*        LOCATE-MODE OPERATION ON A DCB THAT COULD POSSIBLY BE    V7A42
*        EDIT-FORMAT. IN THE CASE OF ERROR MESSAGES, THE ROUTINE  V7A42
*        ASSUMES THAT THE ONLY POSSIBLE DCB'S ARE SYSIN AND       V7A42
*        SYSUP. THE CALLING SEQUENCE IS EXACTLY THE SAME AS THAT  V7A42
*        FOR A NORMAL 'GET'.                                      V7A42
         SPACE     ,                                              V7A42
         USING     *,R15               TEMPORARY BASE REG         V7A42
EDITGET  STM       R1,R4,EGSAVE        SAVE SOME REGISTERS        V7A42
         ST        R14,EGSAVE14        STORE RETURN ADDRESS ALSO  V7A42
         LR        R3,R15              SET UP PERMANENT BASE      V7A42
         SH        R3,=Y(EDITGET-ASMGASM) NORMALIZE BASING        V7A42
         USING     ASMGASM,R3          DEFINE IT                  V7A42
         DROP      R15,R12             GET RID OF TEMPORARY BASE  V7A42
         LA        R4,EGSYSIN          POINT AT SYSIN TABLE       V7A42
         C         R1,LIST1+L1SUP      IS IT SYSUP .Q             V7A42
         BNE       EG1                 BRANCH IF IT IS NOT        V7A42
         LA        R4,EGSYSUP          IF SO, POINT AT SYSUP TAB  V7A42
         SPACE     ,                                              V7A42
*                  SAVE THE EODAD EXIT, INSERT OURS               V7A42
         SPACE     ,                                              V7A42
EG1      MVC       EGEODAD,DCBEODAD+1(R1)  SAVE EODAD             V7A42
         MVC       DCBEODAD+1(3,R1),=AL3(EGEOF)  PLUG EODAD       V7A42
         SPACE     ,                                              V7A42
*                  TEST RECFM                                     V7A42
         SPACE     ,                                              V7A42
EGRECFM  NI        SYSINSW,X'FE'       RESET SYSIN SWITCH         V7A42
         L         R1,EGSAVE           RESTORE DCB ADDRESS        V7A42
         L         R15,EGGADR(,R4)     GET GET ROUTINE POINTER    V7A42
         L         R15,0(,R15)         GET GET ROUTINE ADDR       V7A42
         TM        DCBRECFM(R1),X'80'  IS IT RECFM=V .Q           V7A42
         BNZ       EG2                 IF NOT, BRANCH             V7A42
         SPACE     ,                                              V7A42
*                  RECFM=V. ISSUE AN ERROR MESSAGE                V7A42
         SPACE     ,                                              V7A42
         L         R1,EGDDNAM(,R4)     POINT AT DDNAME            V7A42
         MVC       EGDD,0(R1)          MOVE IT INTO THE MESSAGE   V7A42
         LR        R12,R3              SET UP ABEND ROUTINE BASE  V7A42
         BAL       R0,ABEND            GO TERMINATE               V7A42
         DC        C'502A',AL1(EGEMSG-*-2)  LENGTH, ETC.          V7A42
         DC        C'V-FORMAT INPUT, DDNAME = '                   V7A42
EGDD     DC        CL8'XXXXXXXX'       SPACE FOR DDNAME           V7A42
EGEMSG   EQU       *                   END OF MESSAGE             V7A42
         SPACE     ,                                              V7A42
EG2      TM        DCBRECFM(R1),X'40'  IS IT RECFM=F .Q           V7A42
         BNZ       EG3                 IF NOT, BRANCH             V7A42
         SPACE     ,                                              V7A42
*                  HERE FOR RECFM=F                               V7A42
         SPACE     ,                                              V7A42
         BALR      R14,R15             DO THE GET                 V7A42
         BAL       R14,EGCONCAT        TEST CONCATENATION         V7A42
         MVC       EGBUFFER,0(R1)      MOVE THE DATA              V7A42
         B         EGEXIT              AND GO RETURN              V7A42
         SPACE     ,                                              V7A42
*                  HERE FOR RECFM=U                               V7A42
         SPACE     ,                                              V7A42
EG3      L         R2,EGRECAD(,R4)     POINT TO LOGICAL RECORD    V7A42
         C         R2,EGEOBAD(,R4)     COMPARE TO END OF BLOCK    V7A42
         BL        EG4                 IF LOW, NO INPUT NEEDED    V7A42
         BALR      R14,R15             DO THE GET                 V7A42
         BAL       R14,EGCONCAT        TEST CONCATENATION         V7A42
         LA        R2,2(,R1)           GET START OF BLOCK PTR     V7A42
         ST        R2,EGRECAD(,R4)     STORE IT IN BLOCK          V7A42
         AH        R1,0(,R1)           GET END OF BLOCK POINTER   V7A42
         ST        R1,EGEOBAD(,R4)     STORE IT                   V7A42
EG4      LR        R1,R2               POINT AT INPUT RECORD      V7A42
         LA        R2,EGBUFFER         POINT AT OUTPUT AREA       V7A42
         LA        R15,DEBLOCK         POINT AT DEBLOCKER         V7A42
         L         R0,EGDDNAM(,R4)     POINT TO DDNAME            V7A42
         BALR      R14,R15             OFF TO DEBLOCKER           V7A42
         ST        R1,EGRECAD(,R4)     SAVE UPDATED RECORDADDR    V7A42
         SPACE     ,                                              V7A42
*                  RETURN TO CALLING PROGRAM                      V7A42
EGEXIT   L         R2,EGSAVE           RESTORE DCB POINTER        V7A42
         MVC       DCBEODAD+1(3,R2),EGEODAD  RESTORE EODAD        V7A42
         LA        R1,EGBUFFER         POINT TO THE RECORD        V7A42
         L         R14,EGSAVE14        RESTORE REGISTER 14        V7A42
         LM        R2,R4,EGSAVE+4      RESTORE REGISTERS          V7A42
         BR        R14                 RETURN                     V7A42
         SPACE     ,                                              V7A42
*                  HERE FOR END OF FILE                           V7A42
         SPACE     ,                                              V7A42
EGEOF    L         R2,EGSAVE           RESTORE DCB POINTER        V7A42
         MVC       DCBEODAD+1(3,R2),EGEODAD  RESTORE EODAD        V7A42
         L         R14,EGSAVE14        RESTORE REGISTER 14        V7A42
         LM        R1,R4,EGSAVE        RESTORE REGISTERS          V7A42
         L         R15,DCBEODAD(,R1)   POINT AT REAL EOF ADDR     V7A42
         BR        R15                 OFF TO IT                  V7A42
         SPACE     ,                                              V7A42
*                  CONCATENATION TESTER                           V7A42
         SPACE     ,                                              V7A42
EGCONCAT TM        SYSINSW,X'01'       CONCATENATION .Q           V7A42
         BCR       8,R14               IF NOT, RETURN IMMEDIATELY V7A42
         C         R4,=A(EGSYSIN)      IS THIS SYSIN .Q           V7A42
         BNE       EGRECFM             RETRY IF SYSUP             V7A42
         TM        PARBYT2,X'40'       IS THIS UPDATE .Q          V7A42
         BO        EGCONC1             IF SO, SKIP NEXT INSN      V7A42
         MVC       DCBGETSV+1(3),SYSIN+DCBGET+1 SAVE GET ADDR AGN V7A42
EGCONC1  MVC       SYSIN+L1DCBPAD+1(3),SYSIN+DCBGET+1 FOR CLOSE   V7A42
         MVC       SYSIN+DCBGET+1(3),SYSINAD+1   RESET FAKE ADDR  V7A42
         B         EGRECFM             GO RETRY THE OPERATION     V7A42
         SPACE     ,                                              V7A42
*                  DCB DESCRIPTION BLOCKS                         V7A42
         SPACE     ,                                              V7A42
*                  FIRST, THE FORMAT                              V7A42
         SPACE     ,                                              V7A42
EGDDNAM  EQU       0                   POINTER TO DDNAME          V7A42
EGRECAD  EQU       4                   LOGICAL RECORD ADDRESS     V7A42
EGEOBAD  EQU       8                   END OF BLOCK ADDRESS       V7A42
EGGADR   EQU       12                  PTR TO GET ROUTINE ADDR    V7A42
         SPACE     ,                                              V7A42
*                  NOW THE BLOCK FOR SYSIN                        V7A42
         SPACE     ,                                              V7A42
EGSYSIN  DC        A(LIST1+L1DDNAM+L1SIN*2) SYSIN DDNAME          V7A42
         DC        2A(*-*)             RECORD, END OF BLOCK ADDR  V7A42
         DC        A(SYSIN+L1DCBPAD)   GET ROUTINE POINTER ADDR   V7A42
         SPACE     ,                                              V7A42
*                  THE BLOCK FOR SYSUP                            V7A42
         SPACE     ,                                              V7A42
EGSYSUP  DC        A(LIST1+L1DDNAM+L1SUP*2) SYSUP DDNAME          V7A42
         DC        2A(*-*)             RECORD, END OF BLOCK ADDR  V7A42
         DC        A(SYSUP+DCBGET)     GET ROUTINE POINTER ADDR   V7A42
         SPACE     ,                                              V7A42
*                  OTHER CONSTANTS, WORK AREAS, ETC.              V7A42
         SPACE     ,                                              V7A42
EGSAVE   DS        4F                  REGISTER SAVE AREA         V7A42
EGSAVE14 DS        F                   SAVE AREA FOR REGISTER 14  V7A42
EGBUFFER DS        CL80                BUFFER FOR UNSQUISHING     V7A42
EGEODAD  DS        AL3                 SAVE AREA FOR DCBEODAD     V7A42
         SPACE     3                                              V7A42
         END       ASMGASM                                        V7A42
>< ADD NAME=COMMON
><       CHANGE    NAME=COMMON
><       DELETE    SEQ1=01200027,SEQ2=01200027                    V7A32
EXTMWD   DC        A(5,1,9999)         EXECUTION TIME IN SECONDS  V7A32
><       DELETE    SEQ1=02080027,SEQ2=02080027                    V7A43
PARBYT2  DC        AL1(LREF+NUM+STMT+SEQPARM)  *PARBYT2           V7A43
><       DELETE    SEQ1=02260027,SEQ2=02260027                    V7A43
SEQPARM  EQU       X'01'               SEQ            NOSEQ       V7A43
><       DELETE    SEQ1=02300027,SEQ2=02300027                    V7A44
PARBYT3  DC        AL1(UMAP+PRT+YFLAG)      *PARBYT3              V7A44
><       DELETE    SEQ1=02420027,SEQ2=02420027                    V7A44
YFLAG    EQU       X'08'               YFLAG          NOYFLAG     V7A44
><       DELETE    SEQ1=09100027,SEQ2=09100027                    V7A28
*      2 (20)  SET IF SKIPPING COPY BACK TO SYSIN LEVEL           V7A28
><       DELETE    SEQ1=11740027,SEQ2=11740027                    V7A58
POSNOMAX DC        H'240'               MAX POS PARM, 200 NOEXTEN V7A58
*                                                                 V7A49
*        SYSTEM PARAMETER CONSTANTS                               V7A49
*        FORMAT - FLAG BYTE, NAME IN INTERNAL, PARAMETER NUMBER   V7A49
SYSNDX   DC    X'4E2D1C221C170D210000'                            V7A49
SYSECT   DC              X'0E0C1D0001'                            V7A49
SYSDATE  DC    X'4F2D1C221C0D0A1D0E0002'                          V7A49
SYSTIME  DC              X'1D12160E0003'                          V7A49
SYSSTYP  DC              X'1C1D22190004'                          V7A49
SYSPARM  DC              X'190A1B160005'                          V7A49
LASCAN   DC        V(ASCAN)            .                          V7A54
DCLSE    DC        V(DCLOSE)           .                          V7A54
GETAD    DC        V(GETSRC)           .                          V7A54
DLOOKUP  DC        V(LOOKUP)           .                          V7A54
ADWS     DC        V(BWFORC)           .                          V7A54
ADWS2    DC        V(BWRITE)           .                          V7A54
VCHECK   DC        V(LIBCHK)           .                          V7A54
VLREAD   DC        V(LIBRFND1)         .                          V7A54
VWAIT    DC        V(LIBWAIT)          .                          V7A54
AKLOSIT  DC        V(KLOSIT)           .                          V7A54
VENTKWB  DC        V(ENTKWB)           .                          V7A54
><       DELETE    SEQ1=14800027,SEQ2=14800027                    V7A28
POEND    DC    X'82'          END       33  DC  X'86' IF NOEXTEN  V7A28
><       DELETE    SEQ1=15840027,SEQ2=15840027                    V7A16
DUMLENF1 EQU       1024*26-(F1END-ASMGF1)-(COMEND-COMMON)         V7A16
><       DELETE    SEQ1=15940027,SEQ2=15940027                    V7A16
*        SO ROUND UP ASMGF2A TO A LARGER FIGURE.                  V7A16
><       DELETE    SEQ1=15980027,SEQ2=15980027                    V7A16
ELENF2   EQU       10500               ROUNDED EST F2 LENGTH      V7A16
><       DELETE    SEQ1=16000027,SEQ2=16000027                    V7A16
         AIF       ('&PHASE' EQ 'ASMGF2').ENDF2T                  V7A16
ASMGF2A  CSECT     ,                   RESUME FORMER CSECT        V7A16
><       DELETE    SEQ1=16020027,SEQ2=16020027                    V7A16
DUMLENF2 EQU   1024*26-(F2AEND-ASMGF2A)-(COMEND-COMMON)-ELENF2    V7A16
><       DELETE    SEQ1=16040027,SEQ2=16040027                    V7A16
         DS        (DUMLENF2)X         UP SIZE OF ASMGF2A         V7A16
FIND     EQU       *                   DUMMY FIND ADDR FOR F2A    V7A16
><       DELETE    SEQ1=16080027,SEQ2=16080027                    V7A16
.ENDF2T  ANOP      ,                                              V7A16
><       DELETE    SEQ1=16100027,SEQ2=16100027                    V7A16
*                                                                 V7A16
><       DELETE    SEQ1=16120027,SEQ2=16120027                    V7A16
ALENF2   EQU       (F2END-ASMGF2+99)/100*100  ROUNDED ACTUAL F2   V7A16
><       DELETE    SEQ1=16140027,SEQ2=16140027                    V7A16
F2TEST   DC        0S(ALENF2-ELENF2),0S(ELENF2-ALENF2)            V7A16
         DC        0D'0'               THIS IS WHERE WE'RE AT     V7A16
>< ADD NAME=FDIMEN
><       CHANGE    NAME=FDIMEN
><       DELETE    SEQ1=04758026,SEQ2=04758026                    V7A43
CTSEQI   EQU   CT5+68 .7   .1      SEQ NUMBERS FOR SQUISHED FILES V7A43
><       DELETE    SEQ1=04763026,SEQ2=04763026                    V7A44
CTPRTI   EQU   CT5+69 .3   .1      PRINTER OPTION SPECIFIED       V7A44
><       DELETE    SEQ1=04764026,SEQ2=04764026                    V7A44
CTYFLGI  EQU   CT5+69 .4   .1      Y-CON ERROR FLAG               V7A44
>< ADD NAME=LIST1EQU
><       CHANGE    NAME=LIST1EQU
L1DBLK   EQU       L1BLANKS+134        ADDR OF DEBLOCK ROUTINE    V7A42
><       DELETE    SEQ1=01340026,SEQ2=01340026                    V7A42
L1$JOB   EQU       L1DBLK+8            EXECUTE JOB SEPARATOR      V7A42
>< ADD NAME=UPEMSG
><       CHANGE    NAME=UPEMSG
         AIF       ('&SVC' EQ '').SKIP02                          V7A48
         MEXIT     ,                                              V7A48
.SKIP02  ANOP      ,                                              V7A48
         L         R3,=A(UPERROR)      ERROR BASE                 V7A48
         LA        R3,$LIT&CNBR-UPERROR(,R3)  ERROR TEXT          V7A48
./ ADD NAME=UPEMSG
><       CHANGE    NAME=UPEMSG
         AIF       ('&SVC' EQ '').SKIP02                          V7A48
         MEXIT     ,                                              V7A48
.SKIP02  ANOP      ,                                              V7A48
         L         R3,=A(UPERROR)      ERROR BASE                 V7A48
         LA        R3,$LIT&CNBR-UPERROR(,R3)  ERROR TEXT          V7A48
